(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [7894], {
        19888: function(e, t) {
            "use strict";

            function r(e) {
                if (!Number.isSafeInteger(e) || e < 0) throw Error(`Wrong positive integer: ${e}`)
            }

            function n(e) {
                if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`)
            }

            function i(e, ...t) {
                if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
                if (t.length > 0 && !t.includes(e.length)) throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)
            }

            function s(e) {
                if ("function" != typeof e || "function" != typeof e.create) throw Error("Hash should be wrapped by utils.wrapConstructor");
                r(e.outputLen), r(e.blockLen)
            }

            function o(e, t = !0) {
                if (e.destroyed) throw Error("Hash instance has been destroyed");
                if (t && e.finished) throw Error("Hash#digest() has already been called")
            }

            function a(e, t) {
                i(e);
                let r = t.outputLen;
                if (e.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0, t.number = r, t.bool = n, t.bytes = i, t.hash = s, t.exists = o, t.output = a, t.default = {
                number: r,
                bool: n,
                bytes: i,
                hash: s,
                exists: o,
                output: a
            }
        },
        1805: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.add = t.toBig = t.split = t.fromBig = void 0;
            let r = BigInt(4294967296 - 1),
                n = BigInt(32);

            function i(e, t = !1) {
                return t ? {
                    h: Number(e & r),
                    l: Number(e >> n & r)
                } : {
                    h: 0 | Number(e >> n & r),
                    l: 0 | Number(e & r)
                }
            }

            function s(e, t = !1) {
                let r = new Uint32Array(e.length),
                    n = new Uint32Array(e.length);
                for (let s = 0; s < e.length; s++) {
                    let {
                        h: o,
                        l: a
                    } = i(e[s], t);
                    [r[s], n[s]] = [o, a]
                }
                return [r, n]
            }

            function o(e, t, r, n) {
                let i = (t >>> 0) + (n >>> 0);
                return {
                    h: e + r + (i / 4294967296 | 0) | 0,
                    l: 0 | i
                }
            }
            t.fromBig = i, t.split = s, t.toBig = (e, t) => BigInt(e >>> 0) << n | BigInt(t >>> 0), t.add = o;
            let a = {
                fromBig: i,
                split: s,
                toBig: t.toBig,
                shrSH: (e, t, r) => e >>> r,
                shrSL: (e, t, r) => e << 32 - r | t >>> r,
                rotrSH: (e, t, r) => e >>> r | t << 32 - r,
                rotrSL: (e, t, r) => e << 32 - r | t >>> r,
                rotrBH: (e, t, r) => e << 64 - r | t >>> r - 32,
                rotrBL: (e, t, r) => e >>> r - 32 | t << 64 - r,
                rotr32H: (e, t) => t,
                rotr32L: (e, t) => e,
                rotlSH: (e, t, r) => e << r | t >>> 32 - r,
                rotlSL: (e, t, r) => t << r | e >>> 32 - r,
                rotlBH: (e, t, r) => t << r - 32 | e >>> 64 - r,
                rotlBL: (e, t, r) => e << r - 32 | t >>> 64 - r,
                add: o,
                add3L: (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0),
                add3H: (e, t, r, n) => t + r + n + (e / 4294967296 | 0) | 0,
                add4L: (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0),
                add4H: (e, t, r, n, i) => t + r + n + i + (e / 4294967296 | 0) | 0,
                add5H: (e, t, r, n, i, s) => t + r + n + i + s + (e / 4294967296 | 0) | 0,
                add5L: (e, t, r, n, i) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0)
            };
            t.default = a
        },
        88531: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.crypto = void 0, t.crypto = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0
        },
        71617: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.shake256 = t.shake128 = t.keccak_512 = t.keccak_384 = t.keccak_256 = t.keccak_224 = t.sha3_512 = t.sha3_384 = t.sha3_256 = t.sha3_224 = t.Keccak = t.keccakP = void 0;
            let n = r(19888),
                i = r(1805),
                s = r(15630),
                [o, a, l] = [
                    [],
                    [],
                    []
                ],
                u = BigInt(0),
                c = BigInt(1),
                d = BigInt(2),
                h = BigInt(7),
                f = BigInt(256),
                p = BigInt(113);
            for (let e = 0, t = c, r = 1, n = 0; e < 24; e++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], o.push(2 * (5 * n + r)), a.push((e + 1) * (e + 2) / 2 % 64);
                let i = u;
                for (let e = 0; e < 7; e++)(t = (t << c ^ (t >> h) * p) % f) & d && (i ^= c << (c << BigInt(e)) - c);
                l.push(i)
            }
            let [g, m] = i.default.split(l, !0), y = (e, t, r) => r > 32 ? i.default.rotlBH(e, t, r) : i.default.rotlSH(e, t, r), b = (e, t, r) => r > 32 ? i.default.rotlBL(e, t, r) : i.default.rotlSL(e, t, r);

            function w(e, t = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - t; n < 24; n++) {
                    for (let t = 0; t < 10; t++) r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                    for (let t = 0; t < 10; t += 2) {
                        let n = (t + 8) % 10,
                            i = (t + 2) % 10,
                            s = r[i],
                            o = r[i + 1],
                            a = y(s, o, 1) ^ r[n],
                            l = b(s, o, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) e[t + r] ^= a, e[t + r + 1] ^= l
                    }
                    let t = e[2],
                        i = e[3];
                    for (let r = 0; r < 24; r++) {
                        let n = a[r],
                            s = y(t, i, n),
                            l = b(t, i, n),
                            u = o[r];
                        t = e[u], i = e[u + 1], e[u] = s, e[u + 1] = l
                    }
                    for (let t = 0; t < 50; t += 10) {
                        for (let n = 0; n < 10; n++) r[n] = e[t + n];
                        for (let n = 0; n < 10; n++) e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    e[0] ^= g[n], e[1] ^= m[n]
                }
                r.fill(0)
            }
            t.keccakP = w;
            class A extends s.Hash {
                constructor(e, t, r, i = !1, o = 24) {
                    if (super(), this.blockLen = e, this.suffix = t, this.outputLen = r, this.enableXOF = i, this.rounds = o, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, n.default.number(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = (0, s.u32)(this.state)
                }
                keccak() {
                    w(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(e) {
                    n.default.exists(this);
                    let {
                        blockLen: t,
                        state: r
                    } = this;
                    e = (0, s.toBytes)(e);
                    let i = e.length;
                    for (let n = 0; n < i;) {
                        let s = Math.min(t - this.pos, i - n);
                        for (let t = 0; t < s; t++) r[this.pos++] ^= e[n++];
                        this.pos === t && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: e,
                        suffix: t,
                        pos: r,
                        blockLen: n
                    } = this;
                    e[r] ^= t, (128 & t) != 0 && r === n - 1 && this.keccak(), e[n - 1] ^= 128, this.keccak()
                }
                writeInto(e) {
                    n.default.exists(this, !1), n.default.bytes(e), this.finish();
                    let t = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = e.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let s = Math.min(r - this.posOut, i - n);
                        e.set(t.subarray(this.posOut, this.posOut + s), n), this.posOut += s, n += s
                    }
                    return e
                }
                xofInto(e) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(e)
                }
                xof(e) {
                    return n.default.number(e), this.xofInto(new Uint8Array(e))
                }
                digestInto(e) {
                    if (n.default.output(e, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(e), this.destroy(), e
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(e) {
                    let {
                        blockLen: t,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: s
                    } = this;
                    return e || (e = new A(t, r, n, s, i)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = i, e.suffix = r, e.outputLen = n, e.enableXOF = s, e.destroyed = this.destroyed, e
                }
            }
            t.Keccak = A;
            let v = (e, t, r) => (0, s.wrapConstructor)(() => new A(t, e, r));
            t.sha3_224 = v(6, 144, 28), t.sha3_256 = v(6, 136, 32), t.sha3_384 = v(6, 104, 48), t.sha3_512 = v(6, 72, 64), t.keccak_224 = v(1, 144, 28), t.keccak_256 = v(1, 136, 32), t.keccak_384 = v(1, 104, 48), t.keccak_512 = v(1, 72, 64);
            let E = (e, t, r) => (0, s.wrapXOFConstructorWithOpts)((n = {}) => new A(t, e, void 0 === n.dkLen ? r : n.dkLen, !0));
            t.shake128 = E(31, 168, 16), t.shake256 = E(31, 136, 32)
        },
        15630: function(e, t, r) {
            "use strict"; /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = t.wrapXOFConstructorWithOpts = t.wrapConstructorWithOpts = t.wrapConstructor = t.checkOpts = t.Hash = t.concatBytes = t.toBytes = t.utf8ToBytes = t.asyncLoop = t.nextTick = t.hexToBytes = t.bytesToHex = t.isLE = t.rotr = t.createView = t.u32 = t.u8 = void 0;
            let n = r(88531),
                i = e => e instanceof Uint8Array;
            if (t.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength), t.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)), t.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength), t.rotr = (e, t) => e << 32 - t | e >>> t, t.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0], !t.isLE) throw Error("Non little-endian hardware is not supported");
            let s = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));
            t.bytesToHex = function(e) {
                if (!i(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += s[e[r]];
                return t
            }, t.hexToBytes = function(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = e.slice(n, n + 2),
                        s = Number.parseInt(i, 16);
                    if (Number.isNaN(s) || s < 0) throw Error("Invalid byte sequence");
                    r[t] = s
                }
                return r
            };
            let o = async () => {};
            async function a(e, r, n) {
                let i = Date.now();
                for (let s = 0; s < e; s++) {
                    n(s);
                    let e = Date.now() - i;
                    e >= 0 && e < r || (await (0, t.nextTick)(), i += e)
                }
            }

            function l(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }

            function u(e) {
                if ("string" == typeof e && (e = l(e)), !i(e)) throw Error(`expected Uint8Array, got ${typeof e}`);
                return e
            }
            t.nextTick = o, t.asyncLoop = a, t.utf8ToBytes = l, t.toBytes = u, t.concatBytes = function(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!i(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            }, t.Hash = class {
                clone() {
                    return this._cloneInto()
                }
            };
            let c = e => "[object Object]" === Object.prototype.toString.call(e) && e.constructor === Object;
            t.checkOpts = function(e, t) {
                if (void 0 !== t && ("object" != typeof t || !c(t))) throw Error("Options should be object or undefined");
                let r = Object.assign(e, t);
                return r
            }, t.wrapConstructor = function(e) {
                let t = t => e().update(u(t)).digest(),
                    r = e();
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = () => e(), t
            }, t.wrapConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(u(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.wrapXOFConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(u(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.randomBytes = function(e = 32) {
                if (n.crypto && "function" == typeof n.crypto.getRandomValues) return n.crypto.getRandomValues(new Uint8Array(e));
                throw Error("crypto.getRandomValues must be defined")
            }
        },
        49615: function(e, t, r) {
            "use strict";
            let n, i; /*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.utils = t.schnorr = t.verify = t.signSync = t.sign = t.getSharedSecret = t.recoverPublicKey = t.getPublicKey = t.Signature = t.Point = t.CURVE = void 0;
            let s = r(77695),
                o = BigInt(0),
                a = BigInt(1),
                l = BigInt(2),
                u = BigInt(3),
                c = BigInt(8),
                d = Object.freeze({
                    a: o,
                    b: BigInt(7),
                    P: BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
                    n: BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                    h: a,
                    Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
                    Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")
                });
            t.CURVE = d;
            let h = (e, t) => (e + t / l) / t,
                f = {
                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                    splitScalar(e) {
                        let {
                            n: t
                        } = d, r = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), n = -a * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), i = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), s = BigInt("0x100000000000000000000000000000000"), o = h(r * e, t), l = h(-n * e, t), u = L(e - o * r - l * i, t), c = L(-o * n - l * r, t), f = u > s, p = c > s;
                        if (f && (u = t - u), p && (c = t - c), u > s || c > s) throw Error("splitScalarEndo: Endomorphism failed, k=" + e);
                        return {
                            k1neg: f,
                            k1: u,
                            k2neg: p,
                            k2: c
                        }
                    }
                };

            function p(e) {
                let {
                    a: t,
                    b: r
                } = d, n = L(e * e), i = L(n * e);
                return L(i + t * e + r)
            }
            let g = d.a === o;
            class m extends Error {
                constructor(e) {
                    super(e)
                }
            }

            function y(e) {
                if (!(e instanceof b)) throw TypeError("JacobianPoint expected")
            }
            class b {
                constructor(e, t, r) {
                    this.x = e, this.y = t, this.z = r
                }
                static fromAffine(e) {
                    if (!(e instanceof v)) throw TypeError("JacobianPoint#fromAffine: expected Point");
                    return e.equals(v.ZERO) ? b.ZERO : new b(e.x, e.y, a)
                }
                static toAffineBatch(e) {
                    let t = function(e, t = d.P) {
                        let r = Array(e.length),
                            n = e.reduce((e, n, i) => n === o ? e : (r[i] = e, L(e * n, t)), a),
                            i = j(n, t);
                        return e.reduceRight((e, n, i) => n === o ? e : (r[i] = L(e * r[i], t), L(e * n, t)), i), r
                    }(e.map(e => e.z));
                    return e.map((e, r) => e.toAffine(t[r]))
                }
                static normalizeZ(e) {
                    return b.toAffineBatch(e).map(b.fromAffine)
                }
                equals(e) {
                    y(e);
                    let {
                        x: t,
                        y: r,
                        z: n
                    } = this, {
                        x: i,
                        y: s,
                        z: o
                    } = e, a = L(n * n), l = L(o * o), u = L(t * l), c = L(i * a), d = L(L(r * o) * l), h = L(L(s * n) * a);
                    return u === c && d === h
                }
                negate() {
                    return new b(this.x, L(-this.y), this.z)
                }
                double() {
                    let {
                        x: e,
                        y: t,
                        z: r
                    } = this, n = L(e * e), i = L(t * t), s = L(i * i), o = e + i, a = L(l * (L(o * o) - n - s)), d = L(u * n), h = L(d * d), f = L(h - l * a), p = L(d * (a - f) - c * s), g = L(l * t * r);
                    return new b(f, p, g)
                }
                add(e) {
                    y(e);
                    let {
                        x: t,
                        y: r,
                        z: n
                    } = this, {
                        x: i,
                        y: s,
                        z: a
                    } = e;
                    if (i === o || s === o) return this;
                    if (t === o || r === o) return e;
                    let u = L(n * n),
                        c = L(a * a),
                        d = L(t * c),
                        h = L(i * u),
                        f = L(L(r * a) * c),
                        p = L(L(s * n) * u),
                        g = L(h - d),
                        m = L(p - f);
                    if (g === o) return m === o ? this.double() : b.ZERO;
                    let w = L(g * g),
                        A = L(g * w),
                        v = L(d * w),
                        E = L(m * m - A - l * v),
                        P = L(m * (v - E) - f * A),
                        S = L(n * a * g);
                    return new b(E, P, S)
                }
                subtract(e) {
                    return this.add(e.negate())
                }
                multiplyUnsafe(e) {
                    let t = b.ZERO;
                    if ("bigint" == typeof e && e === o) return t;
                    let r = M(e);
                    if (r === a) return this;
                    if (!g) {
                        let e = t,
                            n = this;
                        for (; r > o;) r & a && (e = e.add(n)), n = n.double(), r >>= a;
                        return e
                    }
                    let {
                        k1neg: n,
                        k1: i,
                        k2neg: s,
                        k2: l
                    } = f.splitScalar(r), u = t, c = t, d = this;
                    for (; i > o || l > o;) i & a && (u = u.add(d)), l & a && (c = c.add(d)), d = d.double(), i >>= a, l >>= a;
                    return n && (u = u.negate()), s && (c = c.negate()), c = new b(L(c.x * f.beta), c.y, c.z), u.add(c)
                }
                precomputeWindow(e) {
                    let t = g ? 128 / e + 1 : 256 / e + 1,
                        r = [],
                        n = this,
                        i = n;
                    for (let s = 0; s < t; s++) {
                        i = n, r.push(i);
                        for (let t = 1; t < 2 ** (e - 1); t++) i = i.add(n), r.push(i);
                        n = i.double()
                    }
                    return r
                }
                wNAF(e, t) {
                    !t && this.equals(b.BASE) && (t = v.BASE);
                    let r = t && t._WINDOW_SIZE || 1;
                    if (256 % r) throw Error("Point#wNAF: Invalid precomputation window, must be power of 2");
                    let n = t && A.get(t);
                    !n && (n = this.precomputeWindow(r), t && 1 !== r && (n = b.normalizeZ(n), A.set(t, n)));
                    let i = b.ZERO,
                        s = b.BASE,
                        o = 1 + (g ? 128 / r : 256 / r),
                        l = 2 ** (r - 1),
                        u = BigInt(2 ** r - 1),
                        c = 2 ** r,
                        d = BigInt(r);
                    for (let t = 0; t < o; t++) {
                        let r = t * l,
                            o = Number(e & u);
                        e >>= d, o > l && (o -= c, e += a);
                        let h = r + Math.abs(o) - 1,
                            f = t % 2 != 0,
                            p = o < 0;
                        0 === o ? s = s.add(w(f, n[r])) : i = i.add(w(p, n[h]))
                    }
                    return {
                        p: i,
                        f: s
                    }
                }
                multiply(e, t) {
                    let r, n, i = M(e);
                    if (g) {
                        let {
                            k1neg: e,
                            k1: s,
                            k2neg: o,
                            k2: a
                        } = f.splitScalar(i), {
                            p: l,
                            f: u
                        } = this.wNAF(s, t), {
                            p: c,
                            f: d
                        } = this.wNAF(a, t);
                        l = w(e, l), c = w(o, c), c = new b(L(c.x * f.beta), c.y, c.z), r = l.add(c), n = u.add(d)
                    } else {
                        let {
                            p: e,
                            f: s
                        } = this.wNAF(i, t);
                        r = e, n = s
                    }
                    return b.normalizeZ([r, n])[0]
                }
                toAffine(e) {
                    let {
                        x: t,
                        y: r,
                        z: n
                    } = this, i = this.equals(b.ZERO);
                    null == e && (e = i ? c : j(n));
                    let s = e,
                        o = L(s * s),
                        l = L(o * s),
                        u = L(t * o),
                        d = L(r * l),
                        h = L(n * s);
                    if (i) return v.ZERO;
                    if (h !== a) throw Error("invZ was invalid");
                    return new v(u, d)
                }
            }

            function w(e, t) {
                let r = t.negate();
                return e ? r : t
            }
            b.BASE = new b(d.Gx, d.Gy, a), b.ZERO = new b(o, a, o);
            let A = new WeakMap;
            class v {
                constructor(e, t) {
                    this.x = e, this.y = t
                }
                _setWindowSize(e) {
                    this._WINDOW_SIZE = e, A.delete(this)
                }
                hasEvenY() {
                    return this.y % l === o
                }
                static fromCompressedHex(e) {
                    let t = 32 === e.length,
                        r = I(t ? e : e.subarray(1));
                    if (!K(r)) throw Error("Point is not on curve");
                    let n = p(r),
                        i = function(e) {
                            let {
                                P: t
                            } = d, r = BigInt(6), n = BigInt(11), i = BigInt(22), s = BigInt(23), o = BigInt(44), a = BigInt(88), c = e * e * e % t, h = c * c * e % t, f = U(h, u) * h % t, p = U(f, u) * h % t, g = U(p, l) * c % t, m = U(g, n) * g % t, y = U(m, i) * m % t, b = U(y, o) * y % t, w = U(b, a) * b % t, A = U(w, o) * y % t, v = U(A, u) * h % t, E = U(v, s) * m % t, P = U(E, r) * c % t, S = U(P, l);
                            if (S * S % t !== e) throw Error("Cannot find square root");
                            return S
                        }(n),
                        s = (i & a) === a;
                    if (t) s && (i = L(-i));
                    else {
                        let t = (1 & e[0]) == 1;
                        t !== s && (i = L(-i))
                    }
                    let o = new v(r, i);
                    return o.assertValidity(), o
                }
                static fromUncompressedHex(e) {
                    let t = I(e.subarray(1, 33)),
                        r = I(e.subarray(33, 65)),
                        n = new v(t, r);
                    return n.assertValidity(), n
                }
                static fromHex(e) {
                    let t = R(e),
                        r = t.length,
                        n = t[0];
                    if (32 === r || 33 === r && (2 === n || 3 === n)) return this.fromCompressedHex(t);
                    if (65 === r && 4 === n) return this.fromUncompressedHex(t);
                    throw Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${r}`)
                }
                static fromPrivateKey(e) {
                    return v.BASE.multiply(V(e))
                }
                static fromSignature(e, t, r) {
                    let {
                        r: n,
                        s: i
                    } = W(t);
                    if (![0, 1, 2, 3].includes(r)) throw Error("Cannot recover: invalid recovery bit");
                    let s = F(R(e)),
                        {
                            n: o
                        } = d,
                        a = 2 === r || 3 === r ? n + o : n,
                        l = j(a, o),
                        u = L(-s * l, o),
                        c = L(i * l, o),
                        h = 1 & r ? "03" : "02",
                        f = v.fromHex(h + T(a)),
                        p = v.BASE.multiplyAndAddUnsafe(f, u, c);
                    if (!p) throw Error("Cannot recover signature: point at infinify");
                    return p.assertValidity(), p
                }
                toRawBytes(e = !1) {
                    return D(this.toHex(e))
                }
                toHex(e = !1) {
                    let t = T(this.x);
                    if (!e) return `04${t}${T(this.y)}`; {
                        let e = this.hasEvenY() ? "02" : "03";
                        return `${e}${t}`
                    }
                }
                toHexX() {
                    return this.toHex(!0).slice(2)
                }
                toRawX() {
                    return this.toRawBytes(!0).slice(1)
                }
                assertValidity() {
                    let e = "Point is not on elliptic curve",
                        {
                            x: t,
                            y: r
                        } = this;
                    if (!K(t) || !K(r)) throw Error(e);
                    let n = L(r * r),
                        i = p(t);
                    if (L(n - i) !== o) throw Error(e)
                }
                equals(e) {
                    return this.x === e.x && this.y === e.y
                }
                negate() {
                    return new v(this.x, L(-this.y))
                }
                double() {
                    return b.fromAffine(this).double().toAffine()
                }
                add(e) {
                    return b.fromAffine(this).add(b.fromAffine(e)).toAffine()
                }
                subtract(e) {
                    return this.add(e.negate())
                }
                multiply(e) {
                    return b.fromAffine(this).multiply(e, this).toAffine()
                }
                multiplyAndAddUnsafe(e, t, r) {
                    let n = b.fromAffine(this),
                        i = t === o || t === a || this !== v.BASE ? n.multiplyUnsafe(t) : n.multiply(t),
                        s = b.fromAffine(e).multiplyUnsafe(r),
                        l = i.add(s);
                    return l.equals(b.ZERO) ? void 0 : l.toAffine()
                }
            }

            function E(e) {
                return Number.parseInt(e[0], 16) >= 8 ? "00" + e : e
            }

            function P(e) {
                if (e.length < 2 || 2 !== e[0]) throw Error(`Invalid signature integer tag: ${C(e)}`);
                let t = e[1],
                    r = e.subarray(2, t + 2);
                if (!t || r.length !== t) throw Error("Invalid signature integer: wrong length");
                if (0 === r[0] && r[1] <= 127) throw Error("Invalid signature integer: trailing length");
                return {
                    data: I(r),
                    left: e.subarray(t + 2)
                }
            }
            t.Point = v, v.BASE = new v(d.Gx, d.Gy), v.ZERO = new v(o, o);
            class S {
                constructor(e, t) {
                    this.r = e, this.s = t, this.assertValidity()
                }
                static fromCompact(e) {
                    let t = e instanceof Uint8Array,
                        r = "Signature.fromCompact";
                    if ("string" != typeof e && !t) throw TypeError(`${r}: Expected string or Uint8Array`);
                    let n = t ? C(e) : e;
                    if (128 !== n.length) throw Error(`${r}: Expected 64-byte hex`);
                    return new S(B(n.slice(0, 64)), B(n.slice(64, 128)))
                }
                static fromDER(e) {
                    let t = e instanceof Uint8Array;
                    if ("string" != typeof e && !t) throw TypeError("Signature.fromDER: Expected string or Uint8Array");
                    let {
                        r,
                        s: n
                    } = function(e) {
                        if (e.length < 2 || 48 != e[0]) throw Error(`Invalid signature tag: ${C(e)}`);
                        if (e[1] !== e.length - 2) throw Error("Invalid signature: incorrect length");
                        let {
                            data: t,
                            left: r
                        } = P(e.subarray(2)), {
                            data: n,
                            left: i
                        } = P(r);
                        if (i.length) throw Error(`Invalid signature: left bytes after parsing: ${C(i)}`);
                        return {
                            r: t,
                            s: n
                        }
                    }(t ? e : D(e));
                    return new S(r, n)
                }
                static fromHex(e) {
                    return this.fromDER(e)
                }
                assertValidity() {
                    let {
                        r: e,
                        s: t
                    } = this;
                    if (!$(e)) throw Error("Invalid Signature: r must be 0 < r < n");
                    if (!$(t)) throw Error("Invalid Signature: s must be 0 < s < n")
                }
                hasHighS() {
                    let e = d.n >> a;
                    return this.s > e
                }
                normalizeS() {
                    return this.hasHighS() ? new S(this.r, L(-this.s, d.n)) : this
                }
                toDERRawBytes() {
                    return D(this.toDERHex())
                }
                toDERHex() {
                    let e = E(_(this.s)),
                        t = E(_(this.r)),
                        r = e.length / 2,
                        n = t.length / 2,
                        i = _(r),
                        s = _(n),
                        o = _(n + r + 4);
                    return `30${o}02${s}${t}02${i}${e}`
                }
                toRawBytes() {
                    return this.toDERRawBytes()
                }
                toHex() {
                    return this.toDERHex()
                }
                toCompactRawBytes() {
                    return D(this.toCompactHex())
                }
                toCompactHex() {
                    return T(this.r) + T(this.s)
                }
            }

            function O(...e) {
                if (!e.every(e => e instanceof Uint8Array)) throw Error("Uint8Array list expected");
                if (1 === e.length) return e[0];
                let t = e.reduce((e, t) => e + t.length, 0),
                    r = new Uint8Array(t);
                for (let t = 0, n = 0; t < e.length; t++) {
                    let i = e[t];
                    r.set(i, n), n += i.length
                }
                return r
            }
            t.Signature = S;
            let k = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));

            function C(e) {
                if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
                let t = "";
                for (let r = 0; r < e.length; r++) t += k[e[r]];
                return t
            }
            let x = BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");

            function T(e) {
                if ("bigint" != typeof e) throw Error("Expected bigint");
                if (!(o <= e && e < x)) throw Error("Expected number 0 <= n < 2^256");
                return e.toString(16).padStart(64, "0")
            }

            function N(e) {
                let t = D(T(e));
                if (32 !== t.length) throw Error("Error: expected 32 bytes");
                return t
            }

            function _(e) {
                let t = e.toString(16);
                return 1 & t.length ? `0${t}` : t
            }

            function B(e) {
                if ("string" != typeof e) throw TypeError("hexToNumber: expected string, got " + typeof e);
                return BigInt(`0x${e}`)
            }

            function D(e) {
                if ("string" != typeof e) throw TypeError("hexToBytes: expected string, got " + typeof e);
                if (e.length % 2) throw Error("hexToBytes: received invalid unpadded hex" + e.length);
                let t = new Uint8Array(e.length / 2);
                for (let r = 0; r < t.length; r++) {
                    let n = 2 * r,
                        i = e.slice(n, n + 2),
                        s = Number.parseInt(i, 16);
                    if (Number.isNaN(s) || s < 0) throw Error("Invalid byte sequence");
                    t[r] = s
                }
                return t
            }

            function I(e) {
                return B(C(e))
            }

            function R(e) {
                return e instanceof Uint8Array ? Uint8Array.from(e) : D(e)
            }

            function M(e) {
                if ("number" == typeof e && Number.isSafeInteger(e) && e > 0) return BigInt(e);
                if ("bigint" == typeof e && $(e)) return e;
                throw TypeError("Expected valid private scalar: 0 < scalar < curve.n")
            }

            function L(e, t = d.P) {
                let r = e % t;
                return r >= o ? r : t + r
            }

            function U(e, t) {
                let {
                    P: r
                } = d, n = e;
                for (; t-- > o;) n *= n, n %= r;
                return n
            }

            function j(e, t = d.P) {
                if (e === o || t <= o) throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);
                let r = L(e, t),
                    n = t,
                    i = o,
                    s = a,
                    l = a,
                    u = o;
                for (; r !== o;) {
                    let e = n / r,
                        t = n % r,
                        o = i - l * e,
                        a = s - u * e;
                    n = r, r = t, i = l, s = u, l = o, u = a
                }
                let c = n;
                if (c !== a) throw Error("invert: does not exist");
                return L(i, t)
            }

            function F(e, t = !1) {
                let r = function(e) {
                    let t = 8 * e.length - 256,
                        r = I(e);
                    return t > 0 ? r >> BigInt(t) : r
                }(e);
                if (t) return r;
                let {
                    n
                } = d;
                return r >= n ? r - n : r
            }
            class H {
                constructor(e, t) {
                    if (this.hashLen = e, this.qByteLen = t, "number" != typeof e || e < 2) throw Error("hashLen must be a number");
                    if ("number" != typeof t || t < 2) throw Error("qByteLen must be a number");
                    this.v = new Uint8Array(e).fill(1), this.k = new Uint8Array(e).fill(0), this.counter = 0
                }
                hmac(...e) {
                    return t.utils.hmacSha256(this.k, ...e)
                }
                hmacSync(...e) {
                    return i(this.k, ...e)
                }
                checkSync() {
                    if ("function" != typeof i) throw new m("hmacSha256Sync needs to be set")
                }
                incr() {
                    if (this.counter >= 1e3) throw Error("Tried 1,000 k values for sign(), all were invalid");
                    this.counter += 1
                }
                async reseed(e = new Uint8Array) {
                    this.k = await this.hmac(this.v, Uint8Array.from([0]), e), this.v = await this.hmac(this.v), 0 !== e.length && (this.k = await this.hmac(this.v, Uint8Array.from([1]), e), this.v = await this.hmac(this.v))
                }
                reseedSync(e = new Uint8Array) {
                    this.checkSync(), this.k = this.hmacSync(this.v, Uint8Array.from([0]), e), this.v = this.hmacSync(this.v), 0 !== e.length && (this.k = this.hmacSync(this.v, Uint8Array.from([1]), e), this.v = this.hmacSync(this.v))
                }
                async generate() {
                    this.incr();
                    let e = 0,
                        t = [];
                    for (; e < this.qByteLen;) {
                        this.v = await this.hmac(this.v);
                        let r = this.v.slice();
                        t.push(r), e += this.v.length
                    }
                    return O(...t)
                }
                generateSync() {
                    this.checkSync(), this.incr();
                    let e = 0,
                        t = [];
                    for (; e < this.qByteLen;) {
                        this.v = this.hmacSync(this.v);
                        let r = this.v.slice();
                        t.push(r), e += this.v.length
                    }
                    return O(...t)
                }
            }

            function $(e) {
                return o < e && e < d.n
            }

            function K(e) {
                return o < e && e < d.P
            }

            function z(e, t, r, n = !0) {
                let {
                    n: i
                } = d, s = F(e, !0);
                if (!$(s)) return;
                let l = j(s, i),
                    u = v.BASE.multiply(s),
                    c = L(u.x, i);
                if (c === o) return;
                let h = L(l * L(t + r * c, i), i);
                if (h === o) return;
                let f = new S(c, h),
                    p = (u.x === f.r ? 0 : 2) | Number(u.y & a);
                return n && f.hasHighS() && (f = f.normalizeS(), p ^= 1), {
                    sig: f,
                    recovery: p
                }
            }

            function V(e) {
                let t;
                if ("bigint" == typeof e) t = e;
                else if ("number" == typeof e && Number.isSafeInteger(e) && e > 0) t = BigInt(e);
                else if ("string" == typeof e) {
                    if (64 !== e.length) throw Error("Expected 32 bytes of private key");
                    t = B(e)
                } else if (e instanceof Uint8Array) {
                    if (32 !== e.length) throw Error("Expected 32 bytes of private key");
                    t = I(e)
                } else throw TypeError("Expected valid private key");
                if (!$(t)) throw Error("Expected private key: 0 < key < n");
                return t
            }

            function G(e) {
                return e instanceof v ? (e.assertValidity(), e) : v.fromHex(e)
            }

            function W(e) {
                if (e instanceof S) return e.assertValidity(), e;
                try {
                    return S.fromDER(e)
                } catch (t) {
                    return S.fromCompact(e)
                }
            }

            function J(e) {
                let t = e instanceof Uint8Array,
                    r = "string" == typeof e,
                    n = (t || r) && e.length;
                return t ? 33 === n || 65 === n : r ? 66 === n || 130 === n : e instanceof v
            }

            function q(e) {
                let t = e.length > 32 ? e.slice(0, 32) : e;
                return I(t)
            }

            function Q(e, r, n) {
                if (null == e) throw Error(`sign: expected valid message hash, not "${e}"`);
                let i = R(e),
                    s = V(r),
                    a = [N(s), function(e) {
                        var t;
                        let r = q(e),
                            n = L(r, d.n);
                        return N(n < o ? r : n)
                    }(i)];
                if (null != n) {
                    !0 === n && (n = t.utils.randomBytes(32));
                    let e = R(n);
                    if (32 !== e.length) throw Error("sign: Expected 32 bytes of extra data");
                    a.push(e)
                }
                let l = O(...a),
                    u = q(i);
                return {
                    seed: l,
                    m: u,
                    d: s
                }
            }

            function Y(e, t) {
                let {
                    sig: r,
                    recovery: n
                } = e, {
                    der: i,
                    recovered: s
                } = Object.assign({
                    canonical: !0,
                    der: !0
                }, t), o = i ? r.toDERRawBytes() : r.toCompactRawBytes();
                return s ? [o, n] : o
            }
            async function Z(e, t, r = {}) {
                let n;
                let {
                    seed: i,
                    m: s,
                    d: o
                } = Q(e, t, r.extraEntropy), a = new H(32, 32);
                for (await a.reseed(i); !(n = z(await a.generate(), s, o, r.canonical));) await a.reseed();
                return Y(n, r)
            }
            t.getPublicKey = function(e, t = !1) {
                return v.fromPrivateKey(e).toRawBytes(t)
            }, t.recoverPublicKey = function(e, t, r, n = !1) {
                return v.fromSignature(e, t, r).toRawBytes(n)
            }, t.getSharedSecret = function(e, t, r = !1) {
                if (J(e)) throw TypeError("getSharedSecret: first arg must be private key");
                if (!J(t)) throw TypeError("getSharedSecret: second arg must be public key");
                let n = G(t);
                return n.assertValidity(), n.multiply(V(e)).toRawBytes(r)
            }, t.sign = Z, t.signSync = function(e, t, r = {}) {
                let n;
                let {
                    seed: i,
                    m: s,
                    d: o
                } = Q(e, t, r.extraEntropy), a = new H(32, 32);
                for (a.reseedSync(i); !(n = z(a.generateSync(), s, o, r.canonical));) a.reseedSync();
                return Y(n, r)
            };
            let X = {
                strict: !0
            };

            function ee(e) {
                return L(I(e), d.n)
            }
            t.verify = function(e, t, r, n = X) {
                let i, s;
                try {
                    i = W(e), t = R(t)
                } catch (e) {
                    return !1
                }
                let {
                    r: o,
                    s: a
                } = i;
                if (n.strict && i.hasHighS()) return !1;
                let l = F(t);
                try {
                    s = G(r)
                } catch (e) {
                    return !1
                }
                let {
                    n: u
                } = d, c = j(a, u), h = L(l * c, u), f = L(o * c, u), p = v.BASE.multiplyAndAddUnsafe(s, h, f);
                if (!p) return !1;
                let g = L(p.x, u);
                return g === o
            };
            class et {
                constructor(e, t) {
                    this.r = e, this.s = t, this.assertValidity()
                }
                static fromHex(e) {
                    let t = R(e);
                    if (64 !== t.length) throw TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${t.length}`);
                    let r = I(t.subarray(0, 32)),
                        n = I(t.subarray(32, 64));
                    return new et(r, n)
                }
                assertValidity() {
                    let {
                        r: e,
                        s: t
                    } = this;
                    if (!K(e) || !$(t)) throw Error("Invalid signature")
                }
                toHex() {
                    return T(this.r) + T(this.s)
                }
                toRawBytes() {
                    return D(this.toHex())
                }
            }
            class er {
                constructor(e, r, n = t.utils.randomBytes()) {
                    if (null == e) throw TypeError(`sign: Expected valid message, not "${e}"`);
                    this.m = R(e);
                    let {
                        x: i,
                        scalar: s
                    } = this.getScalar(V(r));
                    if (this.px = i, this.d = s, this.rand = R(n), 32 !== this.rand.length) throw TypeError("sign: Expected 32 bytes of aux randomness")
                }
                getScalar(e) {
                    let t = v.fromPrivateKey(e),
                        r = t.hasEvenY() ? e : d.n - e;
                    return {
                        point: t,
                        scalar: r,
                        x: t.toRawX()
                    }
                }
                initNonce(e, t) {
                    return N(e ^ I(t))
                }
                finalizeNonce(e) {
                    let t = L(I(e), d.n);
                    if (t === o) throw Error("sign: Creation of signature failed. k is zero");
                    let {
                        point: r,
                        x: n,
                        scalar: i
                    } = this.getScalar(t);
                    return {
                        R: r,
                        rx: n,
                        k: i
                    }
                }
                finalizeSig(e, t, r, n) {
                    return new et(e.x, L(t + r * n, d.n)).toRawBytes()
                }
                error() {
                    throw Error("sign: Invalid signature produced")
                }
                async calc() {
                    let {
                        m: e,
                        d: r,
                        px: n,
                        rand: i
                    } = this, s = t.utils.taggedHash, o = this.initNonce(r, await s(eu.aux, i)), {
                        R: a,
                        rx: l,
                        k: u
                    } = this.finalizeNonce(await s(eu.nonce, o, n, e)), c = ee(await s(eu.challenge, l, n, e)), d = this.finalizeSig(a, u, c, r);
                    return await eo(d, e, n) || this.error(), d
                }
                calcSync() {
                    let {
                        m: e,
                        d: r,
                        px: n,
                        rand: i
                    } = this, s = t.utils.taggedHashSync, o = this.initNonce(r, s(eu.aux, i)), {
                        R: a,
                        rx: l,
                        k: u
                    } = this.finalizeNonce(s(eu.nonce, o, n, e)), c = ee(s(eu.challenge, l, n, e)), d = this.finalizeSig(a, u, c, r);
                    return ea(d, e, n) || this.error(), d
                }
            }
            async function en(e, t, r) {
                return new er(e, t, r).calc()
            }

            function ei(e, t, r) {
                let n = e instanceof et,
                    i = n ? e : et.fromHex(e);
                return n && i.assertValidity(), { ...i,
                    m: R(t),
                    P: G(r)
                }
            }

            function es(e, t, r, n) {
                let i = v.BASE.multiplyAndAddUnsafe(t, V(r), L(-n, d.n));
                return !!(i && i.hasEvenY()) && i.x === e
            }
            async function eo(e, r, n) {
                try {
                    let {
                        r: i,
                        s,
                        m: o,
                        P: a
                    } = ei(e, r, n), l = ee(await t.utils.taggedHash(eu.challenge, N(i), a.toRawX(), o));
                    return es(i, a, s, l)
                } catch (e) {
                    return !1
                }
            }

            function ea(e, r, n) {
                try {
                    let {
                        r: i,
                        s,
                        m: o,
                        P: a
                    } = ei(e, r, n), l = ee(t.utils.taggedHashSync(eu.challenge, N(i), a.toRawX(), o));
                    return es(i, a, s, l)
                } catch (e) {
                    if (e instanceof m) throw e;
                    return !1
                }
            }
            t.schnorr = {
                Signature: et,
                getPublicKey: function(e) {
                    return v.fromPrivateKey(e).toRawX()
                },
                sign: en,
                verify: eo,
                signSync: function(e, t, r) {
                    return new er(e, t, r).calcSync()
                },
                verifySync: ea
            }, v.BASE._setWindowSize(8);
            let el = {
                    node: s,
                    web: "object" == typeof self && "crypto" in self ? self.crypto : void 0
                },
                eu = {
                    challenge: "BIP0340/challenge",
                    aux: "BIP0340/aux",
                    nonce: "BIP0340/nonce"
                },
                ec = {};
            t.utils = {
                bytesToHex: C,
                hexToBytes: D,
                concatBytes: O,
                mod: L,
                invert: j,
                isValidPrivateKey(e) {
                    try {
                        return V(e), !0
                    } catch (e) {
                        return !1
                    }
                },
                _bigintTo32Bytes: N,
                _normalizePrivateKey: V,
                hashToPrivateKey: e => {
                    if ((e = R(e)).length < 40 || e.length > 1024) throw Error("Expected valid bytes of private key as per FIPS 186");
                    let t = L(I(e), d.n - a) + a;
                    return N(t)
                },
                randomBytes: (e = 32) => {
                    if (el.web) return el.web.getRandomValues(new Uint8Array(e));
                    if (el.node) {
                        let {
                            randomBytes: t
                        } = el.node;
                        return Uint8Array.from(t(e))
                    }
                    throw Error("The environment doesn't have randomBytes function")
                },
                randomPrivateKey: () => t.utils.hashToPrivateKey(t.utils.randomBytes(40)),
                precompute(e = 8, t = v.BASE) {
                    let r = t === v.BASE ? t : new v(t.x, t.y);
                    return r._setWindowSize(e), r.multiply(u), r
                },
                sha256: async (...e) => {
                    if (el.web) {
                        let t = await el.web.subtle.digest("SHA-256", O(...e));
                        return new Uint8Array(t)
                    }
                    if (el.node) {
                        let {
                            createHash: t
                        } = el.node, r = t("sha256");
                        return e.forEach(e => r.update(e)), Uint8Array.from(r.digest())
                    }
                    throw Error("The environment doesn't have sha256 function")
                },
                hmacSha256: async (e, ...t) => {
                    if (el.web) {
                        let r = await el.web.subtle.importKey("raw", e, {
                                name: "HMAC",
                                hash: {
                                    name: "SHA-256"
                                }
                            }, !1, ["sign"]),
                            n = O(...t),
                            i = await el.web.subtle.sign("HMAC", r, n);
                        return new Uint8Array(i)
                    }
                    if (el.node) {
                        let {
                            createHmac: r
                        } = el.node, n = r("sha256", e);
                        return t.forEach(e => n.update(e)), Uint8Array.from(n.digest())
                    }
                    throw Error("The environment doesn't have hmac-sha256 function")
                },
                sha256Sync: void 0,
                hmacSha256Sync: void 0,
                taggedHash: async (e, ...r) => {
                    let n = ec[e];
                    if (void 0 === n) {
                        let r = await t.utils.sha256(Uint8Array.from(e, e => e.charCodeAt(0)));
                        n = O(r, r), ec[e] = n
                    }
                    return t.utils.sha256(n, ...r)
                },
                taggedHashSync: (e, ...t) => {
                    if ("function" != typeof n) throw new m("sha256Sync is undefined, you need to set it");
                    let r = ec[e];
                    if (void 0 === r) {
                        let t = n(Uint8Array.from(e, e => e.charCodeAt(0)));
                        r = O(t, t), ec[e] = r
                    }
                    return n(r, ...t)
                },
                _JacobianPoint: b
            }, Object.defineProperties(t.utils, {
                sha256Sync: {
                    configurable: !1,
                    get: () => n,
                    set(e) {
                        n || (n = e)
                    }
                },
                hmacSha256Sync: {
                    configurable: !1,
                    get: () => i,
                    set(e) {
                        i || (i = e)
                    }
                }
            })
        },
        63886: function(e, t, r) {
            "use strict";

            function n() {
                for (var e, t, r = 0, n = ""; r < arguments.length;)(e = arguments[r++]) && (t = function e(t) {
                    var r, n, i = "";
                    if ("string" == typeof t || "number" == typeof t) i += t;
                    else if ("object" == typeof t) {
                        if (Array.isArray(t))
                            for (r = 0; r < t.length; r++) t[r] && (n = e(t[r])) && (i && (i += " "), i += n);
                        else
                            for (r in t) t[r] && (i && (i += " "), i += r)
                    }
                    return i
                }(e)) && (n && (n += " "), n += t);
                return n
            }
            r.d(t, {
                Z: function() {
                    return n
                }
            })
        },
        67678: function(e, t, r) {
            let n = r(20720),
                i = r(2215),
                s = r(2863),
                o = r(85928);

            function a(e, t, r, s, o) {
                let a = [].slice.call(arguments, 1),
                    l = a.length,
                    u = "function" == typeof a[l - 1];
                if (!u && !n()) throw Error("Callback required as last argument");
                if (u) {
                    if (l < 2) throw Error("Too few arguments provided");
                    2 === l ? (o = r, r = t, t = s = void 0) : 3 === l && (t.getContext && void 0 === o ? (o = s, s = void 0) : (o = s, s = r, r = t, t = void 0))
                } else {
                    if (l < 1) throw Error("Too few arguments provided");
                    return 1 === l ? (r = t, t = s = void 0) : 2 !== l || t.getContext || (s = r, r = t, t = void 0), new Promise(function(n, o) {
                        try {
                            let o = i.create(r, s);
                            n(e(o, t, s))
                        } catch (e) {
                            o(e)
                        }
                    })
                }
                try {
                    let n = i.create(r, s);
                    o(null, e(n, t, s))
                } catch (e) {
                    o(e)
                }
            }
            t.create = i.create, t.toCanvas = a.bind(null, s.render), t.toDataURL = a.bind(null, s.renderToDataURL), t.toString = a.bind(null, function(e, t, r) {
                return o.render(e, r)
            })
        },
        20720: function(e) {
            e.exports = function() {
                return "function" == typeof Promise && Promise.prototype && Promise.prototype.then
            }
        },
        85349: function(e, t, r) {
            let n = r(10784).getSymbolSize;
            t.getRowColCoords = function(e) {
                if (1 === e) return [];
                let t = Math.floor(e / 7) + 2,
                    r = n(e),
                    i = 145 === r ? 26 : 2 * Math.ceil((r - 13) / (2 * t - 2)),
                    s = [r - 7];
                for (let e = 1; e < t - 1; e++) s[e] = s[e - 1] - i;
                return s.push(6), s.reverse()
            }, t.getPositions = function(e) {
                let r = [],
                    n = t.getRowColCoords(e),
                    i = n.length;
                for (let e = 0; e < i; e++)
                    for (let t = 0; t < i; t++)(0 !== e || 0 !== t) && (0 !== e || t !== i - 1) && (e !== i - 1 || 0 !== t) && r.push([n[e], n[t]]);
                return r
            }
        },
        32263: function(e, t, r) {
            let n = r(95747),
                i = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", " ", "$", "%", "*", "+", "-", ".", "/", ":"];

            function s(e) {
                this.mode = n.ALPHANUMERIC, this.data = e
            }
            s.getBitsLength = function(e) {
                return 11 * Math.floor(e / 2) + 6 * (e % 2)
            }, s.prototype.getLength = function() {
                return this.data.length
            }, s.prototype.getBitsLength = function() {
                return s.getBitsLength(this.data.length)
            }, s.prototype.write = function(e) {
                let t;
                for (t = 0; t + 2 <= this.data.length; t += 2) {
                    let r = 45 * i.indexOf(this.data[t]);
                    r += i.indexOf(this.data[t + 1]), e.put(r, 11)
                }
                this.data.length % 2 && e.put(i.indexOf(this.data[t]), 6)
            }, e.exports = s
        },
        13461: function(e) {
            function t() {
                this.buffer = [], this.length = 0
            }
            t.prototype = {
                get: function(e) {
                    return (this.buffer[Math.floor(e / 8)] >>> 7 - e % 8 & 1) == 1
                },
                put: function(e, t) {
                    for (let r = 0; r < t; r++) this.putBit((e >>> t - r - 1 & 1) == 1)
                },
                getLengthInBits: function() {
                    return this.length
                },
                putBit: function(e) {
                    let t = Math.floor(this.length / 8);
                    this.buffer.length <= t && this.buffer.push(0), e && (this.buffer[t] |= 128 >>> this.length % 8), this.length++
                }
            }, e.exports = t
        },
        35262: function(e) {
            function t(e) {
                if (!e || e < 1) throw Error("BitMatrix size must be defined and greater than 0");
                this.size = e, this.data = new Uint8Array(e * e), this.reservedBit = new Uint8Array(e * e)
            }
            t.prototype.set = function(e, t, r, n) {
                let i = e * this.size + t;
                this.data[i] = r, n && (this.reservedBit[i] = !0)
            }, t.prototype.get = function(e, t) {
                return this.data[e * this.size + t]
            }, t.prototype.xor = function(e, t, r) {
                this.data[e * this.size + t] ^= r
            }, t.prototype.isReserved = function(e, t) {
                return this.reservedBit[e * this.size + t]
            }, e.exports = t
        },
        35186: function(e, t, r) {
            let n = r(27639),
                i = r(95747);

            function s(e) {
                this.mode = i.BYTE, this.data = new Uint8Array(n(e))
            }
            s.getBitsLength = function(e) {
                return 8 * e
            }, s.prototype.getLength = function() {
                return this.data.length
            }, s.prototype.getBitsLength = function() {
                return s.getBitsLength(this.data.length)
            }, s.prototype.write = function(e) {
                for (let t = 0, r = this.data.length; t < r; t++) e.put(this.data[t], 8)
            }, e.exports = s
        },
        83330: function(e, t, r) {
            let n = r(99394),
                i = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81],
                s = [7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];
            t.getBlocksCount = function(e, t) {
                switch (t) {
                    case n.L:
                        return i[(e - 1) * 4 + 0];
                    case n.M:
                        return i[(e - 1) * 4 + 1];
                    case n.Q:
                        return i[(e - 1) * 4 + 2];
                    case n.H:
                        return i[(e - 1) * 4 + 3];
                    default:
                        return
                }
            }, t.getTotalCodewordsCount = function(e, t) {
                switch (t) {
                    case n.L:
                        return s[(e - 1) * 4 + 0];
                    case n.M:
                        return s[(e - 1) * 4 + 1];
                    case n.Q:
                        return s[(e - 1) * 4 + 2];
                    case n.H:
                        return s[(e - 1) * 4 + 3];
                    default:
                        return
                }
            }
        },
        99394: function(e, t) {
            t.L = {
                bit: 1
            }, t.M = {
                bit: 0
            }, t.Q = {
                bit: 3
            }, t.H = {
                bit: 2
            }, t.isValid = function(e) {
                return e && void 0 !== e.bit && e.bit >= 0 && e.bit < 4
            }, t.from = function(e, r) {
                if (t.isValid(e)) return e;
                try {
                    return function(e) {
                        if ("string" != typeof e) throw Error("Param is not a string");
                        let r = e.toLowerCase();
                        switch (r) {
                            case "l":
                            case "low":
                                return t.L;
                            case "m":
                            case "medium":
                                return t.M;
                            case "q":
                            case "quartile":
                                return t.Q;
                            case "h":
                            case "high":
                                return t.H;
                            default:
                                throw Error("Unknown EC Level: " + e)
                        }
                    }(e)
                } catch (e) {
                    return r
                }
            }
        },
        61508: function(e, t, r) {
            let n = r(10784).getSymbolSize;
            t.getPositions = function(e) {
                let t = n(e);
                return [
                    [0, 0],
                    [t - 7, 0],
                    [0, t - 7]
                ]
            }
        },
        65421: function(e, t, r) {
            let n = r(10784),
                i = n.getBCHDigit(1335);
            t.getEncodedBits = function(e, t) {
                let r = e.bit << 3 | t,
                    s = r << 10;
                for (; n.getBCHDigit(s) - i >= 0;) s ^= 1335 << n.getBCHDigit(s) - i;
                return (r << 10 | s) ^ 21522
            }
        },
        341: function(e, t) {
            let r = new Uint8Array(512),
                n = new Uint8Array(256);
            ! function() {
                let e = 1;
                for (let t = 0; t < 255; t++) r[t] = e, n[e] = t, 256 & (e <<= 1) && (e ^= 285);
                for (let e = 255; e < 512; e++) r[e] = r[e - 255]
            }(), t.log = function(e) {
                if (e < 1) throw Error("log(" + e + ")");
                return n[e]
            }, t.exp = function(e) {
                return r[e]
            }, t.mul = function(e, t) {
                return 0 === e || 0 === t ? 0 : r[n[e] + n[t]]
            }
        },
        57520: function(e, t, r) {
            let n = r(95747),
                i = r(10784);

            function s(e) {
                this.mode = n.KANJI, this.data = e
            }
            s.getBitsLength = function(e) {
                return 13 * e
            }, s.prototype.getLength = function() {
                return this.data.length
            }, s.prototype.getBitsLength = function() {
                return s.getBitsLength(this.data.length)
            }, s.prototype.write = function(e) {
                let t;
                for (t = 0; t < this.data.length; t++) {
                    let r = i.toSJIS(this.data[t]);
                    if (r >= 33088 && r <= 40956) r -= 33088;
                    else if (r >= 57408 && r <= 60351) r -= 49472;
                    else throw Error("Invalid SJIS character: " + this.data[t] + "\nMake sure your charset is UTF-8");
                    r = (r >>> 8 & 255) * 192 + (255 & r), e.put(r, 13)
                }
            }, e.exports = s
        },
        52802: function(e, t) {
            t.Patterns = {
                PATTERN000: 0,
                PATTERN001: 1,
                PATTERN010: 2,
                PATTERN011: 3,
                PATTERN100: 4,
                PATTERN101: 5,
                PATTERN110: 6,
                PATTERN111: 7
            };
            let r = {
                N1: 3,
                N2: 3,
                N3: 40,
                N4: 10
            };
            t.isValid = function(e) {
                return null != e && "" !== e && !isNaN(e) && e >= 0 && e <= 7
            }, t.from = function(e) {
                return t.isValid(e) ? parseInt(e, 10) : void 0
            }, t.getPenaltyN1 = function(e) {
                let t = e.size,
                    n = 0,
                    i = 0,
                    s = 0,
                    o = null,
                    a = null;
                for (let l = 0; l < t; l++) {
                    i = s = 0, o = a = null;
                    for (let u = 0; u < t; u++) {
                        let t = e.get(l, u);
                        t === o ? i++ : (i >= 5 && (n += r.N1 + (i - 5)), o = t, i = 1), (t = e.get(u, l)) === a ? s++ : (s >= 5 && (n += r.N1 + (s - 5)), a = t, s = 1)
                    }
                    i >= 5 && (n += r.N1 + (i - 5)), s >= 5 && (n += r.N1 + (s - 5))
                }
                return n
            }, t.getPenaltyN2 = function(e) {
                let t = e.size,
                    n = 0;
                for (let r = 0; r < t - 1; r++)
                    for (let i = 0; i < t - 1; i++) {
                        let t = e.get(r, i) + e.get(r, i + 1) + e.get(r + 1, i) + e.get(r + 1, i + 1);
                        (4 === t || 0 === t) && n++
                    }
                return n * r.N2
            }, t.getPenaltyN3 = function(e) {
                let t = e.size,
                    n = 0,
                    i = 0,
                    s = 0;
                for (let r = 0; r < t; r++) {
                    i = s = 0;
                    for (let o = 0; o < t; o++) i = i << 1 & 2047 | e.get(r, o), o >= 10 && (1488 === i || 93 === i) && n++, s = s << 1 & 2047 | e.get(o, r), o >= 10 && (1488 === s || 93 === s) && n++
                }
                return n * r.N3
            }, t.getPenaltyN4 = function(e) {
                let t = 0,
                    n = e.data.length;
                for (let r = 0; r < n; r++) t += e.data[r];
                let i = Math.abs(Math.ceil(100 * t / n / 5) - 10);
                return i * r.N4
            }, t.applyMask = function(e, r) {
                let n = r.size;
                for (let i = 0; i < n; i++)
                    for (let s = 0; s < n; s++) r.isReserved(s, i) || r.xor(s, i, function(e, r, n) {
                        switch (e) {
                            case t.Patterns.PATTERN000:
                                return (r + n) % 2 == 0;
                            case t.Patterns.PATTERN001:
                                return r % 2 == 0;
                            case t.Patterns.PATTERN010:
                                return n % 3 == 0;
                            case t.Patterns.PATTERN011:
                                return (r + n) % 3 == 0;
                            case t.Patterns.PATTERN100:
                                return (Math.floor(r / 2) + Math.floor(n / 3)) % 2 == 0;
                            case t.Patterns.PATTERN101:
                                return r * n % 2 + r * n % 3 == 0;
                            case t.Patterns.PATTERN110:
                                return (r * n % 2 + r * n % 3) % 2 == 0;
                            case t.Patterns.PATTERN111:
                                return (r * n % 3 + (r + n) % 2) % 2 == 0;
                            default:
                                throw Error("bad maskPattern:" + e)
                        }
                    }(e, s, i))
            }, t.getBestMask = function(e, r) {
                let n = Object.keys(t.Patterns).length,
                    i = 0,
                    s = 1 / 0;
                for (let o = 0; o < n; o++) {
                    r(o), t.applyMask(o, e);
                    let n = t.getPenaltyN1(e) + t.getPenaltyN2(e) + t.getPenaltyN3(e) + t.getPenaltyN4(e);
                    t.applyMask(o, e), n < s && (s = n, i = o)
                }
                return i
            }
        },
        95747: function(e, t, r) {
            let n = r(36393),
                i = r(21895);
            t.NUMERIC = {
                id: "Numeric",
                bit: 1,
                ccBits: [10, 12, 14]
            }, t.ALPHANUMERIC = {
                id: "Alphanumeric",
                bit: 2,
                ccBits: [9, 11, 13]
            }, t.BYTE = {
                id: "Byte",
                bit: 4,
                ccBits: [8, 16, 16]
            }, t.KANJI = {
                id: "Kanji",
                bit: 8,
                ccBits: [8, 10, 12]
            }, t.MIXED = {
                bit: -1
            }, t.getCharCountIndicator = function(e, t) {
                if (!e.ccBits) throw Error("Invalid mode: " + e);
                if (!n.isValid(t)) throw Error("Invalid version: " + t);
                return t >= 1 && t < 10 ? e.ccBits[0] : t < 27 ? e.ccBits[1] : e.ccBits[2]
            }, t.getBestModeForData = function(e) {
                return i.testNumeric(e) ? t.NUMERIC : i.testAlphanumeric(e) ? t.ALPHANUMERIC : i.testKanji(e) ? t.KANJI : t.BYTE
            }, t.toString = function(e) {
                if (e && e.id) return e.id;
                throw Error("Invalid mode")
            }, t.isValid = function(e) {
                return e && e.bit && e.ccBits
            }, t.from = function(e, r) {
                if (t.isValid(e)) return e;
                try {
                    return function(e) {
                        if ("string" != typeof e) throw Error("Param is not a string");
                        let r = e.toLowerCase();
                        switch (r) {
                            case "numeric":
                                return t.NUMERIC;
                            case "alphanumeric":
                                return t.ALPHANUMERIC;
                            case "kanji":
                                return t.KANJI;
                            case "byte":
                                return t.BYTE;
                            default:
                                throw Error("Unknown mode: " + e)
                        }
                    }(e)
                } catch (e) {
                    return r
                }
            }
        },
        10557: function(e, t, r) {
            let n = r(95747);

            function i(e) {
                this.mode = n.NUMERIC, this.data = e.toString()
            }
            i.getBitsLength = function(e) {
                return 10 * Math.floor(e / 3) + (e % 3 ? e % 3 * 3 + 1 : 0)
            }, i.prototype.getLength = function() {
                return this.data.length
            }, i.prototype.getBitsLength = function() {
                return i.getBitsLength(this.data.length)
            }, i.prototype.write = function(e) {
                let t, r;
                for (t = 0; t + 3 <= this.data.length; t += 3) r = parseInt(this.data.substr(t, 3), 10), e.put(r, 10);
                let n = this.data.length - t;
                n > 0 && (r = parseInt(this.data.substr(t), 10), e.put(r, 3 * n + 1))
            }, e.exports = i
        },
        33897: function(e, t, r) {
            let n = r(341);
            t.mul = function(e, t) {
                let r = new Uint8Array(e.length + t.length - 1);
                for (let i = 0; i < e.length; i++)
                    for (let s = 0; s < t.length; s++) r[i + s] ^= n.mul(e[i], t[s]);
                return r
            }, t.mod = function(e, t) {
                let r = new Uint8Array(e);
                for (; r.length - t.length >= 0;) {
                    let e = r[0];
                    for (let i = 0; i < t.length; i++) r[i] ^= n.mul(t[i], e);
                    let i = 0;
                    for (; i < r.length && 0 === r[i];) i++;
                    r = r.slice(i)
                }
                return r
            }, t.generateECPolynomial = function(e) {
                let r = new Uint8Array([1]);
                for (let i = 0; i < e; i++) r = t.mul(r, new Uint8Array([1, n.exp(i)]));
                return r
            }
        },
        2215: function(e, t, r) {
            let n = r(10784),
                i = r(99394),
                s = r(13461),
                o = r(35262),
                a = r(85349),
                l = r(61508),
                u = r(52802),
                c = r(83330),
                d = r(7408),
                h = r(43916),
                f = r(65421),
                p = r(95747),
                g = r(15975);

            function m(e, t, r) {
                let n, i;
                let s = e.size,
                    o = f.getEncodedBits(t, r);
                for (n = 0; n < 15; n++) i = (o >> n & 1) == 1, n < 6 ? e.set(n, 8, i, !0) : n < 8 ? e.set(n + 1, 8, i, !0) : e.set(s - 15 + n, 8, i, !0), n < 8 ? e.set(8, s - n - 1, i, !0) : n < 9 ? e.set(8, 15 - n - 1 + 1, i, !0) : e.set(8, 15 - n - 1, i, !0);
                e.set(s - 8, 8, 1, !0)
            }
            t.create = function(e, t) {
                let r, f;
                if (void 0 === e || "" === e) throw Error("No input text");
                let y = i.M;
                return void 0 !== t && (y = i.from(t.errorCorrectionLevel, i.M), r = h.from(t.version), f = u.from(t.maskPattern), t.toSJISFunc && n.setToSJISFunction(t.toSJISFunc)),
                    function(e, t, r, i) {
                        let f;
                        if (Array.isArray(e)) f = g.fromArray(e);
                        else if ("string" == typeof e) {
                            let n = t;
                            if (!n) {
                                let t = g.rawSplit(e);
                                n = h.getBestVersionForData(t, r)
                            }
                            f = g.fromString(e, n || 40)
                        } else throw Error("Invalid data");
                        let y = h.getBestVersionForData(f, r);
                        if (!y) throw Error("The amount of data is too big to be stored in a QR Code");
                        if (t) {
                            if (t < y) throw Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + y + ".\n")
                        } else t = y;
                        let b = function(e, t, r) {
                                let i = new s;
                                r.forEach(function(t) {
                                    i.put(t.mode.bit, 4), i.put(t.getLength(), p.getCharCountIndicator(t.mode, e)), t.write(i)
                                });
                                let o = n.getSymbolTotalCodewords(e),
                                    a = c.getTotalCodewordsCount(e, t),
                                    l = (o - a) * 8;
                                for (i.getLengthInBits() + 4 <= l && i.put(0, 4); i.getLengthInBits() % 8 != 0;) i.putBit(0);
                                let u = (l - i.getLengthInBits()) / 8;
                                for (let e = 0; e < u; e++) i.put(e % 2 ? 17 : 236, 8);
                                return function(e, t, r) {
                                    let i, s;
                                    let o = n.getSymbolTotalCodewords(t),
                                        a = c.getTotalCodewordsCount(t, r),
                                        l = o - a,
                                        u = c.getBlocksCount(t, r),
                                        h = o % u,
                                        f = u - h,
                                        p = Math.floor(o / u),
                                        g = Math.floor(l / u),
                                        m = g + 1,
                                        y = p - g,
                                        b = new d(y),
                                        w = 0,
                                        A = Array(u),
                                        v = Array(u),
                                        E = 0,
                                        P = new Uint8Array(e.buffer);
                                    for (let e = 0; e < u; e++) {
                                        let t = e < f ? g : m;
                                        A[e] = P.slice(w, w + t), v[e] = b.encode(A[e]), w += t, E = Math.max(E, t)
                                    }
                                    let S = new Uint8Array(o),
                                        O = 0;
                                    for (i = 0; i < E; i++)
                                        for (s = 0; s < u; s++) i < A[s].length && (S[O++] = A[s][i]);
                                    for (i = 0; i < y; i++)
                                        for (s = 0; s < u; s++) S[O++] = v[s][i];
                                    return S
                                }(i, e, t)
                            }(t, r, f),
                            w = n.getSymbolSize(t),
                            A = new o(w);
                        return function(e, t) {
                                let r = e.size,
                                    n = l.getPositions(t);
                                for (let t = 0; t < n.length; t++) {
                                    let i = n[t][0],
                                        s = n[t][1];
                                    for (let t = -1; t <= 7; t++)
                                        if (!(i + t <= -1) && !(r <= i + t))
                                            for (let n = -1; n <= 7; n++) s + n <= -1 || r <= s + n || (t >= 0 && t <= 6 && (0 === n || 6 === n) || n >= 0 && n <= 6 && (0 === t || 6 === t) || t >= 2 && t <= 4 && n >= 2 && n <= 4 ? e.set(i + t, s + n, !0, !0) : e.set(i + t, s + n, !1, !0))
                                }
                            }(A, t),
                            function(e) {
                                let t = e.size;
                                for (let r = 8; r < t - 8; r++) {
                                    let t = r % 2 == 0;
                                    e.set(r, 6, t, !0), e.set(6, r, t, !0)
                                }
                            }(A),
                            function(e, t) {
                                let r = a.getPositions(t);
                                for (let t = 0; t < r.length; t++) {
                                    let n = r[t][0],
                                        i = r[t][1];
                                    for (let t = -2; t <= 2; t++)
                                        for (let r = -2; r <= 2; r++) - 2 === t || 2 === t || -2 === r || 2 === r || 0 === t && 0 === r ? e.set(n + t, i + r, !0, !0) : e.set(n + t, i + r, !1, !0)
                                }
                            }(A, t), m(A, r, 0), t >= 7 && function(e, t) {
                                let r, n, i;
                                let s = e.size,
                                    o = h.getEncodedBits(t);
                                for (let t = 0; t < 18; t++) r = Math.floor(t / 3), n = t % 3 + s - 8 - 3, i = (o >> t & 1) == 1, e.set(r, n, i, !0), e.set(n, r, i, !0)
                            }(A, t),
                            function(e, t) {
                                let r = e.size,
                                    n = -1,
                                    i = r - 1,
                                    s = 7,
                                    o = 0;
                                for (let a = r - 1; a > 0; a -= 2)
                                    for (6 === a && a--;;) {
                                        for (let r = 0; r < 2; r++)
                                            if (!e.isReserved(i, a - r)) {
                                                let n = !1;
                                                o < t.length && (n = (t[o] >>> s & 1) == 1), e.set(i, a - r, n), -1 == --s && (o++, s = 7)
                                            }
                                        if ((i += n) < 0 || r <= i) {
                                            i -= n, n = -n;
                                            break
                                        }
                                    }
                            }(A, b), isNaN(i) && (i = u.getBestMask(A, m.bind(null, A, r))), u.applyMask(i, A), m(A, r, i), {
                                modules: A,
                                version: t,
                                errorCorrectionLevel: r,
                                maskPattern: i,
                                segments: f
                            }
                    }(e, r, y, f)
            }
        },
        7408: function(e, t, r) {
            let n = r(33897);

            function i(e) {
                this.genPoly = void 0, this.degree = e, this.degree && this.initialize(this.degree)
            }
            i.prototype.initialize = function(e) {
                this.degree = e, this.genPoly = n.generateECPolynomial(this.degree)
            }, i.prototype.encode = function(e) {
                if (!this.genPoly) throw Error("Encoder not initialized");
                let t = new Uint8Array(e.length + this.degree);
                t.set(e);
                let r = n.mod(t, this.genPoly),
                    i = this.degree - r.length;
                if (i > 0) {
                    let e = new Uint8Array(this.degree);
                    return e.set(r, i), e
                }
                return r
            }, e.exports = i
        },
        21895: function(e, t) {
            let r = "[0-9]+",
                n = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
            n = n.replace(/u/g, "\\u");
            let i = "(?:(?![A-Z0-9 $%*+\\-./:]|" + n + ")(?:.|[\r\n]))+";
            t.KANJI = RegExp(n, "g"), t.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g"), t.BYTE = RegExp(i, "g"), t.NUMERIC = RegExp(r, "g"), t.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g");
            let s = RegExp("^" + n + "$"),
                o = RegExp("^" + r + "$"),
                a = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
            t.testKanji = function(e) {
                return s.test(e)
            }, t.testNumeric = function(e) {
                return o.test(e)
            }, t.testAlphanumeric = function(e) {
                return a.test(e)
            }
        },
        15975: function(e, t, r) {
            let n = r(95747),
                i = r(10557),
                s = r(32263),
                o = r(35186),
                a = r(57520),
                l = r(21895),
                u = r(10784),
                c = r(64365);

            function d(e) {
                return unescape(encodeURIComponent(e)).length
            }

            function h(e, t, r) {
                let n;
                let i = [];
                for (; null !== (n = e.exec(r));) i.push({
                    data: n[0],
                    index: n.index,
                    mode: t,
                    length: n[0].length
                });
                return i
            }

            function f(e) {
                let t, r;
                let i = h(l.NUMERIC, n.NUMERIC, e),
                    s = h(l.ALPHANUMERIC, n.ALPHANUMERIC, e);
                u.isKanjiModeEnabled() ? (t = h(l.BYTE, n.BYTE, e), r = h(l.KANJI, n.KANJI, e)) : (t = h(l.BYTE_KANJI, n.BYTE, e), r = []);
                let o = i.concat(s, t, r);
                return o.sort(function(e, t) {
                    return e.index - t.index
                }).map(function(e) {
                    return {
                        data: e.data,
                        mode: e.mode,
                        length: e.length
                    }
                })
            }

            function p(e, t) {
                switch (t) {
                    case n.NUMERIC:
                        return i.getBitsLength(e);
                    case n.ALPHANUMERIC:
                        return s.getBitsLength(e);
                    case n.KANJI:
                        return a.getBitsLength(e);
                    case n.BYTE:
                        return o.getBitsLength(e)
                }
            }

            function g(e, t) {
                let r;
                let l = n.getBestModeForData(e);
                if ((r = n.from(t, l)) !== n.BYTE && r.bit < l.bit) throw Error('"' + e + '" cannot be encoded with mode ' + n.toString(r) + ".\n Suggested mode is: " + n.toString(l));
                switch (r !== n.KANJI || u.isKanjiModeEnabled() || (r = n.BYTE), r) {
                    case n.NUMERIC:
                        return new i(e);
                    case n.ALPHANUMERIC:
                        return new s(e);
                    case n.KANJI:
                        return new a(e);
                    case n.BYTE:
                        return new o(e)
                }
            }
            t.fromArray = function(e) {
                return e.reduce(function(e, t) {
                    return "string" == typeof t ? e.push(g(t, null)) : t.data && e.push(g(t.data, t.mode)), e
                }, [])
            }, t.fromString = function(e, r) {
                let i = f(e, u.isKanjiModeEnabled()),
                    s = function(e) {
                        let t = [];
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r];
                            switch (i.mode) {
                                case n.NUMERIC:
                                    t.push([i, {
                                        data: i.data,
                                        mode: n.ALPHANUMERIC,
                                        length: i.length
                                    }, {
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: i.length
                                    }]);
                                    break;
                                case n.ALPHANUMERIC:
                                    t.push([i, {
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: i.length
                                    }]);
                                    break;
                                case n.KANJI:
                                    t.push([i, {
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: d(i.data)
                                    }]);
                                    break;
                                case n.BYTE:
                                    t.push([{
                                        data: i.data,
                                        mode: n.BYTE,
                                        length: d(i.data)
                                    }])
                            }
                        }
                        return t
                    }(i),
                    o = function(e, t) {
                        let r = {},
                            i = {
                                start: {}
                            },
                            s = ["start"];
                        for (let o = 0; o < e.length; o++) {
                            let a = e[o],
                                l = [];
                            for (let e = 0; e < a.length; e++) {
                                let u = a[e],
                                    c = "" + o + e;
                                l.push(c), r[c] = {
                                    node: u,
                                    lastCount: 0
                                }, i[c] = {};
                                for (let e = 0; e < s.length; e++) {
                                    let o = s[e];
                                    r[o] && r[o].node.mode === u.mode ? (i[o][c] = p(r[o].lastCount + u.length, u.mode) - p(r[o].lastCount, u.mode), r[o].lastCount += u.length) : (r[o] && (r[o].lastCount = u.length), i[o][c] = p(u.length, u.mode) + 4 + n.getCharCountIndicator(u.mode, t))
                                }
                            }
                            s = l
                        }
                        for (let e = 0; e < s.length; e++) i[s[e]].end = 0;
                        return {
                            map: i,
                            table: r
                        }
                    }(s, r),
                    a = c.find_path(o.map, "start", "end"),
                    l = [];
                for (let e = 1; e < a.length - 1; e++) l.push(o.table[a[e]].node);
                return t.fromArray(l.reduce(function(e, t) {
                    let r = e.length - 1 >= 0 ? e[e.length - 1] : null;
                    return r && r.mode === t.mode ? (e[e.length - 1].data += t.data, e) : (e.push(t), e)
                }, []))
            }, t.rawSplit = function(e) {
                return t.fromArray(f(e, u.isKanjiModeEnabled()))
            }
        },
        10784: function(e, t) {
            let r;
            let n = [0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];
            t.getSymbolSize = function(e) {
                if (!e) throw Error('"version" cannot be null or undefined');
                if (e < 1 || e > 40) throw Error('"version" should be in range from 1 to 40');
                return 4 * e + 17
            }, t.getSymbolTotalCodewords = function(e) {
                return n[e]
            }, t.getBCHDigit = function(e) {
                let t = 0;
                for (; 0 !== e;) t++, e >>>= 1;
                return t
            }, t.setToSJISFunction = function(e) {
                if ("function" != typeof e) throw Error('"toSJISFunc" is not a valid function.');
                r = e
            }, t.isKanjiModeEnabled = function() {
                return void 0 !== r
            }, t.toSJIS = function(e) {
                return r(e)
            }
        },
        36393: function(e, t) {
            t.isValid = function(e) {
                return !isNaN(e) && e >= 1 && e <= 40
            }
        },
        43916: function(e, t, r) {
            let n = r(10784),
                i = r(83330),
                s = r(99394),
                o = r(95747),
                a = r(36393),
                l = n.getBCHDigit(7973);

            function u(e, t) {
                return o.getCharCountIndicator(e, t) + 4
            }
            t.from = function(e, t) {
                return a.isValid(e) ? parseInt(e, 10) : t
            }, t.getCapacity = function(e, t, r) {
                if (!a.isValid(e)) throw Error("Invalid QR Code version");
                void 0 === r && (r = o.BYTE);
                let s = n.getSymbolTotalCodewords(e),
                    l = i.getTotalCodewordsCount(e, t),
                    c = (s - l) * 8;
                if (r === o.MIXED) return c;
                let d = c - u(r, e);
                switch (r) {
                    case o.NUMERIC:
                        return Math.floor(d / 10 * 3);
                    case o.ALPHANUMERIC:
                        return Math.floor(d / 11 * 2);
                    case o.KANJI:
                        return Math.floor(d / 13);
                    case o.BYTE:
                    default:
                        return Math.floor(d / 8)
                }
            }, t.getBestVersionForData = function(e, r) {
                let n;
                let i = s.from(r, s.M);
                if (Array.isArray(e)) {
                    if (e.length > 1) return function(e, r) {
                        for (let n = 1; n <= 40; n++) {
                            let i = function(e, t) {
                                let r = 0;
                                return e.forEach(function(e) {
                                    let n = u(e.mode, t);
                                    r += n + e.getBitsLength()
                                }), r
                            }(e, n);
                            if (i <= t.getCapacity(n, r, o.MIXED)) return n
                        }
                    }(e, i);
                    if (0 === e.length) return 1;
                    n = e[0]
                } else n = e;
                return function(e, r, n) {
                    for (let i = 1; i <= 40; i++)
                        if (r <= t.getCapacity(i, n, e)) return i
                }(n.mode, n.getLength(), i)
            }, t.getEncodedBits = function(e) {
                if (!a.isValid(e) || e < 7) throw Error("Invalid QR Code version");
                let t = e << 12;
                for (; n.getBCHDigit(t) - l >= 0;) t ^= 7973 << n.getBCHDigit(t) - l;
                return e << 12 | t
            }
        },
        2863: function(e, t, r) {
            let n = r(97337);
            t.render = function(e, t, r) {
                var i;
                let s = r,
                    o = t;
                void 0 !== s || t && t.getContext || (s = t, t = void 0), t || (o = function() {
                    try {
                        return document.createElement("canvas")
                    } catch (e) {
                        throw Error("You need to specify a canvas element")
                    }
                }()), s = n.getOptions(s);
                let a = n.getImageWidth(e.modules.size, s),
                    l = o.getContext("2d"),
                    u = l.createImageData(a, a);
                return n.qrToImageData(u.data, e, s), i = o, l.clearRect(0, 0, i.width, i.height), i.style || (i.style = {}), i.height = a, i.width = a, i.style.height = a + "px", i.style.width = a + "px", l.putImageData(u, 0, 0), o
            }, t.renderToDataURL = function(e, r, n) {
                let i = n;
                void 0 !== i || r && r.getContext || (i = r, r = void 0), i || (i = {});
                let s = t.render(e, r, i),
                    o = i.type || "image/png",
                    a = i.rendererOpts || {};
                return s.toDataURL(o, a.quality)
            }
        },
        85928: function(e, t, r) {
            let n = r(97337);

            function i(e, t) {
                let r = e.a / 255,
                    n = t + '="' + e.hex + '"';
                return r < 1 ? n + " " + t + '-opacity="' + r.toFixed(2).slice(1) + '"' : n
            }

            function s(e, t, r) {
                let n = e + t;
                return void 0 !== r && (n += " " + r), n
            }
            t.render = function(e, t, r) {
                let o = n.getOptions(t),
                    a = e.modules.size,
                    l = e.modules.data,
                    u = a + 2 * o.margin,
                    c = o.color.light.a ? "<path " + i(o.color.light, "fill") + ' d="M0 0h' + u + "v" + u + 'H0z"/>' : "",
                    d = "<path " + i(o.color.dark, "stroke") + ' d="' + function(e, t, r) {
                        let n = "",
                            i = 0,
                            o = !1,
                            a = 0;
                        for (let l = 0; l < e.length; l++) {
                            let u = Math.floor(l % t),
                                c = Math.floor(l / t);
                            u || o || (o = !0), e[l] ? (a++, l > 0 && u > 0 && e[l - 1] || (n += o ? s("M", u + r, .5 + c + r) : s("m", i, 0), i = 0, o = !1), u + 1 < t && e[l + 1] || (n += s("h", a), a = 0)) : i++
                        }
                        return n
                    }(l, a, o.margin) + '"/>',
                    h = o.width ? 'width="' + o.width + '" height="' + o.width + '" ' : "",
                    f = '<svg xmlns="http://www.w3.org/2000/svg" ' + h + ('viewBox="0 0 ' + u) + " " + u + '" shape-rendering="crispEdges">' + c + d + "</svg>\n";
                return "function" == typeof r && r(null, f), f
            }
        },
        97337: function(e, t) {
            function r(e) {
                if ("number" == typeof e && (e = e.toString()), "string" != typeof e) throw Error("Color should be defined as hex string");
                let t = e.slice().replace("#", "").split("");
                if (t.length < 3 || 5 === t.length || t.length > 8) throw Error("Invalid hex color: " + e);
                (3 === t.length || 4 === t.length) && (t = Array.prototype.concat.apply([], t.map(function(e) {
                    return [e, e]
                }))), 6 === t.length && t.push("F", "F");
                let r = parseInt(t.join(""), 16);
                return {
                    r: r >> 24 & 255,
                    g: r >> 16 & 255,
                    b: r >> 8 & 255,
                    a: 255 & r,
                    hex: "#" + t.slice(0, 6).join("")
                }
            }
            t.getOptions = function(e) {
                e || (e = {}), e.color || (e.color = {});
                let t = void 0 === e.margin || null === e.margin || e.margin < 0 ? 4 : e.margin,
                    n = e.width && e.width >= 21 ? e.width : void 0,
                    i = e.scale || 4;
                return {
                    width: n,
                    scale: n ? 4 : i,
                    margin: t,
                    color: {
                        dark: r(e.color.dark || "#000000ff"),
                        light: r(e.color.light || "#ffffffff")
                    },
                    type: e.type,
                    rendererOpts: e.rendererOpts || {}
                }
            }, t.getScale = function(e, t) {
                return t.width && t.width >= e + 2 * t.margin ? t.width / (e + 2 * t.margin) : t.scale
            }, t.getImageWidth = function(e, r) {
                let n = t.getScale(e, r);
                return Math.floor((e + 2 * r.margin) * n)
            }, t.qrToImageData = function(e, r, n) {
                let i = r.modules.size,
                    s = r.modules.data,
                    o = t.getScale(i, n),
                    a = Math.floor((i + 2 * n.margin) * o),
                    l = n.margin * o,
                    u = [n.color.light, n.color.dark];
                for (let t = 0; t < a; t++)
                    for (let r = 0; r < a; r++) {
                        let c = (t * a + r) * 4,
                            d = n.color.light;
                        if (t >= l && r >= l && t < a - l && r < a - l) {
                            let e = Math.floor((t - l) / o),
                                n = Math.floor((r - l) / o);
                            d = u[s[e * i + n] ? 1 : 0]
                        }
                        e[c++] = d.r, e[c++] = d.g, e[c++] = d.b, e[c] = d.a
                    }
            }
        },
        54507: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ParsedMessage = void 0;
            let i = n(r(12860)),
                s = n(r(24153)),
                o = r(7495),
                a = `
sign-in-with-ethereum =
    domain %s" wants you to sign in with your Ethereum account:" LF
    address LF
    LF
    [ statement LF ]
    LF
    %s"URI: " URI LF
    %s"Version: " version LF
    %s"Chain ID: " chain-id LF
    %s"Nonce: " nonce LF
    %s"Issued At: " issued-at
    [ LF %s"Expiration Time: " expiration-time ]
    [ LF %s"Not Before: " not-before ]
    [ LF %s"Request ID: " request-id ]
    [ LF %s"Resources:"
    resources ]

domain = authority

address = "0x" 40*40HEXDIG
    ; Must also conform to captilization
    ; checksum encoding specified in EIP-55
    ; where applicable (EOAs).

statement = 1*( reserved / unreserved / " " )
    ; The purpose is to exclude LF (line breaks).

version = "1"

nonce = 8*( ALPHA / DIGIT )

issued-at = date-time
expiration-time = date-time
not-before = date-time

request-id = *pchar

chain-id = 1*DIGIT
    ; See EIP-155 for valid CHAIN_IDs.

resources = *( LF resource )

resource = "- " URI

; ------------------------------------------------------------------------------
; RFC 3986

URI           = scheme ":" hier-part [ "?" query ] [ "#" fragment ]

hier-part     = "//" authority path-abempty
              / path-absolute
              / path-rootless
              / path-empty

scheme        = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )

authority     = [ userinfo "@" ] host [ ":" port ]
userinfo      = *( unreserved / pct-encoded / sub-delims / ":" )
host          = IP-literal / IPv4address / reg-name
port          = *DIGIT

IP-literal    = "[" ( IPv6address / IPvFuture  ) "]"

IPvFuture     = "v" 1*HEXDIG "." 1*( unreserved / sub-delims / ":" )

IPv6address   =                            6( h16 ":" ) ls32
              /                       "::" 5( h16 ":" ) ls32
              / [               h16 ] "::" 4( h16 ":" ) ls32
              / [ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32
              / [ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32
              / [ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32
              / [ *4( h16 ":" ) h16 ] "::"              ls32
              / [ *5( h16 ":" ) h16 ] "::"              h16
              / [ *6( h16 ":" ) h16 ] "::"

h16           = 1*4HEXDIG
ls32          = ( h16 ":" h16 ) / IPv4address
IPv4address   = dec-octet "." dec-octet "." dec-octet "." dec-octet
dec-octet     = DIGIT                 ; 0-9
                 / %x31-39 DIGIT         ; 10-99
                 / "1" 2DIGIT            ; 100-199
                 / "2" %x30-34 DIGIT     ; 200-249
                 / "25" %x30-35          ; 250-255

reg-name      = *( unreserved / pct-encoded / sub-delims )

path-abempty  = *( "/" segment )
path-absolute = "/" [ segment-nz *( "/" segment ) ]
path-rootless = segment-nz *( "/" segment )
path-empty    = 0pchar

segment       = *pchar
segment-nz    = 1*pchar

pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"

query         = *( pchar / "/" / "?" )

fragment      = *( pchar / "/" / "?" )

pct-encoded   = "%" HEXDIG HEXDIG

unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
reserved      = gen-delims / sub-delims
gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
              / "*" / "+" / "," / ";" / "="

; ------------------------------------------------------------------------------
; RFC 3339

date-fullyear   = 4DIGIT
date-month      = 2DIGIT  ; 01-12
date-mday       = 2DIGIT  ; 01-28, 01-29, 01-30, 01-31 based on
                          ; month/year
time-hour       = 2DIGIT  ; 00-23
time-minute     = 2DIGIT  ; 00-59
time-second     = 2DIGIT  ; 00-58, 00-59, 00-60 based on leap second
                          ; rules
time-secfrac    = "." 1*DIGIT
time-numoffset  = ("+" / "-") time-hour ":" time-minute
time-offset     = "Z" / time-numoffset

partial-time    = time-hour ":" time-minute ":" time-second
                  [time-secfrac]
full-date       = date-fullyear "-" date-month "-" date-mday
full-time       = partial-time time-offset

date-time       = full-date "T" full-time

; ------------------------------------------------------------------------------
; RFC 5234

ALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z
LF             =  %x0A
                  ; linefeed
DIGIT          =  %x30-39
                  ; 0-9
HEXDIG         =  DIGIT / "A" / "B" / "C" / "D" / "E" / "F"
`;
            class l {
                static generateApi() {
                    let e = new i.default(a);
                    if (e.generate(), e.errors.length) throw console.error(e.errorsToAscii()), console.error(e.linesToAscii()), console.log(e.displayAttributeErrors()), Error("ABNF grammar has errors");
                    return e.toObject()
                }
            }
            l.grammarObj = l.generateApi(), t.ParsedMessage = class {
                constructor(e) {
                    let t = new s.default.parser;
                    t.ast = new s.default.ast;
                    let r = s.default.ids;
                    t.ast.callbacks.domain = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.domain = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks.address = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.address = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks.statement = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.statement = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks.uri = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e !== r.SEM_PRE || o.uri || (o.uri = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks.version = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.version = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks["chain-id"] = function(e, t, n, i, a) {
                        let l = r.SEM_OK;
                        return e === r.SEM_PRE && (a.chainId = (0, o.parseIntegerNumber)(s.default.utils.charsToString(t, n, i))), l
                    }, t.ast.callbacks.nonce = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.nonce = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks["issued-at"] = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.issuedAt = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks["expiration-time"] = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.expirationTime = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks["not-before"] = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.notBefore = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks["request-id"] = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.requestId = s.default.utils.charsToString(t, n, i)), a
                    }, t.ast.callbacks.resources = function(e, t, n, i, o) {
                        let a = r.SEM_OK;
                        return e === r.SEM_PRE && (o.resources = s.default.utils.charsToString(t, n, i).slice(3).split("\n- ")), a
                    };
                    let n = t.parse(l.grammarObj, "sign-in-with-ethereum", e);
                    if (!n.success) throw Error(`Invalid message: ${JSON.stringify(n)}`);
                    let i = {};
                    for (let [e, r] of (t.ast.translate(i), Object.entries(i))) this[e] = r;
                    if (0 === this.domain.length) throw Error("Domain cannot be empty.");
                    if (!(0, o.isEIP55Address)(this.address)) throw Error("Address not conformant to EIP-55.")
                }
            }
        },
        41316: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ParsedMessage = void 0;
            let s = r(54507);
            Object.defineProperty(t, "ParsedMessage", {
                enumerable: !0,
                get: function() {
                    return s.ParsedMessage
                }
            }), i(r(7495), t)
        },
        7495: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseIntegerNumber = t.isEIP55Address = void 0;
            let n = r(71617),
                i = r(15630);
            t.isEIP55Address = e => {
                if (42 != e.length) return !1;
                let t = `${e}`.toLowerCase().replace("0x", "");
                for (var r = (0, i.bytesToHex)((0, n.keccak_256)(t)), s = "0x", o = 0; o < t.length; o++) parseInt(r[o], 16) >= 8 ? s += t[o].toUpperCase() : s += t[o];
                return e === s
            }, t.parseIntegerNumber = e => {
                let t = parseInt(e);
                if (t === 1 / 0) throw Error("Invalid number.");
                return t
            }
        },
        47127: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(4249);

            function i(e, t, r) {
                return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 8, t[r + 1] = e >>> 0, t
            }

            function s(e, t, r) {
                return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t
            }

            function o(e, t) {
                return void 0 === t && (t = 0), e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]
            }

            function a(e, t) {
                return void 0 === t && (t = 0), (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0
            }

            function l(e, t) {
                return void 0 === t && (t = 0), e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]
            }

            function u(e, t) {
                return void 0 === t && (t = 0), (e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]) >>> 0
            }

            function c(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 24, t[r + 1] = e >>> 16, t[r + 2] = e >>> 8, t[r + 3] = e >>> 0, t
            }

            function d(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t[r + 2] = e >>> 16, t[r + 3] = e >>> 24, t
            }

            function h(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), c(e / 4294967296 >>> 0, t, r), c(e >>> 0, t, r + 4), t
            }

            function f(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), d(e >>> 0, t, r), d(e / 4294967296 >>> 0, t, r + 4), t
            }
            t.readInt16BE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) << 16 >> 16
            }, t.readUint16BE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) >>> 0
            }, t.readInt16LE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) << 16 >> 16
            }, t.readUint16LE = function(e, t) {
                return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) >>> 0
            }, t.writeUint16BE = i, t.writeInt16BE = i, t.writeUint16LE = s, t.writeInt16LE = s, t.readInt32BE = o, t.readUint32BE = a, t.readInt32LE = l, t.readUint32LE = u, t.writeUint32BE = c, t.writeInt32BE = c, t.writeUint32LE = d, t.writeInt32LE = d, t.readInt64BE = function(e, t) {
                void 0 === t && (t = 0);
                var r = o(e, t),
                    n = o(e, t + 4);
                return 4294967296 * r + n - (n >> 31) * 4294967296
            }, t.readUint64BE = function(e, t) {
                return void 0 === t && (t = 0), 4294967296 * a(e, t) + a(e, t + 4)
            }, t.readInt64LE = function(e, t) {
                void 0 === t && (t = 0);
                var r = l(e, t);
                return 4294967296 * l(e, t + 4) + r - (r >> 31) * 4294967296
            }, t.readUint64LE = function(e, t) {
                void 0 === t && (t = 0);
                var r = u(e, t);
                return 4294967296 * u(e, t + 4) + r
            }, t.writeUint64BE = h, t.writeInt64BE = h, t.writeUint64LE = f, t.writeInt64LE = f, t.readUintBE = function(e, t, r) {
                if (void 0 === r && (r = 0), e % 8 != 0) throw Error("readUintBE supports only bitLengths divisible by 8");
                if (e / 8 > t.length - r) throw Error("readUintBE: array is too short for the given bitLength");
                for (var n = 0, i = 1, s = e / 8 + r - 1; s >= r; s--) n += t[s] * i, i *= 256;
                return n
            }, t.readUintLE = function(e, t, r) {
                if (void 0 === r && (r = 0), e % 8 != 0) throw Error("readUintLE supports only bitLengths divisible by 8");
                if (e / 8 > t.length - r) throw Error("readUintLE: array is too short for the given bitLength");
                for (var n = 0, i = 1, s = r; s < r + e / 8; s++) n += t[s] * i, i *= 256;
                return n
            }, t.writeUintBE = function(e, t, r, i) {
                if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw Error("writeUintBE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(t)) throw Error("writeUintBE value must be an integer");
                for (var s = 1, o = e / 8 + i - 1; o >= i; o--) r[o] = t / s & 255, s *= 256;
                return r
            }, t.writeUintLE = function(e, t, r, i) {
                if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw Error("writeUintLE supports only bitLengths divisible by 8");
                if (!n.isSafeInteger(t)) throw Error("writeUintLE value must be an integer");
                for (var s = 1, o = i; o < i + e / 8; o++) r[o] = t / s & 255, s *= 256;
                return r
            }, t.readFloat32BE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t)
            }, t.readFloat32LE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t, !0)
            }, t.readFloat64BE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t)
            }, t.readFloat64LE = function(e, t) {
                return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t, !0)
            }, t.writeFloat32BE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e), t
            }, t.writeFloat32LE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e, !0), t
            }, t.writeFloat64BE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e), t
            }, t.writeFloat64LE = function(e, t, r) {
                return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e, !0), t
            }
        },
        71663: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(47127),
                i = r(61014);

            function s(e, t, r, s, o) {
                if (void 0 === o && (o = 0), 32 !== e.length) throw Error("ChaCha: key size must be 32 bytes");
                if (s.length < r.length) throw Error("ChaCha: destination is shorter than source");
                if (0 === o) {
                    if (8 !== t.length && 12 !== t.length) throw Error("ChaCha nonce must be 8 or 12 bytes");
                    l = (a = new Uint8Array(16)).length - t.length, a.set(t, l)
                } else {
                    if (16 !== t.length) throw Error("ChaCha nonce with counter must be 16 bytes");
                    a = t, l = o
                }
                for (var a, l, u = new Uint8Array(64), c = 0; c < r.length; c += 64) {
                    ! function(e, t, r) {
                        for (var i = r[3] << 24 | r[2] << 16 | r[1] << 8 | r[0], s = r[7] << 24 | r[6] << 16 | r[5] << 8 | r[4], o = r[11] << 24 | r[10] << 16 | r[9] << 8 | r[8], a = r[15] << 24 | r[14] << 16 | r[13] << 8 | r[12], l = r[19] << 24 | r[18] << 16 | r[17] << 8 | r[16], u = r[23] << 24 | r[22] << 16 | r[21] << 8 | r[20], c = r[27] << 24 | r[26] << 16 | r[25] << 8 | r[24], d = r[31] << 24 | r[30] << 16 | r[29] << 8 | r[28], h = t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0], f = t[7] << 24 | t[6] << 16 | t[5] << 8 | t[4], p = t[11] << 24 | t[10] << 16 | t[9] << 8 | t[8], g = t[15] << 24 | t[14] << 16 | t[13] << 8 | t[12], m = 1634760805, y = 857760878, b = 2036477234, w = 1797285236, A = i, v = s, E = o, P = a, S = l, O = u, k = c, C = d, x = h, T = f, N = p, _ = g, B = 0; B < 20; B += 2) x ^= m = m + A | 0, A ^= S = S + (x = x >>> 16 | x << 16) | 0, A = A >>> 20 | A << 12, T ^= y = y + v | 0, v ^= O = O + (T = T >>> 16 | T << 16) | 0, v = v >>> 20 | v << 12, N ^= b = b + E | 0, E ^= k = k + (N = N >>> 16 | N << 16) | 0, E = E >>> 20 | E << 12, _ ^= w = w + P | 0, P ^= C = C + (_ = _ >>> 16 | _ << 16) | 0, P = P >>> 20 | P << 12, N ^= b = b + E | 0, E ^= k = k + (N = N >>> 24 | N << 8) | 0, E = E >>> 25 | E << 7, _ ^= w = w + P | 0, P ^= C = C + (_ = _ >>> 24 | _ << 8) | 0, P = P >>> 25 | P << 7, T ^= y = y + v | 0, v ^= O = O + (T = T >>> 24 | T << 8) | 0, v = v >>> 25 | v << 7, x ^= m = m + A | 0, A ^= S = S + (x = x >>> 24 | x << 8) | 0, A = A >>> 25 | A << 7, _ ^= m = m + v | 0, v ^= k = k + (_ = _ >>> 16 | _ << 16) | 0, v = v >>> 20 | v << 12, x ^= y = y + E | 0, E ^= C = C + (x = x >>> 16 | x << 16) | 0, E = E >>> 20 | E << 12, T ^= b = b + P | 0, P ^= S = S + (T = T >>> 16 | T << 16) | 0, P = P >>> 20 | P << 12, N ^= w = w + A | 0, A ^= O = O + (N = N >>> 16 | N << 16) | 0, A = A >>> 20 | A << 12, T ^= b = b + P | 0, P ^= S = S + (T = T >>> 24 | T << 8) | 0, P = P >>> 25 | P << 7, N ^= w = w + A | 0, A ^= O = O + (N = N >>> 24 | N << 8) | 0, A = A >>> 25 | A << 7, x ^= y = y + E | 0, E ^= C = C + (x = x >>> 24 | x << 8) | 0, E = E >>> 25 | E << 7, _ ^= m = m + v | 0, v ^= k = k + (_ = _ >>> 24 | _ << 8) | 0, v = v >>> 25 | v << 7;
                        n.writeUint32LE(m + 1634760805 | 0, e, 0), n.writeUint32LE(y + 857760878 | 0, e, 4), n.writeUint32LE(b + 2036477234 | 0, e, 8), n.writeUint32LE(w + 1797285236 | 0, e, 12), n.writeUint32LE(A + i | 0, e, 16), n.writeUint32LE(v + s | 0, e, 20), n.writeUint32LE(E + o | 0, e, 24), n.writeUint32LE(P + a | 0, e, 28), n.writeUint32LE(S + l | 0, e, 32), n.writeUint32LE(O + u | 0, e, 36), n.writeUint32LE(k + c | 0, e, 40), n.writeUint32LE(C + d | 0, e, 44), n.writeUint32LE(x + h | 0, e, 48), n.writeUint32LE(T + f | 0, e, 52), n.writeUint32LE(N + p | 0, e, 56), n.writeUint32LE(_ + g | 0, e, 60)
                    }(u, a, e);
                    for (var d = c; d < c + 64 && d < r.length; d++) s[d] = r[d] ^ u[d - c];
                    ! function(e, t, r) {
                        for (var n = 1; r--;) n = n + (255 & e[t]) | 0, e[t] = 255 & n, n >>>= 8, t++;
                        if (n > 0) throw Error("ChaCha: counter overflow")
                    }(a, 0, l)
                }
                return i.wipe(u), 0 === o && i.wipe(a), s
            }
            t.streamXOR = s, t.stream = function(e, t, r, n) {
                return void 0 === n && (n = 0), i.wipe(r), s(e, t, r, r, n)
            }
        },
        50061: function(e, t, r) {
            "use strict";
            var n = r(71663),
                i = r(88391),
                s = r(61014),
                o = r(47127),
                a = r(93082);
            t.Cv = 32, t.WH = 12, t.pg = 16;
            var l = new Uint8Array(16),
                u = function() {
                    function e(e) {
                        if (this.nonceLength = t.WH, this.tagLength = t.pg, e.length !== t.Cv) throw Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(e)
                    }
                    return e.prototype.seal = function(e, t, r, i) {
                        if (e.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        var o, a = new Uint8Array(16);
                        a.set(e, a.length - e.length);
                        var l = new Uint8Array(32);
                        n.stream(this._key, a, l, 4);
                        var u = t.length + this.tagLength;
                        if (i) {
                            if (i.length !== u) throw Error("ChaCha20Poly1305: incorrect destination length");
                            o = i
                        } else o = new Uint8Array(u);
                        return n.streamXOR(this._key, a, t, o, 4), this._authenticate(o.subarray(o.length - this.tagLength, o.length), l, o.subarray(0, o.length - this.tagLength), r), s.wipe(a), o
                    }, e.prototype.open = function(e, t, r, i) {
                        if (e.length > 16) throw Error("ChaCha20Poly1305: incorrect nonce length");
                        if (t.length < this.tagLength) return null;
                        var o, l = new Uint8Array(16);
                        l.set(e, l.length - e.length);
                        var u = new Uint8Array(32);
                        n.stream(this._key, l, u, 4);
                        var c = new Uint8Array(this.tagLength);
                        if (this._authenticate(c, u, t.subarray(0, t.length - this.tagLength), r), !a.equal(c, t.subarray(t.length - this.tagLength, t.length))) return null;
                        var d = t.length - this.tagLength;
                        if (i) {
                            if (i.length !== d) throw Error("ChaCha20Poly1305: incorrect destination length");
                            o = i
                        } else o = new Uint8Array(d);
                        return n.streamXOR(this._key, l, t.subarray(0, t.length - this.tagLength), o, 4), s.wipe(l), o
                    }, e.prototype.clean = function() {
                        return s.wipe(this._key), this
                    }, e.prototype._authenticate = function(e, t, r, n) {
                        var a = new i.Poly1305(t);
                        n && (a.update(n), n.length % 16 > 0 && a.update(l.subarray(n.length % 16))), a.update(r), r.length % 16 > 0 && a.update(l.subarray(r.length % 16));
                        var u = new Uint8Array(8);
                        n && o.writeUint64LE(n.length, u), a.update(u), o.writeUint64LE(r.length, u), a.update(u);
                        for (var c = a.digest(), d = 0; d < c.length; d++) e[d] = c[d];
                        a.clean(), s.wipe(c), s.wipe(u)
                    }, e
                }();
            t.OK = u
        },
        93082: function(e, t) {
            "use strict";

            function r(e, t) {
                if (e.length !== t.length) return 0;
                for (var r = 0, n = 0; n < e.length; n++) r |= e[n] ^ t[n];
                return 1 & r - 1 >>> 8
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.select = function(e, t, r) {
                return ~(e - 1) & t | e - 1 & r
            }, t.lessOrEqual = function(e, t) {
                return (0 | e) - (0 | t) - 1 >>> 31 & 1
            }, t.compare = r, t.equal = function(e, t) {
                return 0 !== e.length && 0 !== t.length && 0 !== r(e, t)
            }
        },
        68017: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isSerializableHash = function(e) {
                return void 0 !== e.saveState && void 0 !== e.restoreState && void 0 !== e.cleanSavedState
            }
        },
        85722: function(e, t, r) {
            "use strict";
            var n = r(96942),
                i = r(61014),
                s = function() {
                    function e(e, t, r, i) {
                        void 0 === r && (r = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = e, this._info = i;
                        var s = n.hmac(this._hash, r, t);
                        this._hmac = new n.HMAC(e, s), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length
                    }
                    return e.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var e = this._counter[0];
                        if (0 === e) throw Error("hkdf: cannot expand more");
                        this._hmac.reset(), e > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0
                    }, e.prototype.expand = function(e) {
                        for (var t = new Uint8Array(e), r = 0; r < t.length; r++) this._bufpos === this._buffer.length && this._fillBuffer(), t[r] = this._buffer[this._bufpos++];
                        return t
                    }, e.prototype.clean = function() {
                        this._hmac.clean(), i.wipe(this._buffer), i.wipe(this._counter), this._bufpos = 0
                    }, e
                }();
            t.t = s
        },
        96942: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(68017),
                i = r(93082),
                s = r(61014),
                o = function() {
                    function e(e, t) {
                        this._finished = !1, this._inner = new e, this._outer = new e, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var r = new Uint8Array(this.blockSize);
                        t.length > this.blockSize ? this._inner.update(t).finish(r).clean() : r.set(t);
                        for (var i = 0; i < r.length; i++) r[i] ^= 54;
                        this._inner.update(r);
                        for (var i = 0; i < r.length; i++) r[i] ^= 106;
                        this._outer.update(r), n.isSerializableHash(this._inner) && n.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), s.wipe(r)
                    }
                    return e.prototype.reset = function() {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, e.prototype.clean = function() {
                        n.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), n.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean()
                    }, e.prototype.update = function(e) {
                        return this._inner.update(e), this
                    }, e.prototype.finish = function(e) {
                        return this._finished ? (this._outer.finish(e), this) : (this._inner.finish(e), this._outer.update(e.subarray(0, this.digestLength)).finish(e), this._finished = !0, this)
                    }, e.prototype.digest = function() {
                        var e = new Uint8Array(this.digestLength);
                        return this.finish(e), e
                    }, e.prototype.saveState = function() {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState()
                    }, e.prototype.restoreState = function(e) {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(e), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, e.prototype.cleanSavedState = function(e) {
                        if (!n.isSerializableHash(this._inner)) throw Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(e)
                    }, e
                }();
            t.HMAC = o, t.hmac = function(e, t, r) {
                var n = new o(e, t);
                n.update(r);
                var i = n.digest();
                return n.clean(), i
            }, t.equal = i.equal
        },
        4249: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mul = Math.imul || function(e, t) {
                var r = 65535 & e,
                    n = 65535 & t;
                return r * n + ((e >>> 16 & 65535) * n + r * (t >>> 16 & 65535) << 16 >>> 0) | 0
            }, t.add = function(e, t) {
                return e + t | 0
            }, t.sub = function(e, t) {
                return e - t | 0
            }, t.rotl = function(e, t) {
                return e << t | e >>> 32 - t
            }, t.rotr = function(e, t) {
                return e << 32 - t | e >>> t
            }, t.isInteger = Number.isInteger || function(e) {
                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
            }, t.MAX_SAFE_INTEGER = 9007199254740991, t.isSafeInteger = function(e) {
                return t.isInteger(e) && e >= -t.MAX_SAFE_INTEGER && e <= t.MAX_SAFE_INTEGER
            }
        },
        88391: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(93082),
                i = r(61014);
            t.DIGEST_LENGTH = 16;
            var s = function() {
                function e(e) {
                    this.digestLength = t.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                    var r = e[0] | e[1] << 8;
                    this._r[0] = 8191 & r;
                    var n = e[2] | e[3] << 8;
                    this._r[1] = (r >>> 13 | n << 3) & 8191;
                    var i = e[4] | e[5] << 8;
                    this._r[2] = (n >>> 10 | i << 6) & 7939;
                    var s = e[6] | e[7] << 8;
                    this._r[3] = (i >>> 7 | s << 9) & 8191;
                    var o = e[8] | e[9] << 8;
                    this._r[4] = (s >>> 4 | o << 12) & 255, this._r[5] = o >>> 1 & 8190;
                    var a = e[10] | e[11] << 8;
                    this._r[6] = (o >>> 14 | a << 2) & 8191;
                    var l = e[12] | e[13] << 8;
                    this._r[7] = (a >>> 11 | l << 5) & 8065;
                    var u = e[14] | e[15] << 8;
                    this._r[8] = (l >>> 8 | u << 8) & 8191, this._r[9] = u >>> 5 & 127, this._pad[0] = e[16] | e[17] << 8, this._pad[1] = e[18] | e[19] << 8, this._pad[2] = e[20] | e[21] << 8, this._pad[3] = e[22] | e[23] << 8, this._pad[4] = e[24] | e[25] << 8, this._pad[5] = e[26] | e[27] << 8, this._pad[6] = e[28] | e[29] << 8, this._pad[7] = e[30] | e[31] << 8
                }
                return e.prototype._blocks = function(e, t, r) {
                    for (var n = this._fin ? 0 : 2048, i = this._h[0], s = this._h[1], o = this._h[2], a = this._h[3], l = this._h[4], u = this._h[5], c = this._h[6], d = this._h[7], h = this._h[8], f = this._h[9], p = this._r[0], g = this._r[1], m = this._r[2], y = this._r[3], b = this._r[4], w = this._r[5], A = this._r[6], v = this._r[7], E = this._r[8], P = this._r[9]; r >= 16;) {
                        var S, O = e[t + 0] | e[t + 1] << 8;
                        i += 8191 & O;
                        var k = e[t + 2] | e[t + 3] << 8;
                        s += (O >>> 13 | k << 3) & 8191;
                        var C = e[t + 4] | e[t + 5] << 8;
                        o += (k >>> 10 | C << 6) & 8191;
                        var x = e[t + 6] | e[t + 7] << 8;
                        a += (C >>> 7 | x << 9) & 8191;
                        var T = e[t + 8] | e[t + 9] << 8;
                        l += (x >>> 4 | T << 12) & 8191, u += T >>> 1 & 8191;
                        var N = e[t + 10] | e[t + 11] << 8;
                        c += (T >>> 14 | N << 2) & 8191;
                        var _ = e[t + 12] | e[t + 13] << 8;
                        d += (N >>> 11 | _ << 5) & 8191;
                        var B = e[t + 14] | e[t + 15] << 8;
                        h += (_ >>> 8 | B << 8) & 8191, f += B >>> 5 | n;
                        var D = 0;
                        D = (S = 0 + i * p + s * (5 * P) + o * (5 * E) + a * (5 * v) + l * (5 * A)) >>> 13, S &= 8191, S += u * (5 * w) + c * (5 * b) + d * (5 * y) + h * (5 * m) + f * (5 * g), D += S >>> 13, S &= 8191;
                        var I = D;
                        I += i * g + s * p + o * (5 * P) + a * (5 * E) + l * (5 * v), D = I >>> 13, I &= 8191, I += u * (5 * A) + c * (5 * w) + d * (5 * b) + h * (5 * y) + f * (5 * m), D += I >>> 13, I &= 8191;
                        var R = D;
                        R += i * m + s * g + o * p + a * (5 * P) + l * (5 * E), D = R >>> 13, R &= 8191, R += u * (5 * v) + c * (5 * A) + d * (5 * w) + h * (5 * b) + f * (5 * y), D += R >>> 13, R &= 8191;
                        var M = D;
                        M += i * y + s * m + o * g + a * p + l * (5 * P), D = M >>> 13, M &= 8191, M += u * (5 * E) + c * (5 * v) + d * (5 * A) + h * (5 * w) + f * (5 * b), D += M >>> 13, M &= 8191;
                        var L = D;
                        L += i * b + s * y + o * m + a * g + l * p, D = L >>> 13, L &= 8191, L += u * (5 * P) + c * (5 * E) + d * (5 * v) + h * (5 * A) + f * (5 * w), D += L >>> 13, L &= 8191;
                        var U = D;
                        U += i * w + s * b + o * y + a * m + l * g, D = U >>> 13, U &= 8191, U += u * p + c * (5 * P) + d * (5 * E) + h * (5 * v) + f * (5 * A), D += U >>> 13, U &= 8191;
                        var j = D;
                        j += i * A + s * w + o * b + a * y + l * m, D = j >>> 13, j &= 8191, j += u * g + c * p + d * (5 * P) + h * (5 * E) + f * (5 * v), D += j >>> 13, j &= 8191;
                        var F = D;
                        F += i * v + s * A + o * w + a * b + l * y, D = F >>> 13, F &= 8191, F += u * m + c * g + d * p + h * (5 * P) + f * (5 * E), D += F >>> 13, F &= 8191;
                        var H = D;
                        H += i * E + s * v + o * A + a * w + l * b, D = H >>> 13, H &= 8191, H += u * y + c * m + d * g + h * p + f * (5 * P), D += H >>> 13, H &= 8191;
                        var $ = D;
                        $ += i * P + s * E + o * v + a * A + l * w, D = $ >>> 13, $ &= 8191, $ += u * b + c * y + d * m + h * g + f * p, D += $ >>> 13, $ &= 8191, S = 8191 & (D = (D = (D << 2) + D | 0) + S | 0), D >>>= 13, I += D, i = S, s = I, o = R, a = M, l = L, u = U, c = j, d = F, h = H, f = $, t += 16, r -= 16
                    }
                    this._h[0] = i, this._h[1] = s, this._h[2] = o, this._h[3] = a, this._h[4] = l, this._h[5] = u, this._h[6] = c, this._h[7] = d, this._h[8] = h, this._h[9] = f
                }, e.prototype.finish = function(e, t) {
                    void 0 === t && (t = 0);
                    var r, n, i, s, o = new Uint16Array(10);
                    if (this._leftover) {
                        for (s = this._leftover, this._buffer[s++] = 1; s < 16; s++) this._buffer[s] = 0;
                        this._fin = 1, this._blocks(this._buffer, 0, 16)
                    }
                    for (r = this._h[1] >>> 13, this._h[1] &= 8191, s = 2; s < 10; s++) this._h[s] += r, r = this._h[s] >>> 13, this._h[s] &= 8191;
                    for (this._h[0] += 5 * r, r = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += r, r = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += r, o[0] = this._h[0] + 5, r = o[0] >>> 13, o[0] &= 8191, s = 1; s < 10; s++) o[s] = this._h[s] + r, r = o[s] >>> 13, o[s] &= 8191;
                    for (o[9] -= 8192, n = (1 ^ r) - 1, s = 0; s < 10; s++) o[s] &= n;
                    for (s = 0, n = ~n; s < 10; s++) this._h[s] = this._h[s] & n | o[s];
                    for (s = 1, this._h[0] = (this._h[0] | this._h[1] << 13) & 65535, this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535, this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535, this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535, this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535, this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535, this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535, this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535, i = this._h[0] + this._pad[0], this._h[0] = 65535 & i; s < 8; s++) i = (this._h[s] + this._pad[s] | 0) + (i >>> 16) | 0, this._h[s] = 65535 & i;
                    return e[t + 0] = this._h[0] >>> 0, e[t + 1] = this._h[0] >>> 8, e[t + 2] = this._h[1] >>> 0, e[t + 3] = this._h[1] >>> 8, e[t + 4] = this._h[2] >>> 0, e[t + 5] = this._h[2] >>> 8, e[t + 6] = this._h[3] >>> 0, e[t + 7] = this._h[3] >>> 8, e[t + 8] = this._h[4] >>> 0, e[t + 9] = this._h[4] >>> 8, e[t + 10] = this._h[5] >>> 0, e[t + 11] = this._h[5] >>> 8, e[t + 12] = this._h[6] >>> 0, e[t + 13] = this._h[6] >>> 8, e[t + 14] = this._h[7] >>> 0, e[t + 15] = this._h[7] >>> 8, this._finished = !0, this
                }, e.prototype.update = function(e) {
                    var t, r = 0,
                        n = e.length;
                    if (this._leftover) {
                        (t = 16 - this._leftover) > n && (t = n);
                        for (var i = 0; i < t; i++) this._buffer[this._leftover + i] = e[r + i];
                        if (n -= t, r += t, this._leftover += t, this._leftover < 16) return this;
                        this._blocks(this._buffer, 0, 16), this._leftover = 0
                    }
                    if (n >= 16 && (t = n - n % 16, this._blocks(e, r, t), r += t, n -= t), n) {
                        for (var i = 0; i < n; i++) this._buffer[this._leftover + i] = e[r + i];
                        this._leftover += n
                    }
                    return this
                }, e.prototype.digest = function() {
                    if (this._finished) throw Error("Poly1305 was finished");
                    var e = new Uint8Array(16);
                    return this.finish(e), e
                }, e.prototype.clean = function() {
                    return i.wipe(this._buffer), i.wipe(this._r), i.wipe(this._h), i.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this
                }, e
            }();
            t.Poly1305 = s, t.oneTimeAuth = function(e, t) {
                var r = new s(e);
                r.update(t);
                var n = r.digest();
                return r.clean(), n
            }, t.equal = function(e, r) {
                return e.length === t.DIGEST_LENGTH && r.length === t.DIGEST_LENGTH && n.equal(e, r)
            }
        },
        18608: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomStringForEntropy = t.randomString = t.randomUint32 = t.randomBytes = t.defaultRandomSource = void 0;
            let n = r(85730),
                i = r(47127),
                s = r(61014);

            function o(e, r = t.defaultRandomSource) {
                return r.randomBytes(e)
            }
            t.defaultRandomSource = new n.SystemRandomSource, t.randomBytes = o, t.randomUint32 = function(e = t.defaultRandomSource) {
                let r = o(4, e),
                    n = (0, i.readUint32LE)(r);
                return (0, s.wipe)(r), n
            };
            let a = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            function l(e, r = a, n = t.defaultRandomSource) {
                if (r.length < 2) throw Error("randomString charset is too short");
                if (r.length > 256) throw Error("randomString charset is too long");
                let i = "",
                    l = r.length,
                    u = 256 - 256 % l;
                for (; e > 0;) {
                    let t = o(Math.ceil(256 * e / u), n);
                    for (let n = 0; n < t.length && e > 0; n++) {
                        let s = t[n];
                        s < u && (i += r.charAt(s % l), e--)
                    }(0, s.wipe)(t)
                }
                return i
            }
            t.randomString = l, t.randomStringForEntropy = function(e, r = a, n = t.defaultRandomSource) {
                let i = Math.ceil(e / (Math.log(r.length) / Math.LN2));
                return l(i, r, n)
            }
        },
        79119: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BrowserRandomSource = void 0, t.BrowserRandomSource = class {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1;
                    let e = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
                    e && void 0 !== e.getRandomValues && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0)
                }
                randomBytes(e) {
                    if (!this.isAvailable || !this._crypto) throw Error("Browser random byte generator is not available.");
                    let t = new Uint8Array(e);
                    for (let e = 0; e < t.length; e += 65536) this._crypto.getRandomValues(t.subarray(e, e + Math.min(t.length - e, 65536)));
                    return t
                }
            }
        },
        75195: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NodeRandomSource = void 0;
            let n = r(61014);
            t.NodeRandomSource = class {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1; {
                        let e = r(75477);
                        e && e.randomBytes && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0)
                    }
                }
                randomBytes(e) {
                    if (!this.isAvailable || !this._crypto) throw Error("Node.js random byte generator is not available.");
                    let t = this._crypto.randomBytes(e);
                    if (t.length !== e) throw Error("NodeRandomSource: got fewer bytes than requested");
                    let r = new Uint8Array(e);
                    for (let e = 0; e < r.length; e++) r[e] = t[e];
                    return (0, n.wipe)(t), r
                }
            }
        },
        85730: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SystemRandomSource = void 0;
            let n = r(79119),
                i = r(75195);
            t.SystemRandomSource = class {
                constructor() {
                    if (this.isAvailable = !1, this.name = "", this._source = new n.BrowserRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Browser";
                        return
                    }
                    if (this._source = new i.NodeRandomSource, this._source.isAvailable) {
                        this.isAvailable = !0, this.name = "Node";
                        return
                    }
                }
                randomBytes(e) {
                    if (!this.isAvailable) throw Error("System random byte generator is not available.");
                    return this._source.randomBytes(e)
                }
            }
        },
        75801: function(e, t, r) {
            "use strict";
            var n = r(47127),
                i = r(61014);
            t.k = 32, t.cn = 64;
            var s = function() {
                function e() {
                    this.digestLength = t.k, this.blockSize = t.cn, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return e.prototype._initState = function() {
                    this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225
                }, e.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, e.prototype.clean = function() {
                    i.wipe(this._buffer), i.wipe(this._temp), this.reset()
                }, e.prototype.update = function(e, t) {
                    if (void 0 === t && (t = e.length), this._finished) throw Error("SHA256: can't update because hash was finished.");
                    var r = 0;
                    if (this._bytesHashed += t, this._bufferLength > 0) {
                        for (; this._bufferLength < this.blockSize && t > 0;) this._buffer[this._bufferLength++] = e[r++], t--;
                        this._bufferLength === this.blockSize && (a(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (t >= this.blockSize && (r = a(this._temp, this._state, e, r, t), t %= this.blockSize); t > 0;) this._buffer[this._bufferLength++] = e[r++], t--;
                    return this
                }, e.prototype.finish = function(e) {
                    if (!this._finished) {
                        var t = this._bytesHashed,
                            r = this._bufferLength,
                            i = t % 64 < 56 ? 64 : 128;
                        this._buffer[r] = 128;
                        for (var s = r + 1; s < i - 8; s++) this._buffer[s] = 0;
                        n.writeUint32BE(t / 536870912 | 0, this._buffer, i - 8), n.writeUint32BE(t << 3, this._buffer, i - 4), a(this._temp, this._state, this._buffer, 0, i), this._finished = !0
                    }
                    for (var s = 0; s < this.digestLength / 4; s++) n.writeUint32BE(this._state[s], e, 4 * s);
                    return this
                }, e.prototype.digest = function() {
                    var e = new Uint8Array(this.digestLength);
                    return this.finish(e), e
                }, e.prototype.saveState = function() {
                    if (this._finished) throw Error("SHA256: cannot save finished state");
                    return {
                        state: new Int32Array(this._state),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, e.prototype.restoreState = function(e) {
                    return this._state.set(e.state), this._bufferLength = e.bufferLength, e.buffer && this._buffer.set(e.buffer), this._bytesHashed = e.bytesHashed, this._finished = !1, this
                }, e.prototype.cleanSavedState = function(e) {
                    i.wipe(e.state), e.buffer && i.wipe(e.buffer), e.bufferLength = 0, e.bytesHashed = 0
                }, e
            }();
            t.mE = s;
            var o = new Int32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);

            function a(e, t, r, i, s) {
                for (; s >= 64;) {
                    for (var a = t[0], l = t[1], u = t[2], c = t[3], d = t[4], h = t[5], f = t[6], p = t[7], g = 0; g < 16; g++) {
                        var m = i + 4 * g;
                        e[g] = n.readUint32BE(r, m)
                    }
                    for (var g = 16; g < 64; g++) {
                        var y = e[g - 2],
                            b = (y >>> 17 | y << 15) ^ (y >>> 19 | y << 13) ^ y >>> 10,
                            w = ((y = e[g - 15]) >>> 7 | y << 25) ^ (y >>> 18 | y << 14) ^ y >>> 3;
                        e[g] = (b + e[g - 7] | 0) + (w + e[g - 16] | 0)
                    }
                    for (var g = 0; g < 64; g++) {
                        var b = (((d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7)) + (d & h ^ ~d & f) | 0) + (p + (o[g] + e[g] | 0) | 0) | 0,
                            w = ((a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10)) + (a & l ^ a & u ^ l & u) | 0;
                        p = f, f = h, h = d, d = c + b | 0, c = u, u = l, l = a, a = b + w | 0
                    }
                    t[0] += a, t[1] += l, t[2] += u, t[3] += c, t[4] += d, t[5] += h, t[6] += f, t[7] += p, i += 64, s -= 64
                }
                return i
            }
            t.vp = function(e) {
                var t = new s;
                t.update(e);
                var r = t.digest();
                return t.clean(), r
            }
        },
        61014: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wipe = function(e) {
                for (var t = 0; t < e.length; t++) e[t] = 0;
                return e
            }
        },
        64851: function(e, t, r) {
            "use strict";
            t.gi = t.Au = t.KS = t.kz = void 0;
            let n = r(18608),
                i = r(61014);

            function s(e) {
                let t = new Float64Array(16);
                if (e)
                    for (let r = 0; r < e.length; r++) t[r] = e[r];
                return t
            }
            t.kz = 32, t.KS = 32;
            let o = new Uint8Array(32);
            o[0] = 9;
            let a = s([56129, 1]);

            function l(e) {
                let t = 1;
                for (let r = 0; r < 16; r++) {
                    let n = e[r] + t + 65535;
                    t = Math.floor(n / 65536), e[r] = n - 65536 * t
                }
                e[0] += t - 1 + 37 * (t - 1)
            }

            function u(e, t, r) {
                let n = ~(r - 1);
                for (let r = 0; r < 16; r++) {
                    let i = n & (e[r] ^ t[r]);
                    e[r] ^= i, t[r] ^= i
                }
            }

            function c(e, t, r) {
                for (let n = 0; n < 16; n++) e[n] = t[n] + r[n]
            }

            function d(e, t, r) {
                for (let n = 0; n < 16; n++) e[n] = t[n] - r[n]
            }

            function h(e, t, r) {
                let n, i, s = 0,
                    o = 0,
                    a = 0,
                    l = 0,
                    u = 0,
                    c = 0,
                    d = 0,
                    h = 0,
                    f = 0,
                    p = 0,
                    g = 0,
                    m = 0,
                    y = 0,
                    b = 0,
                    w = 0,
                    A = 0,
                    v = 0,
                    E = 0,
                    P = 0,
                    S = 0,
                    O = 0,
                    k = 0,
                    C = 0,
                    x = 0,
                    T = 0,
                    N = 0,
                    _ = 0,
                    B = 0,
                    D = 0,
                    I = 0,
                    R = 0,
                    M = r[0],
                    L = r[1],
                    U = r[2],
                    j = r[3],
                    F = r[4],
                    H = r[5],
                    $ = r[6],
                    K = r[7],
                    z = r[8],
                    V = r[9],
                    G = r[10],
                    W = r[11],
                    J = r[12],
                    q = r[13],
                    Q = r[14],
                    Y = r[15];
                s += (n = t[0]) * M, o += n * L, a += n * U, l += n * j, u += n * F, c += n * H, d += n * $, h += n * K, f += n * z, p += n * V, g += n * G, m += n * W, y += n * J, b += n * q, w += n * Q, A += n * Y, o += (n = t[1]) * M, a += n * L, l += n * U, u += n * j, c += n * F, d += n * H, h += n * $, f += n * K, p += n * z, g += n * V, m += n * G, y += n * W, b += n * J, w += n * q, A += n * Q, v += n * Y, a += (n = t[2]) * M, l += n * L, u += n * U, c += n * j, d += n * F, h += n * H, f += n * $, p += n * K, g += n * z, m += n * V, y += n * G, b += n * W, w += n * J, A += n * q, v += n * Q, E += n * Y, l += (n = t[3]) * M, u += n * L, c += n * U, d += n * j, h += n * F, f += n * H, p += n * $, g += n * K, m += n * z, y += n * V, b += n * G, w += n * W, A += n * J, v += n * q, E += n * Q, P += n * Y, u += (n = t[4]) * M, c += n * L, d += n * U, h += n * j, f += n * F, p += n * H, g += n * $, m += n * K, y += n * z, b += n * V, w += n * G, A += n * W, v += n * J, E += n * q, P += n * Q, S += n * Y, c += (n = t[5]) * M, d += n * L, h += n * U, f += n * j, p += n * F, g += n * H, m += n * $, y += n * K, b += n * z, w += n * V, A += n * G, v += n * W, E += n * J, P += n * q, S += n * Q, O += n * Y, d += (n = t[6]) * M, h += n * L, f += n * U, p += n * j, g += n * F, m += n * H, y += n * $, b += n * K, w += n * z, A += n * V, v += n * G, E += n * W, P += n * J, S += n * q, O += n * Q, k += n * Y, h += (n = t[7]) * M, f += n * L, p += n * U, g += n * j, m += n * F, y += n * H, b += n * $, w += n * K, A += n * z, v += n * V, E += n * G, P += n * W, S += n * J, O += n * q, k += n * Q, C += n * Y, f += (n = t[8]) * M, p += n * L, g += n * U, m += n * j, y += n * F, b += n * H, w += n * $, A += n * K, v += n * z, E += n * V, P += n * G, S += n * W, O += n * J, k += n * q, C += n * Q, x += n * Y, p += (n = t[9]) * M, g += n * L, m += n * U, y += n * j, b += n * F, w += n * H, A += n * $, v += n * K, E += n * z, P += n * V, S += n * G, O += n * W, k += n * J, C += n * q, x += n * Q, T += n * Y, g += (n = t[10]) * M, m += n * L, y += n * U, b += n * j, w += n * F, A += n * H, v += n * $, E += n * K, P += n * z, S += n * V, O += n * G, k += n * W, C += n * J, x += n * q, T += n * Q, N += n * Y, m += (n = t[11]) * M, y += n * L, b += n * U, w += n * j, A += n * F, v += n * H, E += n * $, P += n * K, S += n * z, O += n * V, k += n * G, C += n * W, x += n * J, T += n * q, N += n * Q, _ += n * Y, y += (n = t[12]) * M, b += n * L, w += n * U, A += n * j, v += n * F, E += n * H, P += n * $, S += n * K, O += n * z, k += n * V, C += n * G, x += n * W, T += n * J, N += n * q, _ += n * Q, B += n * Y, b += (n = t[13]) * M, w += n * L, A += n * U, v += n * j, E += n * F, P += n * H, S += n * $, O += n * K, k += n * z, C += n * V, x += n * G, T += n * W, N += n * J, _ += n * q, B += n * Q, D += n * Y, w += (n = t[14]) * M, A += n * L, v += n * U, E += n * j, P += n * F, S += n * H, O += n * $, k += n * K, C += n * z, x += n * V, T += n * G, N += n * W, _ += n * J, B += n * q, D += n * Q, I += n * Y, A += (n = t[15]) * M, v += n * L, E += n * U, P += n * j, S += n * F, O += n * H, k += n * $, C += n * K, x += n * z, T += n * V, N += n * G, _ += n * W, B += n * J, D += n * q, I += n * Q, R += n * Y, s += 38 * v, o += 38 * E, a += 38 * P, l += 38 * S, u += 38 * O, c += 38 * k, d += 38 * C, h += 38 * x, f += 38 * T, p += 38 * N, g += 38 * _, m += 38 * B, y += 38 * D, b += 38 * I, w += 38 * R, i = Math.floor((n = s + (i = 1) + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = o + i + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = h + i + 65535) / 65536), h = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = m + i + 65535) / 65536), m = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = b + i + 65535) / 65536), b = n - 65536 * i, i = Math.floor((n = w + i + 65535) / 65536), w = n - 65536 * i, i = Math.floor((n = A + i + 65535) / 65536), A = n - 65536 * i, s += i - 1 + 37 * (i - 1), i = Math.floor((n = s + (i = 1) + 65535) / 65536), s = n - 65536 * i, i = Math.floor((n = o + i + 65535) / 65536), o = n - 65536 * i, i = Math.floor((n = a + i + 65535) / 65536), a = n - 65536 * i, i = Math.floor((n = l + i + 65535) / 65536), l = n - 65536 * i, i = Math.floor((n = u + i + 65535) / 65536), u = n - 65536 * i, i = Math.floor((n = c + i + 65535) / 65536), c = n - 65536 * i, i = Math.floor((n = d + i + 65535) / 65536), d = n - 65536 * i, i = Math.floor((n = h + i + 65535) / 65536), h = n - 65536 * i, i = Math.floor((n = f + i + 65535) / 65536), f = n - 65536 * i, i = Math.floor((n = p + i + 65535) / 65536), p = n - 65536 * i, i = Math.floor((n = g + i + 65535) / 65536), g = n - 65536 * i, i = Math.floor((n = m + i + 65535) / 65536), m = n - 65536 * i, i = Math.floor((n = y + i + 65535) / 65536), y = n - 65536 * i, i = Math.floor((n = b + i + 65535) / 65536), b = n - 65536 * i, i = Math.floor((n = w + i + 65535) / 65536), w = n - 65536 * i, i = Math.floor((n = A + i + 65535) / 65536), A = n - 65536 * i, s += i - 1 + 37 * (i - 1), e[0] = s, e[1] = o, e[2] = a, e[3] = l, e[4] = u, e[5] = c, e[6] = d, e[7] = h, e[8] = f, e[9] = p, e[10] = g, e[11] = m, e[12] = y, e[13] = b, e[14] = w, e[15] = A
            }

            function f(e, t) {
                let r = new Uint8Array(32),
                    n = new Float64Array(80),
                    i = s(),
                    o = s(),
                    f = s(),
                    p = s(),
                    g = s(),
                    m = s();
                for (let t = 0; t < 31; t++) r[t] = e[t];
                r[31] = 127 & e[31] | 64, r[0] &= 248,
                    function(e, t) {
                        for (let r = 0; r < 16; r++) e[r] = t[2 * r] + (t[2 * r + 1] << 8);
                        e[15] &= 32767
                    }(n, t);
                for (let e = 0; e < 16; e++) o[e] = n[e];
                i[0] = p[0] = 1;
                for (let e = 254; e >= 0; --e) {
                    let t = r[e >>> 3] >>> (7 & e) & 1;
                    u(i, o, t), u(f, p, t), c(g, i, f), d(i, i, f), c(f, o, p), d(o, o, p), h(p, g, g), h(m, i, i), h(i, f, i), h(f, o, g), c(g, i, f), d(i, i, f), h(o, i, i), d(f, p, m), h(i, f, a), c(i, i, p), h(f, f, i), h(i, p, m), h(p, o, n), h(o, g, g), u(i, o, t), u(f, p, t)
                }
                for (let e = 0; e < 16; e++) n[e + 16] = i[e], n[e + 32] = f[e], n[e + 48] = o[e], n[e + 64] = p[e];
                let y = n.subarray(32),
                    b = n.subarray(16);
                ! function(e, t) {
                    let r = s();
                    for (let e = 0; e < 16; e++) r[e] = t[e];
                    for (let e = 253; e >= 0; e--) h(r, r, r), 2 !== e && 4 !== e && h(r, r, t);
                    for (let t = 0; t < 16; t++) e[t] = r[t]
                }(y, y), h(b, b, y);
                let w = new Uint8Array(32);
                return ! function(e, t) {
                    let r = s(),
                        n = s();
                    for (let e = 0; e < 16; e++) n[e] = t[e];
                    l(n), l(n), l(n);
                    for (let e = 0; e < 2; e++) {
                        r[0] = n[0] - 65517;
                        for (let e = 1; e < 15; e++) r[e] = n[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                        r[15] = n[15] - 32767 - (r[14] >> 16 & 1);
                        let e = r[15] >> 16 & 1;
                        r[14] &= 65535, u(n, r, 1 - e)
                    }
                    for (let t = 0; t < 16; t++) e[2 * t] = 255 & n[t], e[2 * t + 1] = n[t] >> 8
                }(w, b), w
            }
            t.Au = function(e) {
                let r = (0, n.randomBytes)(32, e),
                    s = function(e) {
                        if (e.length !== t.KS) throw Error(`x25519: seed must be ${t.KS} bytes`);
                        let r = new Uint8Array(e),
                            n = f(r, o);
                        return {
                            publicKey: n,
                            secretKey: r
                        }
                    }(r);
                return (0, i.wipe)(r), s
            }, t.gi = function(e, r, n = !1) {
                if (e.length !== t.kz) throw Error("X25519: incorrect secret key length");
                if (r.length !== t.kz) throw Error("X25519: incorrect public key length");
                let i = f(e, r);
                if (n) {
                    let e = 0;
                    for (let t = 0; t < i.length; t++) e |= i[t];
                    if (0 === e) throw Error("X25519: invalid shared key")
                }
                return i
            }
        },
        33318: function(e, t, r) {
            "use strict";

            function n(e) {
                var t = e.match(/^var\((.*)\)$/);
                return t ? t[1] : e
            }

            function i(e, t) {
                var r = {};
                if ("object" == typeof t) ! function e(t, r) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                        i = t.constructor();
                    for (var s in t) {
                        var o = t[s],
                            a = [...n, s];
                        "string" == typeof o || "number" == typeof o || null == o ? i[s] = r(o, a) : "object" != typeof o || Array.isArray(o) ? console.warn('Skipping invalid key "'.concat(a.join("."), '". Should be a string, number, null or object. Received: "').concat(Array.isArray(o) ? "Array" : typeof o, '"')) : i[s] = e(o, r, a)
                    }
                    return i
                }(t, (t, i) => {
                    r[n(function(e, t) {
                        var r = e;
                        for (var n of t) {
                            if (!(n in r)) throw Error("Path ".concat(t.join(" -> "), " does not exist in object"));
                            r = r[n]
                        }
                        return r
                    }(e, i))] = String(t)
                });
                else
                    for (var i in e) r[n(i)] = e[i];
                return Object.defineProperty(r, "toString", {
                    value: function() {
                        return Object.keys(this).map(e => "".concat(e, ":").concat(this[e])).join(";")
                    },
                    writable: !1
                }), r
            }
            r.d(t, {
                L: function() {
                    return i
                }
            })
        },
        52053: function(e, t, r) {
            "use strict";

            function n(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter(function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    })), r.push.apply(r, n)
                }
                return r
            }

            function i(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? n(Object(r), !0).forEach(function(t) {
                        var n;
                        n = r[t], t in e ? Object.defineProperty(e, t, {
                            value: n,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : e[t] = n
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    })
                }
                return e
            }
            r.d(t, {
                $: function() {
                    return a
                }
            });
            var s = e => function() {
                    for (var t = arguments.length, r = Array(t), n = 0; n < t; n++) r[n] = arguments[n];
                    var s = Object.assign({}, ...r.map(e => e.styles)),
                        o = Object.keys(s),
                        a = o.filter(e => "mappings" in s[e]);
                    return Object.assign(t => {
                        var r = [],
                            n = {},
                            o = i({}, t),
                            l = !1;
                        for (var u of a) {
                            var c = t[u];
                            if (null != c)
                                for (var d of (l = !0, s[u].mappings)) n[d] = c, null == o[d] && delete o[d]
                        }
                        var h = l ? i(i({}, n), o) : t;
                        for (var f in h) {
                            var p = h[f],
                                g = s[f];
                            try {
                                if (g.mappings) continue;
                                if ("string" == typeof p || "number" == typeof p) r.push(g.values[p].defaultClass);
                                else if (Array.isArray(p))
                                    for (var m = 0; m < p.length; m++) {
                                        var y = p[m];
                                        if (null != y) {
                                            var b = g.responsiveArray[m];
                                            r.push(g.values[y].conditions[b])
                                        }
                                    } else
                                        for (var w in p) {
                                            var A = p[w];
                                            null != A && r.push(g.values[A].conditions[w])
                                        }
                            } catch (e) {
                                throw e
                            }
                        }
                        return e(r.join(" "))
                    }, {
                        properties: new Set(o)
                    })
                },
                o = e => e,
                a = function() {
                    return s(o)(...arguments)
                }
        },
        543: function(e, t, r) {
            "use strict";
            r.d(t, {
                d: function() {
                    return s
                },
                M: function() {
                    return i
                }
            });
            var n = function(e, t) {
                return Object.defineProperty(e, "__recipe__", {
                    value: t,
                    writable: !1
                }), e
            };

            function i(e) {
                var {
                    conditions: t
                } = e;
                if (!t) throw Error("Styles have no conditions");
                return n(function(e) {
                    if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e) {
                        if (!t.defaultCondition) throw Error("No default condition");
                        return {
                            [t.defaultCondition]: e
                        }
                    }
                    if (Array.isArray(e)) {
                        if (!("responsiveArray" in t)) throw Error("Responsive arrays are not supported");
                        var r = {};
                        for (var n in t.responsiveArray) null != e[n] && (r[t.responsiveArray[n]] = e[n]);
                        return r
                    }
                    return e
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createNormalizeValueFn",
                    args: [{
                        conditions: e.conditions
                    }]
                })
            }

            function s(e) {
                var {
                    conditions: t
                } = e;
                if (!t) throw Error("Styles have no conditions");
                var r = i(e);
                return n(function(e, n) {
                    if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e) {
                        if (!t.defaultCondition) throw Error("No default condition");
                        return n(e, t.defaultCondition)
                    }
                    var i = Array.isArray(e) ? r(e) : e,
                        s = {};
                    for (var o in i) null != i[o] && (s[o] = n(i[o], o));
                    return s
                }, {
                    importPath: "@vanilla-extract/sprinkles/createUtils",
                    importName: "createMapValueFn",
                    args: [{
                        conditions: e.conditions
                    }]
                })
            }
        },
        21150: function() {},
        98031: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(20494);
            n.__exportStar(r(58534), t), n.__exportStar(r(95464), t)
        },
        58534: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_THOUSAND = t.ONE_HUNDRED = void 0, t.ONE_HUNDRED = 100, t.ONE_THOUSAND = 1e3
        },
        95464: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_YEAR = t.FOUR_WEEKS = t.THREE_WEEKS = t.TWO_WEEKS = t.ONE_WEEK = t.THIRTY_DAYS = t.SEVEN_DAYS = t.FIVE_DAYS = t.THREE_DAYS = t.ONE_DAY = t.TWENTY_FOUR_HOURS = t.TWELVE_HOURS = t.SIX_HOURS = t.THREE_HOURS = t.ONE_HOUR = t.SIXTY_MINUTES = t.THIRTY_MINUTES = t.TEN_MINUTES = t.FIVE_MINUTES = t.ONE_MINUTE = t.SIXTY_SECONDS = t.THIRTY_SECONDS = t.TEN_SECONDS = t.FIVE_SECONDS = t.ONE_SECOND = void 0, t.ONE_SECOND = 1, t.FIVE_SECONDS = 5, t.TEN_SECONDS = 10, t.THIRTY_SECONDS = 30, t.SIXTY_SECONDS = 60, t.ONE_MINUTE = t.SIXTY_SECONDS, t.FIVE_MINUTES = 5 * t.ONE_MINUTE, t.TEN_MINUTES = 10 * t.ONE_MINUTE, t.THIRTY_MINUTES = 30 * t.ONE_MINUTE, t.SIXTY_MINUTES = 60 * t.ONE_MINUTE, t.ONE_HOUR = t.SIXTY_MINUTES, t.THREE_HOURS = 3 * t.ONE_HOUR, t.SIX_HOURS = 6 * t.ONE_HOUR, t.TWELVE_HOURS = 12 * t.ONE_HOUR, t.TWENTY_FOUR_HOURS = 24 * t.ONE_HOUR, t.ONE_DAY = t.TWENTY_FOUR_HOURS, t.THREE_DAYS = 3 * t.ONE_DAY, t.FIVE_DAYS = 5 * t.ONE_DAY, t.SEVEN_DAYS = 7 * t.ONE_DAY, t.THIRTY_DAYS = 30 * t.ONE_DAY, t.ONE_WEEK = t.SEVEN_DAYS, t.TWO_WEEKS = 2 * t.ONE_WEEK, t.THREE_WEEKS = 3 * t.ONE_WEEK, t.FOUR_WEEKS = 4 * t.ONE_WEEK, t.ONE_YEAR = 365 * t.ONE_DAY
        },
        94240: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(20494);
            n.__exportStar(r(16964), t), n.__exportStar(r(17712), t), n.__exportStar(r(1925), t), n.__exportStar(r(98031), t)
        },
        1925: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(20494);
            n.__exportStar(r(36337), t)
        },
        36337: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IWatch = void 0, t.IWatch = class {}
        },
        93358: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.fromMiliseconds = t.toMiliseconds = void 0;
            let n = r(98031);
            t.toMiliseconds = function(e) {
                return e * n.ONE_THOUSAND
            }, t.fromMiliseconds = function(e) {
                return Math.floor(e / n.ONE_THOUSAND)
            }
        },
        7432: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.delay = void 0, t.delay = function(e) {
                return new Promise(t => {
                    setTimeout(() => {
                        t(!0)
                    }, e)
                })
            }
        },
        16964: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(20494);
            n.__exportStar(r(7432), t), n.__exportStar(r(93358), t)
        },
        17712: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Watch = void 0;
            class r {
                constructor() {
                    this.timestamps = new Map
                }
                start(e) {
                    if (this.timestamps.has(e)) throw Error(`Watch already started for label: ${e}`);
                    this.timestamps.set(e, {
                        started: Date.now()
                    })
                }
                stop(e) {
                    let t = this.get(e);
                    if (void 0 !== t.elapsed) throw Error(`Watch already stopped for label: ${e}`);
                    let r = Date.now() - t.started;
                    this.timestamps.set(e, {
                        started: t.started,
                        elapsed: r
                    })
                }
                get(e) {
                    let t = this.timestamps.get(e);
                    if (void 0 === t) throw Error(`No timestamp found for label: ${e}`);
                    return t
                }
                elapsed(e) {
                    let t = this.get(e),
                        r = t.elapsed || Date.now() - t.started;
                    return r
                }
            }
            t.Watch = r, t.default = r
        },
        20494: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                __assign: function() {
                    return s
                },
                __asyncDelegator: function() {
                    return A
                },
                __asyncGenerator: function() {
                    return w
                },
                __asyncValues: function() {
                    return v
                },
                __await: function() {
                    return b
                },
                __awaiter: function() {
                    return c
                },
                __classPrivateFieldGet: function() {
                    return O
                },
                __classPrivateFieldSet: function() {
                    return k
                },
                __createBinding: function() {
                    return h
                },
                __decorate: function() {
                    return a
                },
                __exportStar: function() {
                    return f
                },
                __extends: function() {
                    return i
                },
                __generator: function() {
                    return d
                },
                __importDefault: function() {
                    return S
                },
                __importStar: function() {
                    return P
                },
                __makeTemplateObject: function() {
                    return E
                },
                __metadata: function() {
                    return u
                },
                __param: function() {
                    return l
                },
                __read: function() {
                    return g
                },
                __rest: function() {
                    return o
                },
                __spread: function() {
                    return m
                },
                __spreadArrays: function() {
                    return y
                },
                __values: function() {
                    return p
                }
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.

            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.

            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var s = function() {
                return (s = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function o(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function a(e, t, r, n) {
                var i, s = arguments.length,
                    o = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (o = (s < 3 ? i(o) : s > 3 ? i(t, r, o) : i(t, r)) || o);
                return s > 3 && o && Object.defineProperty(t, r, o), o
            }

            function l(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function u(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function c(e, t, r, n) {
                return new(r || (r = Promise))(function(i, s) {
                    function o(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(o, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, s, o = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return s = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
                    return this
                }), s;

                function a(s) {
                    return function(a) {
                        return function(s) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; o;) try {
                                if (r = 1, n && (i = 2 & s[0] ? n.return : s[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, s[1])).done) return i;
                                switch (n = 0, i && (s = [2 & s[0], i.value]), s[0]) {
                                    case 0:
                                    case 1:
                                        i = s;
                                        break;
                                    case 4:
                                        return o.label++, {
                                            value: s[1],
                                            done: !1
                                        };
                                    case 5:
                                        o.label++, n = s[1], s = [0];
                                        continue;
                                    case 7:
                                        s = o.ops.pop(), o.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = o.trys).length > 0 && i[i.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                            o = 0;
                                            continue
                                        }
                                        if (3 === s[0] && (!i || s[1] > i[0] && s[1] < i[3])) {
                                            o.label = s[1];
                                            break
                                        }
                                        if (6 === s[0] && o.label < i[1]) {
                                            o.label = i[1], i = s;
                                            break
                                        }
                                        if (i && o.label < i[2]) {
                                            o.label = i[2], o.ops.push(s);
                                            break
                                        }
                                        i[2] && o.ops.pop(), o.trys.pop();
                                        continue
                                }
                                s = t.call(e, o)
                            } catch (e) {
                                s = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & s[0]) throw s[1];
                            return {
                                value: s[0] ? s[1] : void 0,
                                done: !0
                            }
                        }([s, a])
                    }
                }
            }

            function h(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function f(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, s = r.call(e),
                    o = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = s.next()).done;) o.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = s.return) && r.call(s)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return o
            }

            function m() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(g(arguments[t]));
                return e
            }

            function y() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var s = arguments[t], o = 0, a = s.length; o < a; o++, i++) n[i] = s[o];
                return n
            }

            function b(e) {
                return this instanceof b ? (this.v = e, this) : new b(e)
            }

            function w(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    s = [];
                return n = {}, o("next"), o("throw"), o("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function o(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            s.push([e, t, r, n]) > 1 || a(e, t)
                        })
                    })
                }

                function a(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof b ? Promise.resolve(r.value.v).then(l, u) : c(s[0][2], r)
                    } catch (e) {
                        c(s[0][3], e)
                    }
                }

                function l(e) {
                    a("next", e)
                }

                function u(e) {
                    a("throw", e)
                }

                function c(e, t) {
                    e(t), s.shift(), s.length && a(s[0][0], s[0][1])
                }
            }

            function A(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: b(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function v(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function E(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function P(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function S(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function O(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function k(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        85689: function(e, t, r) {
            "use strict";
            r.d(t, {
                AW: function() {
                    return A
                },
                O6: function() {
                    return to
                },
                rV: function() {
                    return P
                },
                gn: function() {
                    return ei
                },
                H1: function() {
                    return Z
                },
                hF: function() {
                    return X
                },
                WG: function() {
                    return T
                },
                pe: function() {
                    return _
                },
                m$: function() {
                    return k
                },
                vB: function() {
                    return B
                },
                HI: function() {
                    return N
                },
                E0: function() {
                    return eo
                },
                Gq: function() {
                    return er
                },
                $0: function() {
                    return J
                },
                Z4: function() {
                    return et
                },
                Bv: function() {
                    return eb
                },
                Au: function() {
                    return S
                },
                jd: function() {
                    return O
                },
                gu: function() {
                    return y
                },
                D: function() {
                    return W
                },
                Z7: function() {
                    return eR
                },
                cO: function() {
                    return ec
                },
                _H: function() {
                    return eu
                },
                fc: function() {
                    return eT
                },
                D6: function() {
                    return eM
                },
                Hh: function() {
                    return el
                },
                Ym: function() {
                    return C
                },
                rj: function() {
                    return x
                },
                jU: function() {
                    return V
                },
                gp: function() {
                    return eN
                },
                rF: function() {
                    return e7
                },
                Bw: function() {
                    return es
                },
                UG: function() {
                    return K
                },
                Gg: function() {
                    return tr
                },
                xW: function() {
                    return eV
                },
                b$: function() {
                    return z
                },
                Ih: function() {
                    return e$
                },
                h1: function() {
                    return eG
                },
                Q8: function() {
                    return R
                },
                o8: function() {
                    return ej
                },
                qt: function() {
                    return eL
                },
                Dd: function() {
                    return eW
                },
                $t: function() {
                    return e2
                },
                nf: function() {
                    return e5
                },
                Q0: function() {
                    return e0
                },
                in: function() {
                    return eY
                },
                p8: function() {
                    return e6
                },
                sI: function() {
                    return e9
                },
                al: function() {
                    return e8
                },
                L5: function() {
                    return eU
                },
                EJ: function() {
                    return e1
                },
                Z2: function() {
                    return eZ
                },
                PM: function() {
                    return eX
                },
                hH: function() {
                    return e3
                },
                ON: function() {
                    return tt
                },
                n: function() {
                    return eQ
                },
                JT: function() {
                    return e4
                },
                M_: function() {
                    return eF
                },
                jv: function() {
                    return ez
                },
                KC: function() {
                    return Q
                },
                eG: function() {
                    return ea
                },
                fK: function() {
                    return eB
                },
                IP: function() {
                    return Y
                },
                DQ: function() {
                    return m
                },
                iP: function() {
                    return en
                },
                M: function() {
                    return e_
                },
                he: function() {
                    return ey
                },
                uw: function() {
                    return ti
                },
                Ll: function() {
                    return D
                },
                EN: function() {
                    return I
                }
            });
            var n = r(50061),
                i = r(85722),
                s = r(18608),
                o = r(75801),
                a = r(64851),
                l = r(82484),
                u = r(48520),
                c = r(94240),
                d = r(29184),
                h = r(63960),
                f = r(33551);
            r(21150);
            let p = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe"
                }
            };
            var g = r(20982);

            function m(e) {
                let [t, r] = e.split(":");
                return {
                    namespace: t,
                    reference: r
                }
            }

            function y(e, t = []) {
                let r = [];
                return Object.keys(e).forEach(n => {
                    if (t.length && !t.includes(n)) return;
                    let i = e[n];
                    r.push(...i.accounts)
                }), r
            }

            function b(e, t) {
                return e.includes(":") ? [e] : t.chains || []
            }
            let w = "base10",
                A = "base16",
                v = "base64pad",
                E = "utf8",
                P = 1;

            function S() {
                let e = a.Au();
                return {
                    privateKey: (0, l.BB)(e.secretKey, A),
                    publicKey: (0, l.BB)(e.publicKey, A)
                }
            }

            function O() {
                let e = (0, s.randomBytes)(32);
                return (0, l.BB)(e, A)
            }

            function k(e, t) {
                let r = a.gi((0, l.mL)(e, A), (0, l.mL)(t, A), !0),
                    n = new i.t(o.mE, r).expand(32);
                return (0, l.BB)(n, A)
            }

            function C(e) {
                let t = (0, o.vp)((0, l.mL)(e, A));
                return (0, l.BB)(t, A)
            }

            function x(e) {
                let t = (0, o.vp)((0, l.mL)(e, E));
                return (0, l.BB)(t, A)
            }

            function T(e) {
                return Number((0, l.BB)(e, w))
            }

            function N(e) {
                var t;
                let r = (t = "u" > typeof e.type ? e.type : 0, (0, l.mL)(`${t}`, w));
                if (T(r) === P && typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                let i = "u" > typeof e.senderPublicKey ? (0, l.mL)(e.senderPublicKey, A) : void 0,
                    o = "u" > typeof e.iv ? (0, l.mL)(e.iv, A) : (0, s.randomBytes)(12),
                    a = new n.OK((0, l.mL)(e.symKey, A)).seal(o, (0, l.mL)(e.message, E));
                return function(e) {
                    if (T(e.type) === P) {
                        if (typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                        return (0, l.BB)((0, l.zo)([e.type, e.senderPublicKey, e.iv, e.sealed]), v)
                    }
                    return (0, l.BB)((0, l.zo)([e.type, e.iv, e.sealed]), v)
                }({
                    type: r,
                    sealed: a,
                    iv: o,
                    senderPublicKey: i
                })
            }

            function _(e) {
                let t = new n.OK((0, l.mL)(e.symKey, A)),
                    {
                        sealed: r,
                        iv: i
                    } = B(e.encoded),
                    s = t.open(i, r);
                if (null === s) throw Error("Failed to decrypt");
                return (0, l.BB)(s, E)
            }

            function B(e) {
                let t = (0, l.mL)(e, v),
                    r = t.slice(0, 1);
                if (T(r) === P) {
                    let e = t.slice(1, 33),
                        n = t.slice(33, 45),
                        i = t.slice(45);
                    return {
                        type: r,
                        sealed: i,
                        iv: n,
                        senderPublicKey: e
                    }
                }
                let n = t.slice(1, 13),
                    i = t.slice(13);
                return {
                    type: r,
                    sealed: i,
                    iv: n
                }
            }

            function D(e, t) {
                let r = B(e);
                return I({
                    type: T(r.type),
                    senderPublicKey: "u" > typeof r.senderPublicKey ? (0, l.BB)(r.senderPublicKey, A) : void 0,
                    receiverPublicKey: t ? .receiverPublicKey
                })
            }

            function I(e) {
                let t = e ? .type || 0;
                if (t === P) {
                    if (typeof e ? .senderPublicKey > "u") throw Error("missing sender public key");
                    if (typeof e ? .receiverPublicKey > "u") throw Error("missing receiver public key")
                }
                return {
                    type: t,
                    senderPublicKey: e ? .senderPublicKey,
                    receiverPublicKey: e ? .receiverPublicKey
                }
            }

            function R(e) {
                return e.type === P && "string" == typeof e.senderPublicKey && "string" == typeof e.receiverPublicKey
            }
            var M = Object.defineProperty,
                L = Object.getOwnPropertySymbols,
                U = Object.prototype.hasOwnProperty,
                j = Object.prototype.propertyIsEnumerable,
                F = (e, t, r) => t in e ? M(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                H = (e, t) => {
                    for (var r in t || (t = {})) U.call(t, r) && F(e, r, t[r]);
                    if (L)
                        for (var r of L(t)) j.call(t, r) && F(e, r, t[r]);
                    return e
                };
            let $ = {
                reactNative: "react-native",
                node: "node",
                browser: "browser",
                unknown: "unknown"
            };

            function K() {
                return "u" > typeof g && "u" > typeof g.versions && "u" > typeof g.versions.node
            }

            function z() {
                return !(0, d.getDocument)() && !!(0, d.getNavigator)() && "ReactNative" === navigator.product
            }

            function V() {
                return !K() && !!(0, d.getNavigator)()
            }

            function G() {
                return z() ? $.reactNative : K() ? $.node : V() ? $.browser : $.unknown
            }

            function W() {
                return (0, h.D)() || {
                    name: "",
                    description: "",
                    url: "",
                    icons: [""]
                }
            }

            function J({
                protocol: e,
                version: t,
                relayUrl: n,
                sdkVersion: i,
                auth: s,
                projectId: o,
                useOnCloseEvent: a
            }) {
                var l;
                let c;
                let h = n.split("?"),
                    p = function(e, t, n) {
                        let i = function() {
                                if (G() === $.reactNative && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Platform)) {
                                    let {
                                        OS: e,
                                        Version: t
                                    } = r.g.Platform;
                                    return [e, t].join("-")
                                }
                                let e = (0, u.qY)();
                                if (null === e) return "unknown";
                                let t = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
                                return "browser" === e.type ? [t, e.name, e.version].join("-") : [t, e.version].join("-")
                            }(),
                            s = function() {
                                var e;
                                let t = G();
                                return t === $.browser ? [t, (null == (e = (0, d.getLocation)()) ? void 0 : e.host) || "unknown"].join(":") : t
                            }();
                        return [
                            [e, t].join("-"), ["js", n].join("-"), i, s
                        ].join("/")
                    }(e, t, i),
                    g = (l = h[1] || "", c = H(H({}, c = f.parse(l)), {
                        auth: s,
                        ua: p,
                        projectId: o,
                        useOnCloseEvent: a || void 0
                    }), l = f.stringify(c));
                return h[0] + "?" + g
            }

            function q(e, t) {
                return e.filter(e => t.includes(e)).length === e.length
            }

            function Q(e) {
                return Object.fromEntries(e.entries())
            }

            function Y(e) {
                return new Map(Object.entries(e))
            }

            function Z(e = c.FIVE_MINUTES, t) {
                let r, n, i;
                let s = (0, c.toMiliseconds)(e || c.FIVE_MINUTES);
                return {
                    resolve: e => {
                        i && r && (clearTimeout(i), r(e))
                    },
                    reject: e => {
                        i && n && (clearTimeout(i), n(e))
                    },
                    done: () => new Promise((e, o) => {
                        i = setTimeout(() => {
                            o(Error(t))
                        }, s), r = e, n = o
                    })
                }
            }

            function X(e, t, r) {
                return new Promise(async (n, i) => {
                    let s = setTimeout(() => i(Error(r)), t);
                    try {
                        let t = await e;
                        n(t)
                    } catch (e) {
                        i(e)
                    }
                    clearTimeout(s)
                })
            }

            function ee(e, t) {
                if ("string" == typeof t && t.startsWith(`${e}:`)) return t;
                if ("topic" === e.toLowerCase()) {
                    if ("string" != typeof t) throw Error('Value must be "string" for expirer target type: topic');
                    return `topic:${t}`
                }
                if ("id" === e.toLowerCase()) {
                    if ("number" != typeof t) throw Error('Value must be "number" for expirer target type: id');
                    return `id:${t}`
                }
                throw Error(`Unknown expirer target type: ${e}`)
            }

            function et(e) {
                return ee("topic", e)
            }

            function er(e) {
                return ee("id", e)
            }

            function en(e) {
                let [t, r] = e.split(":"), n = {
                    id: void 0,
                    topic: void 0
                };
                if ("topic" === t && "string" == typeof r) n.topic = r;
                else if ("id" === t && Number.isInteger(Number(r))) n.id = Number(r);
                else throw Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);
                return n
            }

            function ei(e, t) {
                return (0, c.fromMiliseconds)((t || Date.now()) + (0, c.toMiliseconds)(e))
            }

            function es(e) {
                return Date.now() >= (0, c.toMiliseconds)(e)
            }

            function eo(e, t) {
                return `${e}${t?`:${t}`:""}`
            }

            function ea(e = [], t = []) {
                return [...new Set([...e, ...t])]
            }
            async function el({
                id: e,
                topic: t,
                wcDeepLink: n
            }) {
                try {
                    if (!n) return;
                    let i = "string" == typeof n ? JSON.parse(n) : n,
                        s = i ? .href;
                    if ("string" != typeof s) return;
                    s.endsWith("/") && (s = s.slice(0, -1));
                    let o = `${s}/wc?requestId=${e}&sessionTopic=${t}`,
                        a = G();
                    a === $.browser ? o.startsWith("https://") ? window.open(o, "_blank", "noreferrer noopener") : window.open(o, "_self", "noreferrer noopener") : a === $.reactNative && "u" > typeof(null == r.g ? void 0 : r.g.Linking) && await r.g.Linking.openURL(o)
                } catch (e) {
                    console.error(e)
                }
            }

            function eu(e) {
                return e ? .relay || {
                    protocol: "irn"
                }
            }

            function ec(e) {
                let t = p[e];
                if (typeof t > "u") throw Error(`Relay Protocol not supported: ${e}`);
                return t
            }
            var ed = Object.defineProperty,
                eh = Object.getOwnPropertySymbols,
                ef = Object.prototype.hasOwnProperty,
                ep = Object.prototype.propertyIsEnumerable,
                eg = (e, t, r) => t in e ? ed(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                em = (e, t) => {
                    for (var r in t || (t = {})) ef.call(t, r) && eg(e, r, t[r]);
                    if (eh)
                        for (var r of eh(t)) ep.call(t, r) && eg(e, r, t[r]);
                    return e
                };

            function ey(e) {
                var t;
                let r = e.indexOf(":"),
                    n = -1 !== e.indexOf("?") ? e.indexOf("?") : void 0,
                    i = e.substring(0, r),
                    s = e.substring(r + 1, n).split("@"),
                    o = "u" > typeof n ? e.substring(n) : "",
                    a = f.parse(o);
                return {
                    protocol: i,
                    topic: (t = s[0]).startsWith("//") ? t.substring(2) : t,
                    version: parseInt(s[1], 10),
                    symKey: a.symKey,
                    relay: function(e, t = "-") {
                        let r = {},
                            n = "relay" + t;
                        return Object.keys(e).forEach(t => {
                            if (t.startsWith(n)) {
                                let i = t.replace(n, ""),
                                    s = e[t];
                                r[i] = s
                            }
                        }), r
                    }(a)
                }
            }

            function eb(e) {
                return `${e.protocol}:${e.topic}@${e.version}?` + f.stringify(em({
                    symKey: e.symKey
                }, function(e, t = "-") {
                    let r = {};
                    return Object.keys(e).forEach(n => {
                        e[n] && (r["relay" + t + n] = e[n])
                    }), r
                }(e.relay)))
            }
            var ew = Object.defineProperty,
                eA = Object.defineProperties,
                ev = Object.getOwnPropertyDescriptors,
                eE = Object.getOwnPropertySymbols,
                eP = Object.prototype.hasOwnProperty,
                eS = Object.prototype.propertyIsEnumerable,
                eO = (e, t, r) => t in e ? ew(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                ek = (e, t) => {
                    for (var r in t || (t = {})) eP.call(t, r) && eO(e, r, t[r]);
                    if (eE)
                        for (var r of eE(t)) eS.call(t, r) && eO(e, r, t[r]);
                    return e
                },
                eC = (e, t) => eA(e, ev(t));

            function ex(e) {
                let t = [];
                return e.forEach(e => {
                    let [r, n] = e.split(":");
                    t.push(`${r}:${n}`)
                }), t
            }

            function eT(e, t) {
                let r = eY(e, t);
                if (r) throw Error(r.message);
                let n = {};
                for (let [t, r] of Object.entries(e)) n[t] = {
                    methods: r.methods,
                    events: r.events,
                    chains: r.accounts.map(e => `${e.split(":")[0]}:${e.split(":")[1]}`)
                };
                return n
            }

            function eN(e) {
                return e.includes(":")
            }

            function e_(e) {
                return eN(e) ? e.split(":")[0] : e
            }

            function eB(e) {
                var t, r, n;
                let i = {};
                if (!eU(e)) return i;
                for (let [s, o] of Object.entries(e)) {
                    let e = eN(s) ? [s] : o.chains,
                        a = o.methods || [],
                        l = o.events || [],
                        u = e_(s);
                    i[u] = eC(ek({}, i[u]), {
                        chains: ea(e, null == (t = i[u]) ? void 0 : t.chains),
                        methods: ea(a, null == (r = i[u]) ? void 0 : r.methods),
                        events: ea(l, null == (n = i[u]) ? void 0 : n.events)
                    })
                }
                return i
            }
            let eD = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                },
                eI = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };

            function eR(e, t) {
                let {
                    message: r,
                    code: n
                } = eI[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function eM(e, t) {
                let {
                    message: r,
                    code: n
                } = eD[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function eL(e, t) {
                return !!Array.isArray(e) && (!("u" > typeof t) || !e.length || e.every(t))
            }

            function eU(e) {
                return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length
            }

            function ej(e) {
                return typeof e > "u"
            }

            function eF(e, t) {
                return !!(t && ej(e)) || "string" == typeof e && !!e.trim().length
            }

            function eH(e, t) {
                return !!(t && ej(e)) || "number" == typeof e && !isNaN(e)
            }

            function e$(e, t) {
                let {
                    requiredNamespaces: r
                } = t, n = Object.keys(e.namespaces), i = Object.keys(r), s = !0;
                return !!q(i, n) && (n.forEach(t => {
                    let {
                        accounts: n,
                        methods: i,
                        events: o
                    } = e.namespaces[t], a = ex(n), l = r[t];
                    q(b(t, l), a) && q(l.methods, i) && q(l.events, o) || (s = !1)
                }), s)
            }

            function eK(e) {
                return !!(eF(e, !1) && e.includes(":")) && 2 === e.split(":").length
            }

            function ez(e) {
                if (eF(e, !1)) try {
                    return "u" > typeof new URL(e)
                } catch {}
                return !1
            }

            function eV(e) {
                var t;
                return null == (t = e ? .proposer) ? void 0 : t.publicKey
            }

            function eG(e) {
                return e ? .topic
            }

            function eW(e, t) {
                let r = null;
                return eF(e ? .publicKey, !1) || (r = eR("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r
            }

            function eJ(e) {
                let t = !0;
                return eL(e) ? e.length && (t = e.every(e => eF(e, !1))) : t = !1, t
            }

            function eq(e, t) {
                let r = null;
                return Object.values(e).forEach(e => {
                    var n;
                    let i;
                    if (r) return;
                    let s = (n = `${t}, namespace`, i = null, eJ(e ? .methods) ? eJ(e ? .events) || (i = eM("UNSUPPORTED_EVENTS", `${n}, events should be an array of strings or empty array for no events`)) : i = eM("UNSUPPORTED_METHODS", `${n}, methods should be an array of strings or empty array for no methods`), i);
                    s && (r = s)
                }), r
            }

            function eQ(e, t, r) {
                let n = null;
                if (e && eU(e)) {
                    let i;
                    let s = eq(e, t);
                    s && (n = s);
                    let o = (i = null, Object.entries(e).forEach(([e, n]) => {
                        var s, o;
                        let a;
                        if (i) return;
                        let l = (s = b(e, n), o = `${t} ${r}`, a = null, eL(s) && s.length ? s.forEach(e => {
                            a || eK(e) || (a = eM("UNSUPPORTED_CHAINS", `${o}, chain ${e} should be a string and conform to "namespace:chainId" format`))
                        }) : eK(e) || (a = eM("UNSUPPORTED_CHAINS", `${o}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), a);
                        l && (i = l)
                    }), i);
                    o && (n = o)
                } else n = eR("MISSING_OR_INVALID", `${t}, ${r} should be an object with data`);
                return n
            }

            function eY(e, t) {
                let r = null;
                if (e && eU(e)) {
                    let n;
                    let i = eq(e, t);
                    i && (r = i);
                    let s = (n = null, Object.values(e).forEach(e => {
                        var r, i;
                        let s;
                        if (n) return;
                        let o = (r = e ? .accounts, i = `${t} namespace`, s = null, eL(r) ? r.forEach(e => {
                            s || function(e) {
                                if (eF(e, !1) && e.includes(":")) {
                                    let t = e.split(":");
                                    if (3 === t.length) {
                                        let e = t[0] + ":" + t[1];
                                        return !!t[2] && eK(e)
                                    }
                                }
                                return !1
                            }(e) || (s = eM("UNSUPPORTED_ACCOUNTS", `${i}, account ${e} should be a string and conform to "namespace:chainId:address" format`))
                        }) : s = eM("UNSUPPORTED_ACCOUNTS", `${i}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), s);
                        o && (n = o)
                    }), n);
                    s && (r = s)
                } else r = eR("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
                return r
            }

            function eZ(e) {
                return eF(e.protocol, !0)
            }

            function eX(e, t) {
                let r = !1;
                return t && !e ? r = !0 : e && eL(e) && e.length && e.forEach(e => {
                    r = eZ(e)
                }), r
            }

            function e0(e) {
                return "number" == typeof e
            }

            function e1(e) {
                return "u" > typeof e
            }

            function e2(e) {
                return !(!e || "object" != typeof e || !e.code || !eH(e.code, !1) || !e.message || !eF(e.message, !1))
            }

            function e3(e) {
                return !(ej(e) || !eF(e.method, !1))
            }

            function e4(e) {
                return !(ej(e) || ej(e.result) && ej(e.error) || !eH(e.id, !1) || !eF(e.jsonrpc, !1))
            }

            function e5(e) {
                return !(ej(e) || !eF(e.name, !1))
            }

            function e6(e, t) {
                return !(!eK(t) || !(function(e) {
                    let t = [];
                    return Object.values(e).forEach(e => {
                        t.push(...ex(e.accounts))
                    }), t
                })(e).includes(t))
            }

            function e8(e, t, r) {
                return !!eF(r, !1) && (function(e, t) {
                    let r = [];
                    return Object.values(e).forEach(e => {
                        ex(e.accounts).includes(t) && r.push(...e.methods)
                    }), r
                })(e, t).includes(r)
            }

            function e9(e, t, r) {
                return !!eF(r, !1) && (function(e, t) {
                    let r = [];
                    return Object.values(e).forEach(e => {
                        ex(e.accounts).includes(t) && r.push(...e.events)
                    }), r
                })(e, t).includes(r)
            }

            function e7(e, t, r) {
                let n = null,
                    i = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            var n;
                            r.includes(":") ? t[r] = e[r] : null == (n = e[r].chains) || n.forEach(n => {
                                t[n] = {
                                    methods: e[r].methods,
                                    events: e[r].events
                                }
                            })
                        }), t
                    }(e),
                    s = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            if (r.includes(":")) t[r] = e[r];
                            else {
                                let n = ex(e[r].accounts);
                                n ? .forEach(n => {
                                    t[n] = {
                                        accounts: e[r].accounts.filter(e => e.includes(`${n}:`)),
                                        methods: e[r].methods,
                                        events: e[r].events
                                    }
                                })
                            }
                        }), t
                    }(t),
                    o = Object.keys(i),
                    a = Object.keys(s),
                    l = te(Object.keys(e)),
                    u = te(Object.keys(t)),
                    c = l.filter(e => !u.includes(e));
                return c.length && (n = eR("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.
      Required: ${c.toString()}
      Received: ${Object.keys(t).toString()}`)), q(o, a) || (n = eR("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.
      Required: ${o.toString()}
      Approved: ${a.toString()}`)), Object.keys(t).forEach(e => {
                    if (!e.includes(":") || n) return;
                    let i = ex(t[e].accounts);
                    i.includes(e) || (n = eR("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${e}
        Required: ${e}
        Approved: ${i.toString()}`))
                }), o.forEach(e => {
                    n || (q(i[e].methods, s[e].methods) ? q(i[e].events, s[e].events) || (n = eR("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${e}`)) : n = eR("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${e}`))
                }), n
            }

            function te(e) {
                return [...new Set(e.map(e => e.includes(":") ? e.split(":")[0] : e))]
            }

            function tt(e, t) {
                return eH(e, !1) && e <= t.max && e >= t.min
            }

            function tr() {
                let e = G();
                return new Promise(t => {
                    switch (e) {
                        case $.browser:
                            t(V() && navigator ? .onLine);
                            break;
                        case $.reactNative:
                            t(tn());
                            break;
                        case $.node:
                        default:
                            t(!0)
                    }
                })
            }
            async function tn() {
                if (z() && "u" > typeof r.g && null != r.g && r.g.NetInfo) {
                    let e = await (null == r.g ? void 0 : r.g.NetInfo.fetch());
                    return e ? .isConnected
                }
                return !0
            }

            function ti(e) {
                switch (G()) {
                    case $.browser:
                        !z() && V() && (window.addEventListener("online", () => e(!0)), window.addEventListener("offline", () => e(!1)));
                        break;
                    case $.reactNative:
                        z() && "u" > typeof r.g && null != r.g && r.g.NetInfo && r.g ? .NetInfo.addEventListener(t => e(t ? .isConnected));
                    case $.node:
                }
            }
            let ts = {};
            class to {
                static get(e) {
                    return ts[e]
                }
                static set(e, t) {
                    ts[e] = t
                }
                static delete(e) {
                    delete ts[e]
                }
            }
        },
        33551: function(e, t, r) {
            "use strict";
            let n = r(35270),
                i = r(97653),
                s = r(14642),
                o = r(882),
                a = e => null == e,
                l = Symbol("encodeFragmentIdentifier");

            function u(e) {
                if ("string" != typeof e || 1 !== e.length) throw TypeError("arrayFormatSeparator must be single character string")
            }

            function c(e, t) {
                return t.encode ? t.strict ? n(e) : encodeURIComponent(e) : e
            }

            function d(e, t) {
                return t.decode ? i(e) : e
            }

            function h(e) {
                let t = e.indexOf("#");
                return -1 !== t && (e = e.slice(0, t)), e
            }

            function f(e) {
                e = h(e);
                let t = e.indexOf("?");
                return -1 === t ? "" : e.slice(t + 1)
            }

            function p(e, t) {
                return t.parseNumbers && !Number.isNaN(Number(e)) && "string" == typeof e && "" !== e.trim() ? e = Number(e) : t.parseBooleans && null !== e && ("true" === e.toLowerCase() || "false" === e.toLowerCase()) && (e = "true" === e.toLowerCase()), e
            }

            function g(e, t) {
                u((t = Object.assign({
                    decode: !0,
                    sort: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ",",
                    parseNumbers: !1,
                    parseBooleans: !1
                }, t)).arrayFormatSeparator);
                let r = function(e) {
                        let t;
                        switch (e.arrayFormat) {
                            case "index":
                                return (e, r, n) => {
                                    if (t = /\[(\d*)\]$/.exec(e), e = e.replace(/\[\d*\]$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    void 0 === n[e] && (n[e] = {}), n[e][t[1]] = r
                                };
                            case "bracket":
                                return (e, r, n) => {
                                    if (t = /(\[\])$/.exec(e), e = e.replace(/\[\]$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    if (void 0 === n[e]) {
                                        n[e] = [r];
                                        return
                                    }
                                    n[e] = [].concat(n[e], r)
                                };
                            case "colon-list-separator":
                                return (e, r, n) => {
                                    if (t = /(:list)$/.exec(e), e = e.replace(/:list$/, ""), !t) {
                                        n[e] = r;
                                        return
                                    }
                                    if (void 0 === n[e]) {
                                        n[e] = [r];
                                        return
                                    }
                                    n[e] = [].concat(n[e], r)
                                };
                            case "comma":
                            case "separator":
                                return (t, r, n) => {
                                    let i = "string" == typeof r && r.includes(e.arrayFormatSeparator),
                                        s = "string" == typeof r && !i && d(r, e).includes(e.arrayFormatSeparator);
                                    r = s ? d(r, e) : r;
                                    let o = i || s ? r.split(e.arrayFormatSeparator).map(t => d(t, e)) : null === r ? r : d(r, e);
                                    n[t] = o
                                };
                            case "bracket-separator":
                                return (t, r, n) => {
                                    let i = /(\[\])$/.test(t);
                                    if (t = t.replace(/\[\]$/, ""), !i) {
                                        n[t] = r ? d(r, e) : r;
                                        return
                                    }
                                    let s = null === r ? [] : r.split(e.arrayFormatSeparator).map(t => d(t, e));
                                    if (void 0 === n[t]) {
                                        n[t] = s;
                                        return
                                    }
                                    n[t] = [].concat(n[t], s)
                                };
                            default:
                                return (e, t, r) => {
                                    if (void 0 === r[e]) {
                                        r[e] = t;
                                        return
                                    }
                                    r[e] = [].concat(r[e], t)
                                }
                        }
                    }(t),
                    n = Object.create(null);
                if ("string" != typeof e || !(e = e.trim().replace(/^[?#&]/, ""))) return n;
                for (let i of e.split("&")) {
                    if ("" === i) continue;
                    let [e, o] = s(t.decode ? i.replace(/\+/g, " ") : i, "=");
                    o = void 0 === o ? null : ["comma", "separator", "bracket-separator"].includes(t.arrayFormat) ? o : d(o, t), r(d(e, t), o, n)
                }
                for (let e of Object.keys(n)) {
                    let r = n[e];
                    if ("object" == typeof r && null !== r)
                        for (let e of Object.keys(r)) r[e] = p(r[e], t);
                    else n[e] = p(r, t)
                }
                return !1 === t.sort ? n : (!0 === t.sort ? Object.keys(n).sort() : Object.keys(n).sort(t.sort)).reduce((e, t) => {
                    let r = n[t];
                    return r && "object" == typeof r && !Array.isArray(r) ? e[t] = function e(t) {
                        return Array.isArray(t) ? t.sort() : "object" == typeof t ? e(Object.keys(t)).sort((e, t) => Number(e) - Number(t)).map(e => t[e]) : t
                    }(r) : e[t] = r, e
                }, Object.create(null))
            }
            t.extract = f, t.parse = g, t.stringify = (e, t) => {
                if (!e) return "";
                u((t = Object.assign({
                    encode: !0,
                    strict: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ","
                }, t)).arrayFormatSeparator);
                let r = r => t.skipNull && a(e[r]) || t.skipEmptyString && "" === e[r],
                    n = function(e) {
                        switch (e.arrayFormat) {
                            case "index":
                                return t => (r, n) => {
                                    let i = r.length;
                                    return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [c(t, e), "[", i, "]"].join("")] : [...r, [c(t, e), "[", c(i, e), "]=", c(n, e)].join("")]
                                };
                            case "bracket":
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [c(t, e), "[]"].join("")] : [...r, [c(t, e), "[]=", c(n, e)].join("")];
                            case "colon-list-separator":
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, [c(t, e), ":list="].join("")] : [...r, [c(t, e), ":list=", c(n, e)].join("")];
                            case "comma":
                            case "separator":
                            case "bracket-separator":
                                {
                                    let t = "bracket-separator" === e.arrayFormat ? "[]=" : "=";
                                    return r => (n, i) => void 0 === i || e.skipNull && null === i || e.skipEmptyString && "" === i ? n : (i = null === i ? "" : i, 0 === n.length) ? [
                                        [c(r, e), t, c(i, e)].join("")
                                    ] : [
                                        [n, c(i, e)].join(e.arrayFormatSeparator)
                                    ]
                                }
                            default:
                                return t => (r, n) => void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [...r, c(t, e)] : [...r, [c(t, e), "=", c(n, e)].join("")]
                        }
                    }(t),
                    i = {};
                for (let t of Object.keys(e)) r(t) || (i[t] = e[t]);
                let s = Object.keys(i);
                return !1 !== t.sort && s.sort(t.sort), s.map(r => {
                    let i = e[r];
                    return void 0 === i ? "" : null === i ? c(r, t) : Array.isArray(i) ? 0 === i.length && "bracket-separator" === t.arrayFormat ? c(r, t) + "[]" : i.reduce(n(r), []).join("&") : c(r, t) + "=" + c(i, t)
                }).filter(e => e.length > 0).join("&")
            }, t.parseUrl = (e, t) => {
                t = Object.assign({
                    decode: !0
                }, t);
                let [r, n] = s(e, "#");
                return Object.assign({
                    url: r.split("?")[0] || "",
                    query: g(f(e), t)
                }, t && t.parseFragmentIdentifier && n ? {
                    fragmentIdentifier: d(n, t)
                } : {})
            }, t.stringifyUrl = (e, r) => {
                r = Object.assign({
                    encode: !0,
                    strict: !0,
                    [l]: !0
                }, r);
                let n = h(e.url).split("?")[0] || "",
                    i = t.extract(e.url),
                    s = t.parse(i, {
                        sort: !1
                    }),
                    o = Object.assign(s, e.query),
                    a = t.stringify(o, r);
                a && (a = `?${a}`);
                let u = function(e) {
                    let t = "",
                        r = e.indexOf("#");
                    return -1 !== r && (t = e.slice(r)), t
                }(e.url);
                return e.fragmentIdentifier && (u = `#${r[l]?c(e.fragmentIdentifier,r):e.fragmentIdentifier}`), `${n}${a}${u}`
            }, t.pick = (e, r, n) => {
                n = Object.assign({
                    parseFragmentIdentifier: !0,
                    [l]: !1
                }, n);
                let {
                    url: i,
                    query: s,
                    fragmentIdentifier: a
                } = t.parseUrl(e, n);
                return t.stringifyUrl({
                    url: i,
                    query: o(s, r),
                    fragmentIdentifier: a
                }, n)
            }, t.exclude = (e, r, n) => {
                let i = Array.isArray(r) ? e => !r.includes(e) : (e, t) => !r(e, t);
                return t.pick(e, i, n)
            }
        },
        29184: function(e, t) {
            "use strict";

            function r(e) {
                let t;
                return "undefined" != typeof window && void 0 !== window[e] && (t = window[e]), t
            }

            function n(e) {
                let t = r(e);
                if (!t) throw Error(`${e} is not defined in Window`);
                return t
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLocalStorage = t.getLocalStorageOrThrow = t.getCrypto = t.getCryptoOrThrow = t.getLocation = t.getLocationOrThrow = t.getNavigator = t.getNavigatorOrThrow = t.getDocument = t.getDocumentOrThrow = t.getFromWindowOrThrow = t.getFromWindow = void 0, t.getFromWindow = r, t.getFromWindowOrThrow = n, t.getDocumentOrThrow = function() {
                return n("document")
            }, t.getDocument = function() {
                return r("document")
            }, t.getNavigatorOrThrow = function() {
                return n("navigator")
            }, t.getNavigator = function() {
                return r("navigator")
            }, t.getLocationOrThrow = function() {
                return n("location")
            }, t.getLocation = function() {
                return r("location")
            }, t.getCryptoOrThrow = function() {
                return n("crypto")
            }, t.getCrypto = function() {
                return r("crypto")
            }, t.getLocalStorageOrThrow = function() {
                return n("localStorage")
            }, t.getLocalStorage = function() {
                return r("localStorage")
            }
        },
        63960: function(e, t, r) {
            "use strict";
            t.D = void 0;
            let n = r(29184);
            t.D = function() {
                let e, t, r;
                try {
                    e = n.getDocumentOrThrow(), t = n.getLocationOrThrow()
                } catch (e) {
                    return null
                }

                function i(...t) {
                    let r = e.getElementsByTagName("meta");
                    for (let e = 0; e < r.length; e++) {
                        let n = r[e],
                            i = ["itemprop", "property", "name"].map(e => n.getAttribute(e)).filter(e => !!e && t.includes(e));
                        if (i.length && i) {
                            let e = n.getAttribute("content");
                            if (e) return e
                        }
                    }
                    return ""
                }
                let s = ((r = i("name", "og:site_name", "og:title", "twitter:title")) || (r = e.title), r),
                    o = function() {
                        let e = i("description", "og:description", "twitter:description", "keywords");
                        return e
                    }(),
                    a = t.origin,
                    l = function() {
                        let r = e.getElementsByTagName("link"),
                            n = [];
                        for (let e = 0; e < r.length; e++) {
                            let i = r[e],
                                s = i.getAttribute("rel");
                            if (s && s.toLowerCase().indexOf("icon") > -1) {
                                let e = i.getAttribute("href");
                                if (e) {
                                    if (-1 === e.toLowerCase().indexOf("https:") && -1 === e.toLowerCase().indexOf("http:") && 0 !== e.indexOf("//")) {
                                        let r = t.protocol + "//" + t.host;
                                        if (0 === e.indexOf("/")) r += e;
                                        else {
                                            let n = t.pathname.split("/");
                                            n.pop();
                                            let i = n.join("/");
                                            r += i + "/" + e
                                        }
                                        n.push(r)
                                    } else if (0 === e.indexOf("//")) {
                                        let r = t.protocol + e;
                                        n.push(r)
                                    } else n.push(e)
                                }
                            }
                        }
                        return n
                    }();
                return {
                    description: o,
                    url: a,
                    icons: l,
                    name: s
                }
            }
        },
        12860: function(e, t, r) {
            e.exports = function(e) {
                let t;
                let {
                    Buffer: n
                } = r(59304), i = "api.js: ", s = this, o = r(24153), a = r(37033), l = r(61537), u = new(r(86091)), {
                    attributes: c,
                    showAttributes: d,
                    showAttributeErrors: h,
                    showRuleDependencies: f
                } = r(82630), p = r(69375), g = function(e, t, r) {
                    let n;
                    let i = `<span class="${o.style.CLASS_CTRLCHAR}">`,
                        s = "</span>",
                        a = `<span class="${o.style.CLASS_NOMATCH}">`,
                        l = "</span>",
                        u = "";
                    for (; Array.isArray(e) && 0 !== e.length;) {
                        if ("number" != typeof t) throw Error("abnfToHtml: beg must be type number");
                        if (t >= e.length) break;
                        n = "number" != typeof r || t + r >= e.length ? e.length : t + r;
                        let c = 0;
                        for (let r = t; r < n; r += 1) {
                            let t = e[r];
                            if (t >= 32 && t <= 126) switch (1 === c ? (u += s, c = 0) : 2 === c && (u += l, c = 0), t) {
                                case 32:
                                    u += "&nbsp;";
                                    break;
                                case 60:
                                    u += "&lt;";
                                    break;
                                case 62:
                                    u += "&gt;";
                                    break;
                                case 38:
                                    u += "&amp;";
                                    break;
                                case 34:
                                    u += "&quot;";
                                    break;
                                case 39:
                                    u += "&#039;";
                                    break;
                                case 92:
                                    u += "&#092;";
                                    break;
                                default:
                                    u += String.fromCharCode(t)
                            } else 9 === t || 10 === t || 13 === t ? (0 === c ? (u += i, c = 1) : 2 === c && (u += l + i, c = 1), 9 === t && (u += "TAB"), 10 === t && (u += "LF"), 13 === t && (u += "CR")) : (0 === c ? (u += a, c = 2) : 1 === c && (u += s + a, c = 2), u += `\\x${o.utils.charToHex(t)}`)
                        }
                        2 === c && (u += l), 1 === c && (u += s);
                        break
                    }
                    return u
                }, m = function(e, t, r) {
                    let n = "";
                    for (let i = t; i < t + r; i += 1) {
                        let t = e[i];
                        if (t >= 32 && t <= 126) n += String.fromCharCode(t);
                        else switch (t) {
                            case 9:
                                n += "\\t";
                                break;
                            case 10:
                                n += "\\n";
                                break;
                            case 13:
                                n += "\\r";
                                break;
                            default:
                                n += "\\unknown"
                        }
                    }
                    return n
                }, y = function(e) {
                    let t = "Annotated Input Grammar";
                    return e.forEach(e => {
                        t += `
line no: ${e.lineNo} : char index: ${e.beginChar} : length: ${e.length} : abnf: ${m(s.chars,e.beginChar,e.length)}`
                    }), t += "\n"
                }, b = function(e) {
                    let t = "";
                    return t += `<table class="${o.style.CLASS_GRAMMAR}">
<caption>Annotated Input Grammar</caption>
<tr><th>line<br>no.</th><th>first<br>char</th><th><br>length</th><th><br>text</th></tr>
`, e.forEach(e => {
                        t += `<tr><td>${e.lineNo}</td><td>${e.beginChar}</td><td>${e.length}</td><td>${g(s.chars,e.beginChar,e.length)}</td></tr>
`
                    }), t += "</table>\n"
                }, w = function(e, t, r, n) {
                    let [i] = o, s = "", a = `<span class="${i.CLASS_NOMATCH}">&raquo;</span>`;
                    return s += `<p><table class="${i.CLASS_GRAMMAR}">
`, n && "string" == typeof n && (s += `<caption>${n}</caption>
`), s += "<tr><th>line<br>no.</th><th>line<br>offset</th><th>error<br>offset</th><th><br>text</th></tr>\n", e.forEach(e => {
                        let n, i, l, u, c;
                        let d = "",
                            h = "";
                        0 === t.length || (l = (n = t[e.line]).beginChar, e.char > l && (d = g(r, l, e.char - l)), (l = e.char) < (u = n.beginChar + n.length) && (h = g(r, l, u - l)), s += `<tr><td>${e.line}</td><td>${n.beginChar}</td><td>${e.char-n.beginChar}</td><td>${d+a+h}</td></tr>
<tr><td colspan="3"></td><td>&uarr;:&nbsp;${o.utils.stringToAsciiHtml(e.msg)}</td></tr>
`)
                    }), s += "</table></p>\n"
                }, A = function(e, t, r) {
                    let n, i, s;
                    return n = "", e.forEach(e => {
                        n += `${(i=t[e.line]).lineNo}: ${i.beginChar}: ${e.char-i.beginChar}: ` + (m(r, i.beginChar, e.char - i.beginChar) + " >> ") + (m(r, e.char, i.beginChar + i.length - e.char) + "\n" + `${i.lineNo}: ` + `${i.beginChar}: ` + `${e.char-i.beginChar}: ` + "error: " + e.msg + "\n")
                    }), n
                }, v = !1, E = !1, P = !1, S = !1, O = 0;
                if (this.errors = [], n.isBuffer(e)) this.chars = a.decode("BINARY", e);
                else if (Array.isArray(e)) this.chars = e.slice();
                else if ("string" == typeof e) this.chars = a.decode("STRING", e);
                else throw Error(`${i}input source is not a string, byte Buffer or character array`);
                this.sabnf = a.encode("STRING", this.chars), this.scan = function(e, t) {
                    this.lines = l(this.chars, this.errors, e, t), v = !0
                }, this.parse = function(e, t) {
                    if (!v) throw Error(`${i}grammar not scanned`);
                    u.syntax(this.chars, this.lines, this.errors, e, t), E = !0
                }, this.translate = function() {
                    if (!E) throw Error(`${i}grammar not scanned and parsed`);
                    let e = u.semantic(this.chars, this.lines, this.errors);
                    0 === this.errors.length && (this.rules = e.rules, this.udts = e.udts, t = e.lineMap, P = !0)
                }, this.attributes = function() {
                    if (!P) throw Error(`${i}grammar not scanned, parsed and translated`);
                    return O = c(this.rules, this.udts, t, this.errors), S = !0, O
                }, this.generate = function(e) {
                    if (this.lines = l(this.chars, this.errors, e), this.errors.length || (u.syntax(this.chars, this.lines, this.errors, e), this.errors.length)) return;
                    let r = u.semantic(this.chars, this.lines, this.errors);
                    this.errors.length || (this.rules = r.rules, this.udts = r.udts, t = r.lineMap, O = c(this.rules, this.udts, t, this.errors), S = !0)
                }, this.displayRules = function(e = "index") {
                    if (!P) throw Error(`${i}grammar not scanned, parsed and translated`);
                    return p(this.rules, this.udts, e)
                }, this.displayRuleDependencies = function(e = "index") {
                    if (!S) throw Error(`${i}no attributes - must be preceeded by call to attributes()`);
                    return f(e)
                }, this.displayAttributes = function(e = "index") {
                    if (!S) throw Error(`${i}no attributes - must be preceeded by call to attributes()`);
                    return O && h(e), d(e)
                }, this.displayAttributeErrors = function() {
                    if (!S) throw Error(`${i}no attributes - must be preceeded by call to attributes()`);
                    return h()
                }, this.toSource = function(e) {
                    if (!S) throw Error(`${i}can't generate parser source - must be preceeded by call to attributes()`);
                    if (O) throw Error(`${i}can't generate parser source - attributes have ${O} errors`);
                    return u.generateSource(this.chars, this.lines, this.rules, this.udts, e)
                }, this.toObject = function() {
                    if (!S) throw Error(`${i}can't generate parser source - must be preceeded by call to attributes()`);
                    if (O) throw Error(`${i}can't generate parser source - attributes have ${O} errors`);
                    return u.generateObject(this.sabnf, this.rules, this.udts)
                }, this.errorsToAscii = function() {
                    return A(this.errors, this.lines, this.chars)
                }, this.errorsToHtml = function(e) {
                    return w(this.errors, this.lines, this.chars, e)
                }, this.linesToAscii = function() {
                    return y(this.lines)
                }, this.linesToHtml = function() {
                    return b(this.lines)
                }
            }
        },
        82630: function(e, t, r) {
            e.exports = function() {
                let e = r(92242),
                    {
                        ruleAttributes: t,
                        showAttributes: n,
                        showAttributeErrors: i
                    } = r(79695),
                    {
                        ruleDependencies: s,
                        showRuleDependencies: o
                    } = r(44542);
                class a {
                    constructor(e, t) {
                        this.rules = e, this.udts = t, this.ruleCount = e.length, this.udtCount = t.length, this.startRule = 0, this.dependenciesComplete = !1, this.attributesComplete = !1, this.isMutuallyRecursive = !1, this.ruleIndexes = this.indexArray(this.ruleCount), this.ruleAlphaIndexes = this.indexArray(this.ruleCount), this.ruleTypeIndexes = this.indexArray(this.ruleCount), this.udtIndexes = this.indexArray(this.udtCount), this.udtAlphaIndexes = this.indexArray(this.udtCount), this.attrsErrorCount = 0, this.attrs = [], this.attrsErrors = [], this.attrsWorking = [], this.ruleDeps = [];
                        for (let t = 0; t < this.ruleCount; t += 1) this.attrs.push(this.attrGen(this.rules[t])), this.attrsWorking.push(this.attrGen(this.rules[t])), this.ruleDeps.push(this.rdGen(e[t], this.ruleCount, this.udtCount));
                        this.compRulesAlpha = this.compRulesAlpha.bind(this), this.compUdtsAlpha = this.compUdtsAlpha.bind(this), this.compRulesType = this.compRulesType.bind(this), this.compRulesGroup = this.compRulesGroup.bind(this)
                    }
                    attrGen(e) {
                        return {
                            left: !1,
                            nested: !1,
                            right: !1,
                            empty: !1,
                            finite: !1,
                            cyclic: !1,
                            leaf: !1,
                            isOpen: !1,
                            isComplete: !1,
                            rule: e
                        }
                    }
                    attrInit(e) {
                        e.left = !1, e.nested = !1, e.right = !1, e.empty = !1, e.finite = !1, e.cyclic = !1, e.leaf = !1, e.isOpen = !1, e.isComplete = !1
                    }
                    attrCopy(e, t) {
                        e.left = t.left, e.nested = t.nested, e.right = t.right, e.empty = t.empty, e.finite = t.finite, e.cyclic = t.cyclic, e.leaf = t.leaf, e.isOpen = t.isOpen, e.isComplete = t.isComplete, e.rule = t.rule
                    }
                    rdGen(t, r, n) {
                        let i = {
                            rule: t,
                            recursiveType: e.ATTR_N,
                            groupNumber: -1,
                            refersTo: this.falseArray(r),
                            refersToUdt: this.falseArray(n),
                            referencedBy: this.falseArray(r)
                        };
                        return i
                    }
                    typeToString(t) {
                        switch (t) {
                            case e.ATTR_N:
                                return " N";
                            case e.ATTR_R:
                                return " R";
                            case e.ATTR_MR:
                                return "MR";
                            default:
                                return "UNKNOWN"
                        }
                    }
                    falseArray(e) {
                        let t = [];
                        if (e > 0)
                            for (let r = 0; r < e; r += 1) t.push(!1);
                        return t
                    }
                    falsifyArray(e) {
                        for (let t = 0; t < e.length; t += 1) e[t] = !1
                    }
                    indexArray(e) {
                        let t = [];
                        if (e > 0)
                            for (let r = 0; r < e; r += 1) t.push(r);
                        return t
                    }
                    compRulesAlpha(e, t) {
                        return this.rules[e].lower < this.rules[t].lower ? -1 : this.rules[e].lower > this.rules[t].lower ? 1 : 0
                    }
                    compUdtsAlpha(e, t) {
                        return this.udts[e].lower < this.udts[t].lower ? -1 : this.udts[e].lower > this.udts[t].lower ? 1 : 0
                    }
                    compRulesType(e, t) {
                        return this.ruleDeps[e].recursiveType < this.ruleDeps[t].recursiveType ? -1 : this.ruleDeps[e].recursiveType > this.ruleDeps[t].recursiveType ? 1 : 0
                    }
                    compRulesGroup(t, r) {
                        if (this.ruleDeps[t].recursiveType === e.ATTR_MR && this.ruleDeps[r].recursiveType === e.ATTR_MR) {
                            if (this.ruleDeps[t].groupNumber < this.ruleDeps[r].groupNumber) return -1;
                            if (this.ruleDeps[t].groupNumber > this.ruleDeps[r].groupNumber) return 1
                        }
                        return 0
                    }
                }
                return {
                    attributes: function(e = [], r = [], n = [], i = []) {
                        let o = new a(e, r);
                        return s(o), t(o), o.attrsErrorCount && i.push({
                            line: 0,
                            char: 0,
                            msg: `${o.attrsErrorCount} attribute errors`
                        }), o.attrsErrorCount
                    },
                    showAttributes: n,
                    showAttributeErrors: i,
                    showRuleDependencies: o
                }
            }()
        },
        86091: function(e, t, r) {
            e.exports = function() {
                let e = r(24153),
                    t = e.ids,
                    n = new(r(65031)),
                    i = new(r(81089)),
                    s = new(r(18066)),
                    o = new e.parser;
                o.ast = new e.ast, o.callbacks = n.callbacks, o.ast.callbacks = i.callbacks;
                let a = function(e, t, r) {
                        if (t < 0 || t >= r) return -1;
                        for (let r = 0; r < e.length; r += 1)
                            if (t >= e[r].beginChar && t < e[r].beginChar + e[r].length) return r;
                        return -1
                    },
                    l = function(e, t) {
                        let r = -1;
                        if (t < e.length) {
                            for (let n = t; n < e.length; n += 1)
                                if (null !== e[n]) {
                                    r = e[n];
                                    break
                                }
                        }
                        return r
                    },
                    u = function(e) {
                        e.forEach(e => {
                            let r = [],
                                n = [],
                                i = 0;
                            e.opcodes.forEach(e => {
                                e.type === t.ALT && 1 === e.children.length ? n.push(null) : e.type === t.CAT && 1 === e.children.length ? n.push(null) : e.type === t.REP && 1 === e.min && 1 === e.max ? n.push(null) : (n.push(i), r.push(e), i += 1)
                            }), n.push(i), r.forEach(e => {
                                if (e.type === t.ALT || e.type === t.CAT)
                                    for (let t = 0; t < e.children.length; t += 1) e.children[t] = l(n, e.children[t])
                            }), e.opcodes = r
                        })
                    };
                this.syntax = function(e, t, r, n, i) {
                    if (i) {
                        if ("traceObject" !== i.traceObject) throw TypeError("parser: trace argument is not a trace object");
                        o.trace = i
                    }
                    let l = {};
                    l.errors = r, l.strict = !!n, l.lines = t, l.findLine = a, l.charsLength = e.length, l.ruleCount = 0;
                    let u = o.parse(s, "file", e, l);
                    u.success || r.push({
                        line: 0,
                        char: 0,
                        msg: "syntax analysis of input grammar failed"
                    })
                }, this.semantic = function(e, t, r) {
                    let n = {};
                    return (n.errors = r, n.lines = t, n.findLine = a, n.charsLength = e.length, o.ast.translate(n), r.length) ? null : (u(n.rules), {
                        rules: n.rules,
                        udts: n.udts,
                        lineMap: n.rulesLineMap
                    })
                }, this.generateSource = function(e, r, n, i, s) {
                    let o, a, l, u, c = "",
                        d = 0,
                        h = 1 / 0,
                        f = 0,
                        p = [],
                        g = [],
                        m = 0,
                        y = 0,
                        b = 0,
                        w = 0,
                        A = 0,
                        v = 0,
                        E = 0,
                        P = 0,
                        S = 0,
                        O = 0,
                        k = 0,
                        C = 0,
                        x = 0,
                        T = 0,
                        N = 0;
                    n.forEach(e => {
                        p.push(e.lower), d += e.opcodes.length, e.opcodes.forEach(e => {
                            switch (e.type) {
                                case t.ALT:
                                    m += 1;
                                    break;
                                case t.CAT:
                                    y += 1;
                                    break;
                                case t.RNM:
                                    b += 1;
                                    break;
                                case t.UDT:
                                    w += 1;
                                    break;
                                case t.REP:
                                    A += 1;
                                    break;
                                case t.AND:
                                    v += 1;
                                    break;
                                case t.NOT:
                                    E += 1;
                                    break;
                                case t.BKA:
                                    C += 1;
                                    break;
                                case t.BKN:
                                    x += 1;
                                    break;
                                case t.BKR:
                                    k += 1;
                                    break;
                                case t.ABG:
                                    T += 1;
                                    break;
                                case t.AEN:
                                    N += 1;
                                    break;
                                case t.TLS:
                                    for (P += 1, o = 0; o < e.string.length; o += 1) e.string[o] < h && (h = e.string[o]), e.string[o] > f && (f = e.string[o]);
                                    break;
                                case t.TBS:
                                    for (S += 1, o = 0; o < e.string.length; o += 1) e.string[o] < h && (h = e.string[o]), e.string[o] > f && (f = e.string[o]);
                                    break;
                                case t.TRG:
                                    O += 1, e.min < h && (h = e.min), e.max > f && (f = e.max);
                                    break;
                                default:
                                    throw Error("generateSource: unrecognized opcode")
                            }
                        })
                    }), p.sort(), i.length > 0 && (i.forEach(e => {
                        g.push(e.lower)
                    }), g.sort());
                    let _ = "module.exports";
                    return s && "string" == typeof s && (_ = `let ${s}`), c += `// copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved<br>
//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>
//
// Generated by apg-js, Version 4.0.0 [apg-js](https://github.com/ldthomas/apg-js)
${_} = function grammar(){
  // \`\`\`
  // SUMMARY
  //      rules = ${n.length}
  //       udts = ${i.length}
  //    opcodes = ${d}
  //        ---   ABNF original opcodes
  //        ALT = ${m}
  //        CAT = ${y}
  //        REP = ${A}
  //        RNM = ${b}
  //        TLS = ${P}
  //        TBS = ${S}
  //        TRG = ${O}
  //        ---   SABNF superset opcodes
  //        UDT = ${w}
  //        AND = ${v}
  //        NOT = ${E}
  //        BKA = ${C}
  //        BKN = ${x}
  //        BKR = ${k}
  //        ABG = ${T}
  //        AEN = ${N}
  // characters = [`, P + S + O === 0 ? c += " none defined ]" : c += `${h} - ${f}]`, w > 0 && (c += " + user defined"), c += "\n  // ```\n  /* OBJECT IDENTIFIER (for internal parser use) */\n  this.grammarObject = 'grammarObject';\n\n  /* RULES */\n  this.rules = [];\n", n.forEach((e, t) => {
                        let r = "  this.rules[";
                        r += t + "] = {name: '" + e.name + "', lower: '" + e.lower + "', index: " + e.index + ", isBkr: " + e.isBkr + "};\n", c += r
                    }), c += "\n  /* UDTS */\n  this.udts = [];\n", i.length > 0 && i.forEach((e, t) => {
                        let r = "  this.udts[";
                        r += t + "] = {name: '" + e.name + "', lower: '" + e.lower + "', index: " + e.index + ", empty: " + e.empty + ", isBkr: " + e.isBkr + "};\n", c += r
                    }), c += "\n  /* OPCODES */\n", n.forEach((e, r) => {
                        r > 0 && (c += "\n"), c += `  /* ${e.name} */
  this.rules[${r}].opcodes = [];
`, e.opcodes.forEach((e, s) => {
                            let o;
                            switch (e.type) {
                                case t.ALT:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, children: [${e.children.toString()}]};// ALT
`;
                                    break;
                                case t.CAT:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, children: [${e.children.toString()}]};// CAT
`;
                                    break;
                                case t.RNM:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, index: ${e.index}};// RNM(${n[e.index].name})
`;
                                    break;
                                case t.BKR:
                                    e.index >= n.length ? (a = i[e.index - n.length].name, l = i[e.index - n.length].lower) : (a = n[e.index].name, l = n[e.index].lower), o = "%i", e.bkrCase === t.BKR_MODE_CS && (o = "%s"), e.bkrMode === t.BKR_MODE_UM ? o += "%u" : o += "%p", c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, index: ${e.index}, lower: '${l}', bkrCase: ${e.bkrCase}, bkrMode: ${e.bkrMode}};// BKR(\\${a=o+a})
`;
                                    break;
                                case t.UDT:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, empty: ${e.empty}, index: ${e.index}};// UDT(${i[e.index].name})
`;
                                    break;
                                case t.REP:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, min: ${e.min}, max: ${e.max}};// REP
`;
                                    break;
                                case t.AND:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}};// AND
`;
                                    break;
                                case t.NOT:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}};// NOT
`;
                                    break;
                                case t.ABG:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}};// ABG(%^)
`;
                                    break;
                                case t.AEN:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}};// AEN(%$)
`;
                                    break;
                                case t.BKA:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}};// BKA
`;
                                    break;
                                case t.BKN:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}};// BKN
`;
                                    break;
                                case t.TLS:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, string: [${e.string.toString()}]};// TLS
`;
                                    break;
                                case t.TBS:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, string: [${e.string.toString()}]};// TBS
`;
                                    break;
                                case t.TRG:
                                    c += `  this.rules[${r}].opcodes[${s}] = {type: ${e.type}, min: ${e.min}, max: ${e.max}};// TRG
`;
                                    break;
                                default:
                                    throw Error("parser.js: ~143: unrecognized opcode")
                            }
                        })
                    }), c += '\n  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\n  this.toString = function toString(){\n    let str = "";\n', r.forEach(t => {
                        let r = t.beginChar + t.length;
                        u = "", c += '    str += "';
                        for (let n = t.beginChar; n < r; n += 1) {
                            switch (e[n]) {
                                case 9:
                                    u = " ";
                                    break;
                                case 10:
                                    u = "\\n";
                                    break;
                                case 13:
                                    u = "\\r";
                                    break;
                                case 34:
                                    u = '\\"';
                                    break;
                                case 92:
                                    u = "\\\\";
                                    break;
                                default:
                                    u = String.fromCharCode(e[n])
                            }
                            c += u
                        }
                        c += '";\n'
                    }), c += "    return str;\n  }\n}\n"
                }, this.generateObject = function(e, t, r) {
                    let n = {},
                        i = [],
                        s = [],
                        o = e.slice(0);
                    return n.grammarObject = "grammarObject", t.forEach(e => {
                        i.push(e.lower)
                    }), i.sort(), r.length > 0 && (r.forEach(e => {
                        s.push(e.lower)
                    }), s.sort()), n.callbacks = [], i.forEach(e => {
                        n.callbacks[e] = !1
                    }), r.length > 0 && s.forEach(e => {
                        n.callbacks[e] = !1
                    }), n.rules = t, n.udts = r, n.toString = function() {
                        return o
                    }, n
                }
            }
        },
        79695: function(e, t, r) {
            e.exports = function() {
                let e = r(92242),
                    t = null;

                function n(e) {
                    return !e.left && !e.nested && !e.right && !e.cyclic && e.empty
                }

                function i(e) {
                    return !!e.left || !!e.nested || !!e.right || !!e.cyclic
                }
                let s = e => e ? "t" : "f",
                    o = e => e ? "e" : "f",
                    a = e => e ? "t" : "e",
                    l = (r, n, i, l) => `${r}:${n}:` + (`${o(i.left)} ${s(i.nested)} ${s(i.right)} ${o(i.cyclic)} ${a(i.finite)} ${s(i.empty)}:${t.typeToString(l.recursiveType)}:` + (l.recursiveType === e.ATTR_MR ? l.groupNumber : "-")) + `:${i.rule.name}
`,
                    u = () => "LEGEND - t=true, f=false, e=error\nsequence:rule index:left nested right cyclic finite empty:type:group number:rule name\n",
                    c = e => {
                        let r = 0,
                            n = 0,
                            i = null,
                            s = null,
                            o = "",
                            {
                                ruleIndexes: a
                            } = t;
                        for (97 === e ? a = t.ruleAlphaIndexes : 116 === e && (a = t.ruleTypeIndexes), r = 0; r < t.ruleCount; r += 1) n = a[r], i = t.attrs[n], s = t.ruleDeps[n], o += l(r, n, i, s);
                        return o
                    };
                return {
                    ruleAttributes: r => {
                        t = r;
                        let s = 0,
                            o = 0,
                            a = t.attrGen();
                        for (s = 0; s < t.ruleCount; s += 1) {
                            for (o = 0; o < t.ruleCount; o += 1) t.attrInit(t.attrsWorking[o]);
                            t.startRule = s,
                                function t(r, s, o) {
                                    let a = r.attrsWorking[s];
                                    a.isComplete ? r.attrCopy(o, a) : a.isOpen ? s === r.startRule ? s === r.startRule && (o.left = !0, o.right = !0, o.cyclic = !0, o.leaf = !0) : o.finite = !0 : (a.isOpen = !0, function r(s, o, a, l) {
                                        s.attrInit(l);
                                        let u = o[a];
                                        switch (u.type) {
                                            case e.ALT:
                                                ! function(e, t, n, i) {
                                                    let s = 0,
                                                        o = t[n],
                                                        a = o.children.length,
                                                        l = [];
                                                    for (s = 0; s < a; s += 1) l.push(e.attrGen());
                                                    for (s = 0; s < a; s += 1) r(e, t, o.children[s], l[s]);
                                                    for (s = 0, i.left = !1, i.right = !1, i.nested = !1, i.empty = !1, i.finite = !1, i.cyclic = !1; s < a; s += 1) l[s].left && (i.left = !0), l[s].nested && (i.nested = !0), l[s].right && (i.right = !0), l[s].empty && (i.empty = !0), l[s].finite && (i.finite = !0), l[s].cyclic && (i.cyclic = !0)
                                                }(s, o, a, l);
                                                break;
                                            case e.CAT:
                                                ! function(e, t, s, o) {
                                                    let a = 0,
                                                        l = t[s],
                                                        u = l.children.length,
                                                        c = [];
                                                    for (a = 0; a < u; a += 1) c.push(e.attrGen());
                                                    for (a = 0; a < u; a += 1) r(e, t, l.children[a], c[a]);
                                                    o.left = function(e, t) {
                                                        for (let r = 0; r < t; r += 1) {
                                                            if (e[r].left) return !0;
                                                            if (!e[r].empty) break
                                                        }
                                                        return !1
                                                    }(c, u), o.right = function(e, t) {
                                                        for (let r = t - 1; r >= 0; r -= 1) {
                                                            if (e[r].right) return !0;
                                                            if (!e[r].empty) break
                                                        }
                                                        return !1
                                                    }(c, u), o.nested = function(e, t) {
                                                        let r = 0,
                                                            s = 0,
                                                            o = 0;
                                                        for (r = 0; r < t; r += 1)
                                                            if (e[r].nested) return !0;
                                                        for (r = 0; r < t; r += 1)
                                                            if (e[r].right && !e[r].leaf) {
                                                                for (s = r + 1; s < t; s += 1)
                                                                    if (!n(e[s])) return !0
                                                            }
                                                        for (r = t - 1; r >= 0; r -= 1)
                                                            if (e[r].left && !e[r].leaf) {
                                                                for (s = r - 1; s >= 0; s -= 1)
                                                                    if (!n(e[s])) return !0
                                                            }
                                                        for (r = 0; r < t; r += 1)
                                                            if (!e[r].empty && !i(e[r])) {
                                                                for (s = r + 1; s < t; s += 1)
                                                                    if (i(e[s])) {
                                                                        for (o = s + 1; o < t; o += 1)
                                                                            if (!e[o].empty && !i(e[o])) return !0
                                                                    }
                                                            }
                                                        return !1
                                                    }(c, u), o.empty = function(e, t) {
                                                        for (let r = 0; r < t; r += 1)
                                                            if (!e[r].empty) return !1;
                                                        return !0
                                                    }(c, u), o.finite = function(e, t) {
                                                        for (let r = 0; r < t; r += 1)
                                                            if (!e[r].finite) return !1;
                                                        return !0
                                                    }(c, u), o.cyclic = function(e, t) {
                                                        for (let r = 0; r < t; r += 1)
                                                            if (!e[r].cyclic) return !1;
                                                        return !0
                                                    }(c, u)
                                                }(s, o, a, l);
                                                break;
                                            case e.REP:
                                                r(s, o, a + 1, l), 0 === u.min && (l.empty = !0, l.finite = !0);
                                                break;
                                            case e.RNM:
                                                t(s, o[a].index, l);
                                                break;
                                            case e.BKR:
                                                ! function(e, r, n, i) {
                                                    let s = r[n];
                                                    s.index >= e.ruleCount ? (i.empty = e.udts[s.index - e.ruleCount].empty, i.finite = !0) : (t(e, s.index, i), i.left = !1, i.nested = !1, i.right = !1, i.cyclic = !1)
                                                }(s, o, a, l);
                                                break;
                                            case e.AND:
                                            case e.NOT:
                                            case e.BKA:
                                            case e.BKN:
                                                r(s, o, a + 1, l), l.empty = !0;
                                                break;
                                            case e.TLS:
                                                l.empty = !o[a].string.length, l.finite = !0, l.cyclic = !1;
                                                break;
                                            case e.TBS:
                                            case e.TRG:
                                                l.empty = !1, l.finite = !0, l.cyclic = !1;
                                                break;
                                            case e.UDT:
                                                l.empty = u.empty, l.finite = !0, l.cyclic = !1;
                                                break;
                                            case e.ABG:
                                            case e.AEN:
                                                l.empty = !0, l.finite = !0, l.cyclic = !1;
                                                break;
                                            default:
                                                throw Error(`unknown opcode type: ${u}`)
                                        }
                                    }(r, a.rule.opcodes, 0, o), a.left = o.left, a.right = o.right, a.nested = o.nested, a.empty = o.empty, a.finite = o.finite, a.cyclic = o.cyclic, a.leaf = !1, a.isOpen = !1, a.isComplete = !0)
                                }(t, s, a), t.attrCopy(t.attrs[s], t.attrsWorking[s])
                        }
                        t.attributesComplete = !0;
                        let l = null;
                        for (s = 0; s < t.ruleCount; s += 1)
                            if ((l = t.attrs[s]).left || !l.finite || l.cyclic) {
                                let e = t.attrGen(l.rule);
                                t.attrCopy(e, l), t.attrsErrors.push(e), t.attrsErrorCount += 1
                            }
                    },
                    showAttributes: (e = "index") => {
                        if (!t.attributesComplete) throw Error("rule-attributes.js:showAttributes: attributes not available");
                        let r = "",
                            n = "RULE ATTRIBUTES\n";
                        return 97 === e.charCodeAt(0) ? r += "alphabetical by rule name\n" + n + u() + c(97) : 116 === e.charCodeAt(0) ? r += "ordered by rule type\n" + n + u() + c(116) : r += "ordered by rule index\n" + n + u() + c(), r
                    },
                    showAttributeErrors: () => {
                        let e = null,
                            r = null,
                            n = "";
                        if (n += "RULE ATTRIBUTES WITH ERRORS\n" + u(), t.attrsErrorCount)
                            for (let i = 0; i < t.attrsErrorCount; i += 1) e = t.attrsErrors[i], r = t.ruleDeps[e.rule.index], n += l(i, e.rule.index, e, r);
                        else n += "<none>\n";
                        return n
                    }
                }
            }()
        },
        44542: function(e, t, r) {
            e.exports = (() => {
                let e = r(92242),
                    t = null,
                    n = (t, r, i, s) => {
                        let o = 0,
                            a = 0,
                            l = r[i];
                        s[i] = !0;
                        let u = l.rule.opcodes;
                        for (o = 0; o < u.length; o += 1) {
                            let i = u[o];
                            if (i.type === e.RNM)
                                for (l.refersTo[i.index] = !0, s[i.index] || n(t, r, i.index, s), a = 0; a < t; a += 1) r[i.index].refersTo[a] && (l.refersTo[a] = !0);
                            else i.type === e.UDT ? l.refersToUdt[i.index] = !0 : i.type !== e.BKR || (i.index < t ? (l.refersTo[i.index] = !0, s[i.index] || n(t, r, i.index, s)) : l.refersToUdt[t - i.index] = !0)
                        }
                    },
                    i = (e = null) => {
                        let r = 0,
                            n = 0,
                            i = 0,
                            s = 0,
                            o = t.ruleCount - 1,
                            a = t.udtCount - 1,
                            l = "",
                            u = "",
                            c = !1,
                            d = null,
                            {
                                ruleIndexes: h
                            } = t,
                            {
                                udtIndexes: f
                            } = t;
                        for (97 === e ? (h = t.ruleAlphaIndexes, f = t.udtAlphaIndexes) : 116 === e && (h = t.ruleTypeIndexes, f = t.udtAlphaIndexes), r = 0; r < t.ruleCount; r += 1) {
                            for (u = `${h[r]}:${t.typeToString((d=t.ruleDeps[h[r]]).recursiveType)}:`, t.isMutuallyRecursive && (u += (d.groupNumber > -1 ? d.groupNumber : "-") + ":"), u += " ", l += `${u+t.rules[h[r]].name}
`, c = !0, i = 0, s = l.length, l += u, n = 0; n < t.ruleCount; n += 1) d.refersTo[h[n]] && (c ? (c = !1, l += "=> " + t.ruleDeps[h[n]].rule.name) : l += `, ${t.ruleDeps[h[n]].rule.name}`, i += 1), l.length - s > 100 && n !== o && (l += `
${u}=> `, s = l.length);
                            if (t.udtCount)
                                for (n = 0; n < t.udtCount; n += 1) d.refersToUdt[f[n]] && (c ? (c = !1, l += "=> " + t.udts[f[n]].name) : l += `, ${t.udts[f[n]].name}`, i += 1), l.length - s > 100 && n !== a && (l += `
${u}=> `, s = l.length);
                            for (0 === i && (l += "=> <none>\n"), !1 === c && (l += "\n"), c = !0, i = 0, s = l.length, l += u, n = 0; n < t.ruleCount; n += 1) d.referencedBy[h[n]] && (c ? (c = !1, l += "<= " + t.ruleDeps[h[n]].rule.name) : l += `, ${t.ruleDeps[h[n]].rule.name}`, i += 1), l.length - s > 100 && n !== o && (l += `
${u}=> `, s = l.length);
                            0 === i && (l += "<= <none>\n"), !1 === c && (l += "\n"), l += "\n"
                        }
                        return l
                    };
                return {
                    ruleDependencies: r => {
                        let i = 0,
                            s = 0,
                            o = 0,
                            a = null,
                            l = null,
                            u = !1;
                        (t = r).dependenciesComplete = !1;
                        let c = t.falseArray(t.ruleCount);
                        for (i = 0; i < t.ruleCount; i += 1) t.falsifyArray(c), n(t.ruleCount, t.ruleDeps, i, c);
                        for (i = 0; i < t.ruleCount; i += 1)
                            for (s = 0; s < t.ruleCount; s += 1) i !== s && t.ruleDeps[s].refersTo[i] && (t.ruleDeps[i].referencedBy[s] = !0);
                        for (i = 0; i < t.ruleCount; i += 1) t.ruleDeps[i].recursiveType = e.ATTR_N, t.ruleDeps[i].refersTo[i] && (t.ruleDeps[i].recursiveType = e.ATTR_R);
                        for (i = 0, o = -1; i < t.ruleCount; i += 1)
                            if ((a = t.ruleDeps[i]).recursiveType === e.ATTR_R)
                                for (s = 0, u = !0; s < t.ruleCount; s += 1) i !== s && (l = t.ruleDeps[s]).recursiveType === e.ATTR_R && a.refersTo[s] && l.refersTo[i] && (u && (o += 1, a.recursiveType = e.ATTR_MR, a.groupNumber = o, u = !1), l.recursiveType = e.ATTR_MR, l.groupNumber = o);
                        t.isMutuallyRecursive = o > -1, t.ruleAlphaIndexes.sort(t.compRulesAlpha), t.ruleTypeIndexes.sort(t.compRulesAlpha), t.ruleTypeIndexes.sort(t.compRulesType), t.isMutuallyRecursive && t.ruleTypeIndexes.sort(t.compRulesGroup), t.udtCount && t.udtAlphaIndexes.sort(t.compUdtsAlpha), t.dependenciesComplete = !0
                    },
                    showRuleDependencies: (e = "index") => {
                        let r = "RULE DEPENDENCIES(index:type:[group number:])\n";
                        return r += "=> refers to rule names\n<= referenced by rule names\n", t.dependenciesComplete && (97 === e.charCodeAt(0) ? r += "alphabetical by rule name\n" + i(97) : 116 === e.charCodeAt(0) ? r += "ordered by rule type\n" + i(116) : r += "ordered by rule index\n" + i(null)), r
                    }
                }
            })()
        },
        18066: function(e) {
            e.exports = function() {
                this.grammarObject = "grammarObject", this.rules = [], this.rules[0] = {
                    name: "File",
                    lower: "file",
                    index: 0,
                    isBkr: !1
                }, this.rules[1] = {
                    name: "BlankLine",
                    lower: "blankline",
                    index: 1,
                    isBkr: !1
                }, this.rules[2] = {
                    name: "Rule",
                    lower: "rule",
                    index: 2,
                    isBkr: !1
                }, this.rules[3] = {
                    name: "RuleLookup",
                    lower: "rulelookup",
                    index: 3,
                    isBkr: !1
                }, this.rules[4] = {
                    name: "RuleNameTest",
                    lower: "rulenametest",
                    index: 4,
                    isBkr: !1
                }, this.rules[5] = {
                    name: "RuleName",
                    lower: "rulename",
                    index: 5,
                    isBkr: !1
                }, this.rules[6] = {
                    name: "RuleNameError",
                    lower: "rulenameerror",
                    index: 6,
                    isBkr: !1
                }, this.rules[7] = {
                    name: "DefinedAsTest",
                    lower: "definedastest",
                    index: 7,
                    isBkr: !1
                }, this.rules[8] = {
                    name: "DefinedAsError",
                    lower: "definedaserror",
                    index: 8,
                    isBkr: !1
                }, this.rules[9] = {
                    name: "DefinedAs",
                    lower: "definedas",
                    index: 9,
                    isBkr: !1
                }, this.rules[10] = {
                    name: "Defined",
                    lower: "defined",
                    index: 10,
                    isBkr: !1
                }, this.rules[11] = {
                    name: "IncAlt",
                    lower: "incalt",
                    index: 11,
                    isBkr: !1
                }, this.rules[12] = {
                    name: "RuleError",
                    lower: "ruleerror",
                    index: 12,
                    isBkr: !1
                }, this.rules[13] = {
                    name: "LineEndError",
                    lower: "lineenderror",
                    index: 13,
                    isBkr: !1
                }, this.rules[14] = {
                    name: "Alternation",
                    lower: "alternation",
                    index: 14,
                    isBkr: !1
                }, this.rules[15] = {
                    name: "Concatenation",
                    lower: "concatenation",
                    index: 15,
                    isBkr: !1
                }, this.rules[16] = {
                    name: "Repetition",
                    lower: "repetition",
                    index: 16,
                    isBkr: !1
                }, this.rules[17] = {
                    name: "Modifier",
                    lower: "modifier",
                    index: 17,
                    isBkr: !1
                }, this.rules[18] = {
                    name: "Predicate",
                    lower: "predicate",
                    index: 18,
                    isBkr: !1
                }, this.rules[19] = {
                    name: "BasicElement",
                    lower: "basicelement",
                    index: 19,
                    isBkr: !1
                }, this.rules[20] = {
                    name: "BasicElementErr",
                    lower: "basicelementerr",
                    index: 20,
                    isBkr: !1
                }, this.rules[21] = {
                    name: "Group",
                    lower: "group",
                    index: 21,
                    isBkr: !1
                }, this.rules[22] = {
                    name: "GroupError",
                    lower: "grouperror",
                    index: 22,
                    isBkr: !1
                }, this.rules[23] = {
                    name: "GroupOpen",
                    lower: "groupopen",
                    index: 23,
                    isBkr: !1
                }, this.rules[24] = {
                    name: "GroupClose",
                    lower: "groupclose",
                    index: 24,
                    isBkr: !1
                }, this.rules[25] = {
                    name: "Option",
                    lower: "option",
                    index: 25,
                    isBkr: !1
                }, this.rules[26] = {
                    name: "OptionError",
                    lower: "optionerror",
                    index: 26,
                    isBkr: !1
                }, this.rules[27] = {
                    name: "OptionOpen",
                    lower: "optionopen",
                    index: 27,
                    isBkr: !1
                }, this.rules[28] = {
                    name: "OptionClose",
                    lower: "optionclose",
                    index: 28,
                    isBkr: !1
                }, this.rules[29] = {
                    name: "RnmOp",
                    lower: "rnmop",
                    index: 29,
                    isBkr: !1
                }, this.rules[30] = {
                    name: "BkrOp",
                    lower: "bkrop",
                    index: 30,
                    isBkr: !1
                }, this.rules[31] = {
                    name: "bkrModifier",
                    lower: "bkrmodifier",
                    index: 31,
                    isBkr: !1
                }, this.rules[32] = {
                    name: "cs",
                    lower: "cs",
                    index: 32,
                    isBkr: !1
                }, this.rules[33] = {
                    name: "ci",
                    lower: "ci",
                    index: 33,
                    isBkr: !1
                }, this.rules[34] = {
                    name: "um",
                    lower: "um",
                    index: 34,
                    isBkr: !1
                }, this.rules[35] = {
                    name: "pm",
                    lower: "pm",
                    index: 35,
                    isBkr: !1
                }, this.rules[36] = {
                    name: "bkr-name",
                    lower: "bkr-name",
                    index: 36,
                    isBkr: !1
                }, this.rules[37] = {
                    name: "rname",
                    lower: "rname",
                    index: 37,
                    isBkr: !1
                }, this.rules[38] = {
                    name: "uname",
                    lower: "uname",
                    index: 38,
                    isBkr: !1
                }, this.rules[39] = {
                    name: "ename",
                    lower: "ename",
                    index: 39,
                    isBkr: !1
                }, this.rules[40] = {
                    name: "UdtOp",
                    lower: "udtop",
                    index: 40,
                    isBkr: !1
                }, this.rules[41] = {
                    name: "udt-non-empty",
                    lower: "udt-non-empty",
                    index: 41,
                    isBkr: !1
                }, this.rules[42] = {
                    name: "udt-empty",
                    lower: "udt-empty",
                    index: 42,
                    isBkr: !1
                }, this.rules[43] = {
                    name: "RepOp",
                    lower: "repop",
                    index: 43,
                    isBkr: !1
                }, this.rules[44] = {
                    name: "AltOp",
                    lower: "altop",
                    index: 44,
                    isBkr: !1
                }, this.rules[45] = {
                    name: "CatOp",
                    lower: "catop",
                    index: 45,
                    isBkr: !1
                }, this.rules[46] = {
                    name: "StarOp",
                    lower: "starop",
                    index: 46,
                    isBkr: !1
                }, this.rules[47] = {
                    name: "AndOp",
                    lower: "andop",
                    index: 47,
                    isBkr: !1
                }, this.rules[48] = {
                    name: "NotOp",
                    lower: "notop",
                    index: 48,
                    isBkr: !1
                }, this.rules[49] = {
                    name: "BkaOp",
                    lower: "bkaop",
                    index: 49,
                    isBkr: !1
                }, this.rules[50] = {
                    name: "BknOp",
                    lower: "bknop",
                    index: 50,
                    isBkr: !1
                }, this.rules[51] = {
                    name: "AbgOp",
                    lower: "abgop",
                    index: 51,
                    isBkr: !1
                }, this.rules[52] = {
                    name: "AenOp",
                    lower: "aenop",
                    index: 52,
                    isBkr: !1
                }, this.rules[53] = {
                    name: "TrgOp",
                    lower: "trgop",
                    index: 53,
                    isBkr: !1
                }, this.rules[54] = {
                    name: "TbsOp",
                    lower: "tbsop",
                    index: 54,
                    isBkr: !1
                }, this.rules[55] = {
                    name: "TlsOp",
                    lower: "tlsop",
                    index: 55,
                    isBkr: !1
                }, this.rules[56] = {
                    name: "TlsCase",
                    lower: "tlscase",
                    index: 56,
                    isBkr: !1
                }, this.rules[57] = {
                    name: "TlsOpen",
                    lower: "tlsopen",
                    index: 57,
                    isBkr: !1
                }, this.rules[58] = {
                    name: "TlsClose",
                    lower: "tlsclose",
                    index: 58,
                    isBkr: !1
                }, this.rules[59] = {
                    name: "TlsString",
                    lower: "tlsstring",
                    index: 59,
                    isBkr: !1
                }, this.rules[60] = {
                    name: "StringTab",
                    lower: "stringtab",
                    index: 60,
                    isBkr: !1
                }, this.rules[61] = {
                    name: "ClsOp",
                    lower: "clsop",
                    index: 61,
                    isBkr: !1
                }, this.rules[62] = {
                    name: "ClsOpen",
                    lower: "clsopen",
                    index: 62,
                    isBkr: !1
                }, this.rules[63] = {
                    name: "ClsClose",
                    lower: "clsclose",
                    index: 63,
                    isBkr: !1
                }, this.rules[64] = {
                    name: "ClsString",
                    lower: "clsstring",
                    index: 64,
                    isBkr: !1
                }, this.rules[65] = {
                    name: "ProsVal",
                    lower: "prosval",
                    index: 65,
                    isBkr: !1
                }, this.rules[66] = {
                    name: "ProsValOpen",
                    lower: "prosvalopen",
                    index: 66,
                    isBkr: !1
                }, this.rules[67] = {
                    name: "ProsValString",
                    lower: "prosvalstring",
                    index: 67,
                    isBkr: !1
                }, this.rules[68] = {
                    name: "ProsValClose",
                    lower: "prosvalclose",
                    index: 68,
                    isBkr: !1
                }, this.rules[69] = {
                    name: "rep-min",
                    lower: "rep-min",
                    index: 69,
                    isBkr: !1
                }, this.rules[70] = {
                    name: "rep-min-max",
                    lower: "rep-min-max",
                    index: 70,
                    isBkr: !1
                }, this.rules[71] = {
                    name: "rep-max",
                    lower: "rep-max",
                    index: 71,
                    isBkr: !1
                }, this.rules[72] = {
                    name: "rep-num",
                    lower: "rep-num",
                    index: 72,
                    isBkr: !1
                }, this.rules[73] = {
                    name: "dString",
                    lower: "dstring",
                    index: 73,
                    isBkr: !1
                }, this.rules[74] = {
                    name: "xString",
                    lower: "xstring",
                    index: 74,
                    isBkr: !1
                }, this.rules[75] = {
                    name: "bString",
                    lower: "bstring",
                    index: 75,
                    isBkr: !1
                }, this.rules[76] = {
                    name: "Dec",
                    lower: "dec",
                    index: 76,
                    isBkr: !1
                }, this.rules[77] = {
                    name: "Hex",
                    lower: "hex",
                    index: 77,
                    isBkr: !1
                }, this.rules[78] = {
                    name: "Bin",
                    lower: "bin",
                    index: 78,
                    isBkr: !1
                }, this.rules[79] = {
                    name: "dmin",
                    lower: "dmin",
                    index: 79,
                    isBkr: !1
                }, this.rules[80] = {
                    name: "dmax",
                    lower: "dmax",
                    index: 80,
                    isBkr: !1
                }, this.rules[81] = {
                    name: "bmin",
                    lower: "bmin",
                    index: 81,
                    isBkr: !1
                }, this.rules[82] = {
                    name: "bmax",
                    lower: "bmax",
                    index: 82,
                    isBkr: !1
                }, this.rules[83] = {
                    name: "xmin",
                    lower: "xmin",
                    index: 83,
                    isBkr: !1
                }, this.rules[84] = {
                    name: "xmax",
                    lower: "xmax",
                    index: 84,
                    isBkr: !1
                }, this.rules[85] = {
                    name: "dnum",
                    lower: "dnum",
                    index: 85,
                    isBkr: !1
                }, this.rules[86] = {
                    name: "bnum",
                    lower: "bnum",
                    index: 86,
                    isBkr: !1
                }, this.rules[87] = {
                    name: "xnum",
                    lower: "xnum",
                    index: 87,
                    isBkr: !1
                }, this.rules[88] = {
                    name: "alphanum",
                    lower: "alphanum",
                    index: 88,
                    isBkr: !1
                }, this.rules[89] = {
                    name: "owsp",
                    lower: "owsp",
                    index: 89,
                    isBkr: !1
                }, this.rules[90] = {
                    name: "wsp",
                    lower: "wsp",
                    index: 90,
                    isBkr: !1
                }, this.rules[91] = {
                    name: "space",
                    lower: "space",
                    index: 91,
                    isBkr: !1
                }, this.rules[92] = {
                    name: "comment",
                    lower: "comment",
                    index: 92,
                    isBkr: !1
                }, this.rules[93] = {
                    name: "LineEnd",
                    lower: "lineend",
                    index: 93,
                    isBkr: !1
                }, this.rules[94] = {
                    name: "LineContinue",
                    lower: "linecontinue",
                    index: 94,
                    isBkr: !1
                }, this.udts = [], this.rules[0].opcodes = [], this.rules[0].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[0].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[0].opcodes[2] = {
                    type: 4,
                    index: 1
                }, this.rules[0].opcodes[3] = {
                    type: 4,
                    index: 2
                }, this.rules[0].opcodes[4] = {
                    type: 4,
                    index: 12
                }, this.rules[1].opcodes = [], this.rules[1].opcodes[0] = {
                    type: 2,
                    children: [1, 5, 7]
                }, this.rules[1].opcodes[1] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[1].opcodes[2] = {
                    type: 1,
                    children: [3, 4]
                }, this.rules[1].opcodes[3] = {
                    type: 6,
                    string: [32]
                }, this.rules[1].opcodes[4] = {
                    type: 6,
                    string: [9]
                }, this.rules[1].opcodes[5] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[1].opcodes[6] = {
                    type: 4,
                    index: 92
                }, this.rules[1].opcodes[7] = {
                    type: 4,
                    index: 93
                }, this.rules[2].opcodes = [], this.rules[2].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3, 4]
                }, this.rules[2].opcodes[1] = {
                    type: 4,
                    index: 3
                }, this.rules[2].opcodes[2] = {
                    type: 4,
                    index: 89
                }, this.rules[2].opcodes[3] = {
                    type: 4,
                    index: 14
                }, this.rules[2].opcodes[4] = {
                    type: 1,
                    children: [5, 8]
                }, this.rules[2].opcodes[5] = {
                    type: 2,
                    children: [6, 7]
                }, this.rules[2].opcodes[6] = {
                    type: 4,
                    index: 89
                }, this.rules[2].opcodes[7] = {
                    type: 4,
                    index: 93
                }, this.rules[2].opcodes[8] = {
                    type: 2,
                    children: [9, 10]
                }, this.rules[2].opcodes[9] = {
                    type: 4,
                    index: 13
                }, this.rules[2].opcodes[10] = {
                    type: 4,
                    index: 93
                }, this.rules[3].opcodes = [], this.rules[3].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3]
                }, this.rules[3].opcodes[1] = {
                    type: 4,
                    index: 4
                }, this.rules[3].opcodes[2] = {
                    type: 4,
                    index: 89
                }, this.rules[3].opcodes[3] = {
                    type: 4,
                    index: 7
                }, this.rules[4].opcodes = [], this.rules[4].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[4].opcodes[1] = {
                    type: 4,
                    index: 5
                }, this.rules[4].opcodes[2] = {
                    type: 4,
                    index: 6
                }, this.rules[5].opcodes = [], this.rules[5].opcodes[0] = {
                    type: 4,
                    index: 88
                }, this.rules[6].opcodes = [], this.rules[6].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[6].opcodes[1] = {
                    type: 1,
                    children: [2, 3]
                }, this.rules[6].opcodes[2] = {
                    type: 5,
                    min: 33,
                    max: 60
                }, this.rules[6].opcodes[3] = {
                    type: 5,
                    min: 62,
                    max: 126
                }, this.rules[7].opcodes = [], this.rules[7].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[7].opcodes[1] = {
                    type: 4,
                    index: 9
                }, this.rules[7].opcodes[2] = {
                    type: 4,
                    index: 8
                }, this.rules[8].opcodes = [], this.rules[8].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 2
                }, this.rules[8].opcodes[1] = {
                    type: 5,
                    min: 33,
                    max: 126
                }, this.rules[9].opcodes = [], this.rules[9].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[9].opcodes[1] = {
                    type: 4,
                    index: 11
                }, this.rules[9].opcodes[2] = {
                    type: 4,
                    index: 10
                }, this.rules[10].opcodes = [], this.rules[10].opcodes[0] = {
                    type: 6,
                    string: [61]
                }, this.rules[11].opcodes = [], this.rules[11].opcodes[0] = {
                    type: 6,
                    string: [61, 47]
                }, this.rules[12].opcodes = [], this.rules[12].opcodes[0] = {
                    type: 2,
                    children: [1, 6]
                }, this.rules[12].opcodes[1] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[12].opcodes[2] = {
                    type: 1,
                    children: [3, 4, 5]
                }, this.rules[12].opcodes[3] = {
                    type: 5,
                    min: 32,
                    max: 126
                }, this.rules[12].opcodes[4] = {
                    type: 6,
                    string: [9]
                }, this.rules[12].opcodes[5] = {
                    type: 4,
                    index: 94
                }, this.rules[12].opcodes[6] = {
                    type: 4,
                    index: 93
                }, this.rules[13].opcodes = [], this.rules[13].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[13].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[13].opcodes[2] = {
                    type: 5,
                    min: 32,
                    max: 126
                }, this.rules[13].opcodes[3] = {
                    type: 6,
                    string: [9]
                }, this.rules[13].opcodes[4] = {
                    type: 4,
                    index: 94
                }, this.rules[14].opcodes = [], this.rules[14].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[14].opcodes[1] = {
                    type: 4,
                    index: 15
                }, this.rules[14].opcodes[2] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[14].opcodes[3] = {
                    type: 2,
                    children: [4, 5, 6]
                }, this.rules[14].opcodes[4] = {
                    type: 4,
                    index: 89
                }, this.rules[14].opcodes[5] = {
                    type: 4,
                    index: 44
                }, this.rules[14].opcodes[6] = {
                    type: 4,
                    index: 15
                }, this.rules[15].opcodes = [], this.rules[15].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[15].opcodes[1] = {
                    type: 4,
                    index: 16
                }, this.rules[15].opcodes[2] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[15].opcodes[3] = {
                    type: 2,
                    children: [4, 5]
                }, this.rules[15].opcodes[4] = {
                    type: 4,
                    index: 45
                }, this.rules[15].opcodes[5] = {
                    type: 4,
                    index: 16
                }, this.rules[16].opcodes = [], this.rules[16].opcodes[0] = {
                    type: 2,
                    children: [1, 3]
                }, this.rules[16].opcodes[1] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[16].opcodes[2] = {
                    type: 4,
                    index: 17
                }, this.rules[16].opcodes[3] = {
                    type: 1,
                    children: [4, 5, 6, 7]
                }, this.rules[16].opcodes[4] = {
                    type: 4,
                    index: 21
                }, this.rules[16].opcodes[5] = {
                    type: 4,
                    index: 25
                }, this.rules[16].opcodes[6] = {
                    type: 4,
                    index: 19
                }, this.rules[16].opcodes[7] = {
                    type: 4,
                    index: 20
                }, this.rules[17].opcodes = [], this.rules[17].opcodes[0] = {
                    type: 1,
                    children: [1, 5]
                }, this.rules[17].opcodes[1] = {
                    type: 2,
                    children: [2, 3]
                }, this.rules[17].opcodes[2] = {
                    type: 4,
                    index: 18
                }, this.rules[17].opcodes[3] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[17].opcodes[4] = {
                    type: 4,
                    index: 43
                }, this.rules[17].opcodes[5] = {
                    type: 4,
                    index: 43
                }, this.rules[18].opcodes = [], this.rules[18].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3, 4]
                }, this.rules[18].opcodes[1] = {
                    type: 4,
                    index: 49
                }, this.rules[18].opcodes[2] = {
                    type: 4,
                    index: 50
                }, this.rules[18].opcodes[3] = {
                    type: 4,
                    index: 47
                }, this.rules[18].opcodes[4] = {
                    type: 4,
                    index: 48
                }, this.rules[19].opcodes = [], this.rules[19].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                }, this.rules[19].opcodes[1] = {
                    type: 4,
                    index: 40
                }, this.rules[19].opcodes[2] = {
                    type: 4,
                    index: 29
                }, this.rules[19].opcodes[3] = {
                    type: 4,
                    index: 53
                }, this.rules[19].opcodes[4] = {
                    type: 4,
                    index: 54
                }, this.rules[19].opcodes[5] = {
                    type: 4,
                    index: 55
                }, this.rules[19].opcodes[6] = {
                    type: 4,
                    index: 61
                }, this.rules[19].opcodes[7] = {
                    type: 4,
                    index: 30
                }, this.rules[19].opcodes[8] = {
                    type: 4,
                    index: 51
                }, this.rules[19].opcodes[9] = {
                    type: 4,
                    index: 52
                }, this.rules[19].opcodes[10] = {
                    type: 4,
                    index: 65
                }, this.rules[20].opcodes = [], this.rules[20].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[20].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4, 5]
                }, this.rules[20].opcodes[2] = {
                    type: 5,
                    min: 33,
                    max: 40
                }, this.rules[20].opcodes[3] = {
                    type: 5,
                    min: 42,
                    max: 46
                }, this.rules[20].opcodes[4] = {
                    type: 5,
                    min: 48,
                    max: 92
                }, this.rules[20].opcodes[5] = {
                    type: 5,
                    min: 94,
                    max: 126
                }, this.rules[21].opcodes = [], this.rules[21].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3]
                }, this.rules[21].opcodes[1] = {
                    type: 4,
                    index: 23
                }, this.rules[21].opcodes[2] = {
                    type: 4,
                    index: 14
                }, this.rules[21].opcodes[3] = {
                    type: 1,
                    children: [4, 5]
                }, this.rules[21].opcodes[4] = {
                    type: 4,
                    index: 24
                }, this.rules[21].opcodes[5] = {
                    type: 4,
                    index: 22
                }, this.rules[22].opcodes = [], this.rules[22].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[22].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4, 5]
                }, this.rules[22].opcodes[2] = {
                    type: 5,
                    min: 33,
                    max: 40
                }, this.rules[22].opcodes[3] = {
                    type: 5,
                    min: 42,
                    max: 46
                }, this.rules[22].opcodes[4] = {
                    type: 5,
                    min: 48,
                    max: 92
                }, this.rules[22].opcodes[5] = {
                    type: 5,
                    min: 94,
                    max: 126
                }, this.rules[23].opcodes = [], this.rules[23].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[23].opcodes[1] = {
                    type: 6,
                    string: [40]
                }, this.rules[23].opcodes[2] = {
                    type: 4,
                    index: 89
                }, this.rules[24].opcodes = [], this.rules[24].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[24].opcodes[1] = {
                    type: 4,
                    index: 89
                }, this.rules[24].opcodes[2] = {
                    type: 6,
                    string: [41]
                }, this.rules[25].opcodes = [], this.rules[25].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3]
                }, this.rules[25].opcodes[1] = {
                    type: 4,
                    index: 27
                }, this.rules[25].opcodes[2] = {
                    type: 4,
                    index: 14
                }, this.rules[25].opcodes[3] = {
                    type: 1,
                    children: [4, 5]
                }, this.rules[25].opcodes[4] = {
                    type: 4,
                    index: 28
                }, this.rules[25].opcodes[5] = {
                    type: 4,
                    index: 26
                }, this.rules[26].opcodes = [], this.rules[26].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[26].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4, 5]
                }, this.rules[26].opcodes[2] = {
                    type: 5,
                    min: 33,
                    max: 40
                }, this.rules[26].opcodes[3] = {
                    type: 5,
                    min: 42,
                    max: 46
                }, this.rules[26].opcodes[4] = {
                    type: 5,
                    min: 48,
                    max: 92
                }, this.rules[26].opcodes[5] = {
                    type: 5,
                    min: 94,
                    max: 126
                }, this.rules[27].opcodes = [], this.rules[27].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[27].opcodes[1] = {
                    type: 6,
                    string: [91]
                }, this.rules[27].opcodes[2] = {
                    type: 4,
                    index: 89
                }, this.rules[28].opcodes = [], this.rules[28].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[28].opcodes[1] = {
                    type: 4,
                    index: 89
                }, this.rules[28].opcodes[2] = {
                    type: 6,
                    string: [93]
                }, this.rules[29].opcodes = [], this.rules[29].opcodes[0] = {
                    type: 4,
                    index: 88
                }, this.rules[30].opcodes = [], this.rules[30].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 4]
                }, this.rules[30].opcodes[1] = {
                    type: 6,
                    string: [92]
                }, this.rules[30].opcodes[2] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[30].opcodes[3] = {
                    type: 4,
                    index: 31
                }, this.rules[30].opcodes[4] = {
                    type: 4,
                    index: 36
                }, this.rules[31].opcodes = [], this.rules[31].opcodes[0] = {
                    type: 1,
                    children: [1, 7, 13, 19]
                }, this.rules[31].opcodes[1] = {
                    type: 2,
                    children: [2, 3]
                }, this.rules[31].opcodes[2] = {
                    type: 4,
                    index: 32
                }, this.rules[31].opcodes[3] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[31].opcodes[4] = {
                    type: 1,
                    children: [5, 6]
                }, this.rules[31].opcodes[5] = {
                    type: 4,
                    index: 34
                }, this.rules[31].opcodes[6] = {
                    type: 4,
                    index: 35
                }, this.rules[31].opcodes[7] = {
                    type: 2,
                    children: [8, 9]
                }, this.rules[31].opcodes[8] = {
                    type: 4,
                    index: 33
                }, this.rules[31].opcodes[9] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[31].opcodes[10] = {
                    type: 1,
                    children: [11, 12]
                }, this.rules[31].opcodes[11] = {
                    type: 4,
                    index: 34
                }, this.rules[31].opcodes[12] = {
                    type: 4,
                    index: 35
                }, this.rules[31].opcodes[13] = {
                    type: 2,
                    children: [14, 15]
                }, this.rules[31].opcodes[14] = {
                    type: 4,
                    index: 34
                }, this.rules[31].opcodes[15] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[31].opcodes[16] = {
                    type: 1,
                    children: [17, 18]
                }, this.rules[31].opcodes[17] = {
                    type: 4,
                    index: 32
                }, this.rules[31].opcodes[18] = {
                    type: 4,
                    index: 33
                }, this.rules[31].opcodes[19] = {
                    type: 2,
                    children: [20, 21]
                }, this.rules[31].opcodes[20] = {
                    type: 4,
                    index: 35
                }, this.rules[31].opcodes[21] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[31].opcodes[22] = {
                    type: 1,
                    children: [23, 24]
                }, this.rules[31].opcodes[23] = {
                    type: 4,
                    index: 32
                }, this.rules[31].opcodes[24] = {
                    type: 4,
                    index: 33
                }, this.rules[32].opcodes = [], this.rules[32].opcodes[0] = {
                    type: 6,
                    string: [37, 115]
                }, this.rules[33].opcodes = [], this.rules[33].opcodes[0] = {
                    type: 6,
                    string: [37, 105]
                }, this.rules[34].opcodes = [], this.rules[34].opcodes[0] = {
                    type: 6,
                    string: [37, 117]
                }, this.rules[35].opcodes = [], this.rules[35].opcodes[0] = {
                    type: 6,
                    string: [37, 112]
                }, this.rules[36].opcodes = [], this.rules[36].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3]
                }, this.rules[36].opcodes[1] = {
                    type: 4,
                    index: 38
                }, this.rules[36].opcodes[2] = {
                    type: 4,
                    index: 39
                }, this.rules[36].opcodes[3] = {
                    type: 4,
                    index: 37
                }, this.rules[37].opcodes = [], this.rules[37].opcodes[0] = {
                    type: 4,
                    index: 88
                }, this.rules[38].opcodes = [], this.rules[38].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[38].opcodes[1] = {
                    type: 6,
                    string: [117, 95]
                }, this.rules[38].opcodes[2] = {
                    type: 4,
                    index: 88
                }, this.rules[39].opcodes = [], this.rules[39].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[39].opcodes[1] = {
                    type: 6,
                    string: [101, 95]
                }, this.rules[39].opcodes[2] = {
                    type: 4,
                    index: 88
                }, this.rules[40].opcodes = [], this.rules[40].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[40].opcodes[1] = {
                    type: 4,
                    index: 42
                }, this.rules[40].opcodes[2] = {
                    type: 4,
                    index: 41
                }, this.rules[41].opcodes = [], this.rules[41].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[41].opcodes[1] = {
                    type: 6,
                    string: [117, 95]
                }, this.rules[41].opcodes[2] = {
                    type: 4,
                    index: 88
                }, this.rules[42].opcodes = [], this.rules[42].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[42].opcodes[1] = {
                    type: 6,
                    string: [101, 95]
                }, this.rules[42].opcodes[2] = {
                    type: 4,
                    index: 88
                }, this.rules[43].opcodes = [], this.rules[43].opcodes[0] = {
                    type: 1,
                    children: [1, 5, 8, 11, 12]
                }, this.rules[43].opcodes[1] = {
                    type: 2,
                    children: [2, 3, 4]
                }, this.rules[43].opcodes[2] = {
                    type: 4,
                    index: 69
                }, this.rules[43].opcodes[3] = {
                    type: 4,
                    index: 46
                }, this.rules[43].opcodes[4] = {
                    type: 4,
                    index: 71
                }, this.rules[43].opcodes[5] = {
                    type: 2,
                    children: [6, 7]
                }, this.rules[43].opcodes[6] = {
                    type: 4,
                    index: 69
                }, this.rules[43].opcodes[7] = {
                    type: 4,
                    index: 46
                }, this.rules[43].opcodes[8] = {
                    type: 2,
                    children: [9, 10]
                }, this.rules[43].opcodes[9] = {
                    type: 4,
                    index: 46
                }, this.rules[43].opcodes[10] = {
                    type: 4,
                    index: 71
                }, this.rules[43].opcodes[11] = {
                    type: 4,
                    index: 46
                }, this.rules[43].opcodes[12] = {
                    type: 4,
                    index: 70
                }, this.rules[44].opcodes = [], this.rules[44].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[44].opcodes[1] = {
                    type: 6,
                    string: [47]
                }, this.rules[44].opcodes[2] = {
                    type: 4,
                    index: 89
                }, this.rules[45].opcodes = [], this.rules[45].opcodes[0] = {
                    type: 4,
                    index: 90
                }, this.rules[46].opcodes = [], this.rules[46].opcodes[0] = {
                    type: 6,
                    string: [42]
                }, this.rules[47].opcodes = [], this.rules[47].opcodes[0] = {
                    type: 6,
                    string: [38]
                }, this.rules[48].opcodes = [], this.rules[48].opcodes[0] = {
                    type: 6,
                    string: [33]
                }, this.rules[49].opcodes = [], this.rules[49].opcodes[0] = {
                    type: 6,
                    string: [38, 38]
                }, this.rules[50].opcodes = [], this.rules[50].opcodes[0] = {
                    type: 6,
                    string: [33, 33]
                }, this.rules[51].opcodes = [], this.rules[51].opcodes[0] = {
                    type: 6,
                    string: [37, 94]
                }, this.rules[52].opcodes = [], this.rules[52].opcodes[0] = {
                    type: 6,
                    string: [37, 36]
                }, this.rules[53].opcodes = [], this.rules[53].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[53].opcodes[1] = {
                    type: 6,
                    string: [37]
                }, this.rules[53].opcodes[2] = {
                    type: 1,
                    children: [3, 8, 13]
                }, this.rules[53].opcodes[3] = {
                    type: 2,
                    children: [4, 5, 6, 7]
                }, this.rules[53].opcodes[4] = {
                    type: 4,
                    index: 76
                }, this.rules[53].opcodes[5] = {
                    type: 4,
                    index: 79
                }, this.rules[53].opcodes[6] = {
                    type: 6,
                    string: [45]
                }, this.rules[53].opcodes[7] = {
                    type: 4,
                    index: 80
                }, this.rules[53].opcodes[8] = {
                    type: 2,
                    children: [9, 10, 11, 12]
                }, this.rules[53].opcodes[9] = {
                    type: 4,
                    index: 77
                }, this.rules[53].opcodes[10] = {
                    type: 4,
                    index: 83
                }, this.rules[53].opcodes[11] = {
                    type: 6,
                    string: [45]
                }, this.rules[53].opcodes[12] = {
                    type: 4,
                    index: 84
                }, this.rules[53].opcodes[13] = {
                    type: 2,
                    children: [14, 15, 16, 17]
                }, this.rules[53].opcodes[14] = {
                    type: 4,
                    index: 78
                }, this.rules[53].opcodes[15] = {
                    type: 4,
                    index: 81
                }, this.rules[53].opcodes[16] = {
                    type: 6,
                    string: [45]
                }, this.rules[53].opcodes[17] = {
                    type: 4,
                    index: 82
                }, this.rules[54].opcodes = [], this.rules[54].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[54].opcodes[1] = {
                    type: 6,
                    string: [37]
                }, this.rules[54].opcodes[2] = {
                    type: 1,
                    children: [3, 10, 17]
                }, this.rules[54].opcodes[3] = {
                    type: 2,
                    children: [4, 5, 6]
                }, this.rules[54].opcodes[4] = {
                    type: 4,
                    index: 76
                }, this.rules[54].opcodes[5] = {
                    type: 4,
                    index: 73
                }, this.rules[54].opcodes[6] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[54].opcodes[7] = {
                    type: 2,
                    children: [8, 9]
                }, this.rules[54].opcodes[8] = {
                    type: 6,
                    string: [46]
                }, this.rules[54].opcodes[9] = {
                    type: 4,
                    index: 73
                }, this.rules[54].opcodes[10] = {
                    type: 2,
                    children: [11, 12, 13]
                }, this.rules[54].opcodes[11] = {
                    type: 4,
                    index: 77
                }, this.rules[54].opcodes[12] = {
                    type: 4,
                    index: 74
                }, this.rules[54].opcodes[13] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[54].opcodes[14] = {
                    type: 2,
                    children: [15, 16]
                }, this.rules[54].opcodes[15] = {
                    type: 6,
                    string: [46]
                }, this.rules[54].opcodes[16] = {
                    type: 4,
                    index: 74
                }, this.rules[54].opcodes[17] = {
                    type: 2,
                    children: [18, 19, 20]
                }, this.rules[54].opcodes[18] = {
                    type: 4,
                    index: 78
                }, this.rules[54].opcodes[19] = {
                    type: 4,
                    index: 75
                }, this.rules[54].opcodes[20] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[54].opcodes[21] = {
                    type: 2,
                    children: [22, 23]
                }, this.rules[54].opcodes[22] = {
                    type: 6,
                    string: [46]
                }, this.rules[54].opcodes[23] = {
                    type: 4,
                    index: 75
                }, this.rules[55].opcodes = [], this.rules[55].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3, 4]
                }, this.rules[55].opcodes[1] = {
                    type: 4,
                    index: 56
                }, this.rules[55].opcodes[2] = {
                    type: 4,
                    index: 57
                }, this.rules[55].opcodes[3] = {
                    type: 4,
                    index: 59
                }, this.rules[55].opcodes[4] = {
                    type: 4,
                    index: 58
                }, this.rules[56].opcodes = [], this.rules[56].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[56].opcodes[1] = {
                    type: 1,
                    children: [2, 3]
                }, this.rules[56].opcodes[2] = {
                    type: 7,
                    string: [37, 105]
                }, this.rules[56].opcodes[3] = {
                    type: 7,
                    string: [37, 115]
                }, this.rules[57].opcodes = [], this.rules[57].opcodes[0] = {
                    type: 6,
                    string: [34]
                }, this.rules[58].opcodes = [], this.rules[58].opcodes[0] = {
                    type: 6,
                    string: [34]
                }, this.rules[59].opcodes = [], this.rules[59].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[59].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[59].opcodes[2] = {
                    type: 5,
                    min: 32,
                    max: 33
                }, this.rules[59].opcodes[3] = {
                    type: 5,
                    min: 35,
                    max: 126
                }, this.rules[59].opcodes[4] = {
                    type: 4,
                    index: 60
                }, this.rules[60].opcodes = [], this.rules[60].opcodes[0] = {
                    type: 6,
                    string: [9]
                }, this.rules[61].opcodes = [], this.rules[61].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3]
                }, this.rules[61].opcodes[1] = {
                    type: 4,
                    index: 62
                }, this.rules[61].opcodes[2] = {
                    type: 4,
                    index: 64
                }, this.rules[61].opcodes[3] = {
                    type: 4,
                    index: 63
                }, this.rules[62].opcodes = [], this.rules[62].opcodes[0] = {
                    type: 6,
                    string: [39]
                }, this.rules[63].opcodes = [], this.rules[63].opcodes[0] = {
                    type: 6,
                    string: [39]
                }, this.rules[64].opcodes = [], this.rules[64].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[64].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[64].opcodes[2] = {
                    type: 5,
                    min: 32,
                    max: 38
                }, this.rules[64].opcodes[3] = {
                    type: 5,
                    min: 40,
                    max: 126
                }, this.rules[64].opcodes[4] = {
                    type: 4,
                    index: 60
                }, this.rules[65].opcodes = [], this.rules[65].opcodes[0] = {
                    type: 2,
                    children: [1, 2, 3]
                }, this.rules[65].opcodes[1] = {
                    type: 4,
                    index: 66
                }, this.rules[65].opcodes[2] = {
                    type: 4,
                    index: 67
                }, this.rules[65].opcodes[3] = {
                    type: 4,
                    index: 68
                }, this.rules[66].opcodes = [], this.rules[66].opcodes[0] = {
                    type: 6,
                    string: [60]
                }, this.rules[67].opcodes = [], this.rules[67].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[67].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[67].opcodes[2] = {
                    type: 5,
                    min: 32,
                    max: 61
                }, this.rules[67].opcodes[3] = {
                    type: 5,
                    min: 63,
                    max: 126
                }, this.rules[67].opcodes[4] = {
                    type: 4,
                    index: 60
                }, this.rules[68].opcodes = [], this.rules[68].opcodes[0] = {
                    type: 6,
                    string: [62]
                }, this.rules[69].opcodes = [], this.rules[69].opcodes[0] = {
                    type: 4,
                    index: 72
                }, this.rules[70].opcodes = [], this.rules[70].opcodes[0] = {
                    type: 4,
                    index: 72
                }, this.rules[71].opcodes = [], this.rules[71].opcodes[0] = {
                    type: 4,
                    index: 72
                }, this.rules[72].opcodes = [], this.rules[72].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[72].opcodes[1] = {
                    type: 5,
                    min: 48,
                    max: 57
                }, this.rules[73].opcodes = [], this.rules[73].opcodes[0] = {
                    type: 4,
                    index: 85
                }, this.rules[74].opcodes = [], this.rules[74].opcodes[0] = {
                    type: 4,
                    index: 87
                }, this.rules[75].opcodes = [], this.rules[75].opcodes[0] = {
                    type: 4,
                    index: 86
                }, this.rules[76].opcodes = [], this.rules[76].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[76].opcodes[1] = {
                    type: 6,
                    string: [68]
                }, this.rules[76].opcodes[2] = {
                    type: 6,
                    string: [100]
                }, this.rules[77].opcodes = [], this.rules[77].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[77].opcodes[1] = {
                    type: 6,
                    string: [88]
                }, this.rules[77].opcodes[2] = {
                    type: 6,
                    string: [120]
                }, this.rules[78].opcodes = [], this.rules[78].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[78].opcodes[1] = {
                    type: 6,
                    string: [66]
                }, this.rules[78].opcodes[2] = {
                    type: 6,
                    string: [98]
                }, this.rules[79].opcodes = [], this.rules[79].opcodes[0] = {
                    type: 4,
                    index: 85
                }, this.rules[80].opcodes = [], this.rules[80].opcodes[0] = {
                    type: 4,
                    index: 85
                }, this.rules[81].opcodes = [], this.rules[81].opcodes[0] = {
                    type: 4,
                    index: 86
                }, this.rules[82].opcodes = [], this.rules[82].opcodes[0] = {
                    type: 4,
                    index: 86
                }, this.rules[83].opcodes = [], this.rules[83].opcodes[0] = {
                    type: 4,
                    index: 87
                }, this.rules[84].opcodes = [], this.rules[84].opcodes[0] = {
                    type: 4,
                    index: 87
                }, this.rules[85].opcodes = [], this.rules[85].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[85].opcodes[1] = {
                    type: 5,
                    min: 48,
                    max: 57
                }, this.rules[86].opcodes = [], this.rules[86].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[86].opcodes[1] = {
                    type: 5,
                    min: 48,
                    max: 49
                }, this.rules[87].opcodes = [], this.rules[87].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[87].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[87].opcodes[2] = {
                    type: 5,
                    min: 48,
                    max: 57
                }, this.rules[87].opcodes[3] = {
                    type: 5,
                    min: 65,
                    max: 70
                }, this.rules[87].opcodes[4] = {
                    type: 5,
                    min: 97,
                    max: 102
                }, this.rules[88].opcodes = [], this.rules[88].opcodes[0] = {
                    type: 2,
                    children: [1, 4]
                }, this.rules[88].opcodes[1] = {
                    type: 1,
                    children: [2, 3]
                }, this.rules[88].opcodes[2] = {
                    type: 5,
                    min: 97,
                    max: 122
                }, this.rules[88].opcodes[3] = {
                    type: 5,
                    min: 65,
                    max: 90
                }, this.rules[88].opcodes[4] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[88].opcodes[5] = {
                    type: 1,
                    children: [6, 7, 8, 9]
                }, this.rules[88].opcodes[6] = {
                    type: 5,
                    min: 97,
                    max: 122
                }, this.rules[88].opcodes[7] = {
                    type: 5,
                    min: 65,
                    max: 90
                }, this.rules[88].opcodes[8] = {
                    type: 5,
                    min: 48,
                    max: 57
                }, this.rules[88].opcodes[9] = {
                    type: 6,
                    string: [45]
                }, this.rules[89].opcodes = [], this.rules[89].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[89].opcodes[1] = {
                    type: 4,
                    index: 91
                }, this.rules[90].opcodes = [], this.rules[90].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[90].opcodes[1] = {
                    type: 4,
                    index: 91
                }, this.rules[91].opcodes = [], this.rules[91].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3, 4]
                }, this.rules[91].opcodes[1] = {
                    type: 6,
                    string: [32]
                }, this.rules[91].opcodes[2] = {
                    type: 6,
                    string: [9]
                }, this.rules[91].opcodes[3] = {
                    type: 4,
                    index: 92
                }, this.rules[91].opcodes[4] = {
                    type: 4,
                    index: 94
                }, this.rules[92].opcodes = [], this.rules[92].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[92].opcodes[1] = {
                    type: 6,
                    string: [59]
                }, this.rules[92].opcodes[2] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[92].opcodes[3] = {
                    type: 1,
                    children: [4, 5]
                }, this.rules[92].opcodes[4] = {
                    type: 5,
                    min: 32,
                    max: 126
                }, this.rules[92].opcodes[5] = {
                    type: 6,
                    string: [9]
                }, this.rules[93].opcodes = [], this.rules[93].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3]
                }, this.rules[93].opcodes[1] = {
                    type: 6,
                    string: [13, 10]
                }, this.rules[93].opcodes[2] = {
                    type: 6,
                    string: [10]
                }, this.rules[93].opcodes[3] = {
                    type: 6,
                    string: [13]
                }, this.rules[94].opcodes = [], this.rules[94].opcodes[0] = {
                    type: 2,
                    children: [1, 5]
                }, this.rules[94].opcodes[1] = {
                    type: 1,
                    children: [2, 3, 4]
                }, this.rules[94].opcodes[2] = {
                    type: 6,
                    string: [13, 10]
                }, this.rules[94].opcodes[3] = {
                    type: 6,
                    string: [10]
                }, this.rules[94].opcodes[4] = {
                    type: 6,
                    string: [13]
                }, this.rules[94].opcodes[5] = {
                    type: 1,
                    children: [6, 7]
                }, this.rules[94].opcodes[6] = {
                    type: 6,
                    string: [32]
                }, this.rules[94].opcodes[7] = {
                    type: 6,
                    string: [9]
                }, this.toString = function() {
                    return ";\n; ABNF for JavaScript APG 2.0 SABNF\n; RFC 5234 with some restrictions and additions.\n; Updated 11/24/2015 for RFC 7405 case-sensitive literal string notation\n;  - accepts %s\"string\" as a case-sensitive string\n;  - accepts %i\"string\" as a case-insensitive string\n;  - accepts \"string\" as a case-insensitive string\n;\n; Some restrictions:\n;   1. Rules must begin at first character of each line.\n;      Indentations on first rule and rules thereafter are not allowed.\n;   2. Relaxed line endings. CRLF, LF or CR are accepted as valid line ending.\n;   3. Prose values, i.e. <prose value>, are accepted as valid grammar syntax.\n;      However, a working parser cannot be generated from them.\n;\n; Super set (SABNF) additions:\n;   1. Look-ahead (syntactic predicate) operators are accepted as element prefixes.\n;      & is the positive look-ahead operator, succeeds and backtracks if the look-ahead phrase is found\n;      ! is the negative look-ahead operator, succeeds and backtracks if the look-ahead phrase is NOT found\n;      e.g. &%d13 or &rule or !(A / B)\n;   2. User-Defined Terminals (UDT) of the form, u_name and e_name are accepted.\n;      'name' is alpha followed by alpha/num/hyphen just like a rule name.\n;      u_name may be used as an element but no rule definition is given.\n;      e.g. rule = A / u_myUdt\n;           A = \"a\"\n;      would be a valid grammar.\n;   3. Case-sensitive, single-quoted strings are accepted.\n;      e.g. 'abc' would be equivalent to %d97.98.99\n;      (kept for backward compatibility, but superseded by %s\"abc\")  \n; New 12/26/2015\n;   4. Look-behind operators are accepted as element prefixes.\n;      && is the positive look-behind operator, succeeds and backtracks if the look-behind phrase is found\n;      !! is the negative look-behind operator, succeeds and backtracks if the look-behind phrase is NOT found\n;      e.g. &&%d13 or &&rule or !!(A / B)\n;   5. Back reference operators, i.e. \\rulename, are accepted.\n;      A back reference operator acts like a TLS or TBS terminal except that the phrase it attempts\n;      to match is a phrase previously matched by the rule 'rulename'.\n;      There are two modes of previous phrase matching - the parent-frame mode and the universal mode.\n;      In universal mode, \\rulename matches the last match to 'rulename' regardless of where it was found.\n;      In parent-frame mode, \\rulename matches only the last match found on the parent's frame or parse tree level.\n;      Back reference modifiers can be used to specify case and mode.\n;      \\A defaults to case-insensitive and universal mode, e.g. \\A === \\%i%uA\n;      Modifiers %i and %s determine case-insensitive and case-sensitive mode, respectively.\n;      Modifiers %u and %p determine universal mode and parent frame mode, respectively.\n;      Case and mode modifiers can appear in any order, e.g. \\%s%pA === \\%p%sA. \n;   7. String begin anchor, ABG(%^) matches the beginning of the input string location.\n;      Returns EMPTY or NOMATCH. Never consumes any characters.\n;   8. String end anchor, AEN(%$) matches the end of the input string location.\n;      Returns EMPTY or NOMATCH. Never consumes any characters.\n;\nFile            = *(BlankLine / Rule / RuleError)\nBlankLine       = *(%d32/%d9) [comment] LineEnd\nRule            = RuleLookup owsp Alternation ((owsp LineEnd)\n                / (LineEndError LineEnd))\nRuleLookup      = RuleNameTest owsp DefinedAsTest\nRuleNameTest    = RuleName/RuleNameError\nRuleName        = alphanum\nRuleNameError   = 1*(%d33-60/%d62-126)\nDefinedAsTest   = DefinedAs / DefinedAsError\nDefinedAsError  = 1*2%d33-126\nDefinedAs       = IncAlt / Defined\nDefined         = %d61\nIncAlt          = %d61.47\nRuleError       = 1*(%d32-126 / %d9  / LineContinue) LineEnd\nLineEndError    = 1*(%d32-126 / %d9  / LineContinue)\nAlternation     = Concatenation *(owsp AltOp Concatenation)\nConcatenation   = Repetition *(CatOp Repetition)\nRepetition      = [Modifier] (Group / Option / BasicElement / BasicElementErr)\nModifier        = (Predicate [RepOp])\n                / RepOp\nPredicate       = BkaOp\n                / BknOp\n                / AndOp\n                / NotOp\nBasicElement    = UdtOp\n                / RnmOp\n                / TrgOp\n                / TbsOp\n                / TlsOp\n                / ClsOp\n                / BkrOp\n                / AbgOp\n                / AenOp\n                / ProsVal\nBasicElementErr = 1*(%d33-40/%d42-46/%d48-92/%d94-126)\nGroup           = GroupOpen  Alternation (GroupClose / GroupError)\nGroupError      = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\nGroupOpen       = %d40 owsp\nGroupClose      = owsp %d41\nOption          = OptionOpen Alternation (OptionClose / OptionError)\nOptionError     = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\nOptionOpen      = %d91 owsp\nOptionClose     = owsp %d93\nRnmOp           = alphanum\nBkrOp           = %d92 [bkrModifier] bkr-name\nbkrModifier     = (cs [um / pm]) / (ci [um / pm]) / (um [cs /ci]) / (pm [cs / ci])\ncs              = '%s'\nci              = '%i'\num              = '%u'\npm              = '%p'\nbkr-name        = uname / ename / rname\nrname           = alphanum\nuname           = %d117.95 alphanum\nename           = %d101.95 alphanum\nUdtOp           = udt-empty\n                / udt-non-empty\nudt-non-empty   = %d117.95 alphanum\nudt-empty       = %d101.95 alphanum\nRepOp           = (rep-min StarOp rep-max)\n                / (rep-min StarOp)\n                / (StarOp rep-max)\n                / StarOp\n                / rep-min-max\nAltOp           = %d47 owsp\nCatOp           = wsp\nStarOp          = %d42\nAndOp           = %d38\nNotOp           = %d33\nBkaOp           = %d38.38\nBknOp           = %d33.33\nAbgOp           = %d37.94\nAenOp           = %d37.36\nTrgOp           = %d37 ((Dec dmin %d45 dmax) / (Hex xmin %d45 xmax) / (Bin bmin %d45 bmax))\nTbsOp           = %d37 ((Dec dString *(%d46 dString)) / (Hex xString *(%d46 xString)) / (Bin bString *(%d46 bString)))\nTlsOp           = TlsCase TlsOpen TlsString TlsClose\nTlsCase         = [\"%i\" / \"%s\"]\nTlsOpen         = %d34\nTlsClose        = %d34\nTlsString       = *(%d32-33/%d35-126/StringTab)\nStringTab       = %d9\nClsOp           = ClsOpen ClsString ClsClose\nClsOpen         = %d39\nClsClose        = %d39\nClsString       = *(%d32-38/%d40-126/StringTab)\nProsVal         = ProsValOpen ProsValString ProsValClose\nProsValOpen     = %d60\nProsValString   = *(%d32-61/%d63-126/StringTab)\nProsValClose    = %d62\nrep-min         = rep-num\nrep-min-max     = rep-num\nrep-max         = rep-num\nrep-num         = 1*(%d48-57)\ndString         = dnum\nxString         = xnum\nbString         = bnum\nDec             = (%d68/%d100)\nHex             = (%d88/%d120)\nBin             = (%d66/%d98)\ndmin            = dnum\ndmax            = dnum\nbmin            = bnum\nbmax            = bnum\nxmin            = xnum\nxmax            = xnum\ndnum            = 1*(%d48-57)\nbnum            = 1*%d48-49\nxnum            = 1*(%d48-57 / %d65-70 / %d97-102)\n;\n; Basics\nalphanum        = (%d97-122/%d65-90) *(%d97-122/%d65-90/%d48-57/%d45)\nowsp            = *space\nwsp             = 1*space\nspace           = %d32\n                / %d9\n                / comment\n                / LineContinue\ncomment         = %d59 *(%d32-126 / %d9)\nLineEnd         = %d13.10\n                / %d10\n                / %d13\nLineContinue    = (%d13.10 / %d10 / %d13) (%d32 / %d9)\n"
                }
            }
        },
        67421: function(e, t, r) {
            let n = r(92242),
                i = r(80166),
                s = [];
            s.line = function(e, t, r, i, s) {
                return e === n.SEM_PRE ? (s.endLength = 0, s.textLength = 0, s.invalidCount = 0) : s.lines.push({
                    lineNo: s.lines.length,
                    beginChar: r,
                    length: i,
                    textLength: s.textLength,
                    endType: s.endType,
                    invalidChars: s.invalidCount
                }), n.SEM_OK
            }, s["line-text"] = function(e, t, r, i, s) {
                return e === n.SEM_PRE && (s.textLength = i), n.SEM_OK
            }, s["last-line"] = function(e, t, r, i, s) {
                return e === n.SEM_PRE ? (s.endLength = 0, s.textLength = 0, s.invalidCount = 0) : s.strict ? (s.lines.push({
                    lineNo: s.lines.length,
                    beginChar: r,
                    length: i,
                    textLength: i,
                    endType: "none",
                    invalidChars: s.invalidCount
                }), s.errors.push({
                    line: s.lineNo,
                    char: r + i,
                    msg: "no line end on last line - strict ABNF specifies CRLF(\\r\\n, \\x0D\\x0A)"
                })) : (t.push(10), s.lines.push({
                    lineNo: s.lines.length,
                    beginChar: r,
                    length: i + 1,
                    textLength: i,
                    endType: "LF",
                    invalidChars: s.invalidCount
                })), n.SEM_OK
            }, s.invalid = function(e, t, r, s, o) {
                return e === n.SEM_PRE && o.errors.push({
                    line: o.lineNo,
                    char: r,
                    msg: `invalid character found '\\x${i.charToHex(t[r])}'`
                }), n.SEM_OK
            }, s.end = function(e, t, r, i, s) {
                return e === n.SEM_POST && (s.lineNo += 1), n.SEM_OK
            }, s.lf = function(e, t, r, i, s) {
                return e === n.SEM_PRE && (s.endType = "LF", s.strict && s.errors.push({
                    line: s.lineNo,
                    char: r,
                    msg: "line end character LF(\\n, \\x0A) - strict ABNF specifies CRLF(\\r\\n, \\x0D\\x0A)"
                })), n.SEM_OK
            }, s.cr = function(e, t, r, i, s) {
                return e === n.SEM_PRE && (s.endType = "CR", s.strict && s.errors.push({
                    line: s.lineNo,
                    char: r,
                    msg: "line end character CR(\\r, \\x0D) - strict ABNF specifies CRLF(\\r\\n, \\x0D\\x0A)"
                })), n.SEM_OK
            }, s.crlf = function(e, t, r, i, s) {
                return e === n.SEM_PRE && (s.endType = "CRLF"), n.SEM_OK
            }, t.callbacks = s
        },
        77156: function(e) {
            e.exports = function() {
                this.grammarObject = "grammarObject", this.rules = [], this.rules[0] = {
                    name: "file",
                    lower: "file",
                    index: 0,
                    isBkr: !1
                }, this.rules[1] = {
                    name: "line",
                    lower: "line",
                    index: 1,
                    isBkr: !1
                }, this.rules[2] = {
                    name: "line-text",
                    lower: "line-text",
                    index: 2,
                    isBkr: !1
                }, this.rules[3] = {
                    name: "last-line",
                    lower: "last-line",
                    index: 3,
                    isBkr: !1
                }, this.rules[4] = {
                    name: "valid",
                    lower: "valid",
                    index: 4,
                    isBkr: !1
                }, this.rules[5] = {
                    name: "invalid",
                    lower: "invalid",
                    index: 5,
                    isBkr: !1
                }, this.rules[6] = {
                    name: "end",
                    lower: "end",
                    index: 6,
                    isBkr: !1
                }, this.rules[7] = {
                    name: "CRLF",
                    lower: "crlf",
                    index: 7,
                    isBkr: !1
                }, this.rules[8] = {
                    name: "LF",
                    lower: "lf",
                    index: 8,
                    isBkr: !1
                }, this.rules[9] = {
                    name: "CR",
                    lower: "cr",
                    index: 9,
                    isBkr: !1
                }, this.udts = [], this.rules[0].opcodes = [], this.rules[0].opcodes[0] = {
                    type: 2,
                    children: [1, 3]
                }, this.rules[0].opcodes[1] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[0].opcodes[2] = {
                    type: 4,
                    index: 1
                }, this.rules[0].opcodes[3] = {
                    type: 3,
                    min: 0,
                    max: 1
                }, this.rules[0].opcodes[4] = {
                    type: 4,
                    index: 3
                }, this.rules[1].opcodes = [], this.rules[1].opcodes[0] = {
                    type: 2,
                    children: [1, 2]
                }, this.rules[1].opcodes[1] = {
                    type: 4,
                    index: 2
                }, this.rules[1].opcodes[2] = {
                    type: 4,
                    index: 6
                }, this.rules[2].opcodes = [], this.rules[2].opcodes[0] = {
                    type: 3,
                    min: 0,
                    max: 1 / 0
                }, this.rules[2].opcodes[1] = {
                    type: 1,
                    children: [2, 3]
                }, this.rules[2].opcodes[2] = {
                    type: 4,
                    index: 4
                }, this.rules[2].opcodes[3] = {
                    type: 4,
                    index: 5
                }, this.rules[3].opcodes = [], this.rules[3].opcodes[0] = {
                    type: 3,
                    min: 1,
                    max: 1 / 0
                }, this.rules[3].opcodes[1] = {
                    type: 1,
                    children: [2, 3]
                }, this.rules[3].opcodes[2] = {
                    type: 4,
                    index: 4
                }, this.rules[3].opcodes[3] = {
                    type: 4,
                    index: 5
                }, this.rules[4].opcodes = [], this.rules[4].opcodes[0] = {
                    type: 1,
                    children: [1, 2]
                }, this.rules[4].opcodes[1] = {
                    type: 5,
                    min: 32,
                    max: 126
                }, this.rules[4].opcodes[2] = {
                    type: 6,
                    string: [9]
                }, this.rules[5].opcodes = [], this.rules[5].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3, 4]
                }, this.rules[5].opcodes[1] = {
                    type: 5,
                    min: 0,
                    max: 8
                }, this.rules[5].opcodes[2] = {
                    type: 5,
                    min: 11,
                    max: 12
                }, this.rules[5].opcodes[3] = {
                    type: 5,
                    min: 14,
                    max: 31
                }, this.rules[5].opcodes[4] = {
                    type: 5,
                    min: 127,
                    max: 4294967295
                }, this.rules[6].opcodes = [], this.rules[6].opcodes[0] = {
                    type: 1,
                    children: [1, 2, 3]
                }, this.rules[6].opcodes[1] = {
                    type: 4,
                    index: 7
                }, this.rules[6].opcodes[2] = {
                    type: 4,
                    index: 8
                }, this.rules[6].opcodes[3] = {
                    type: 4,
                    index: 9
                }, this.rules[7].opcodes = [], this.rules[7].opcodes[0] = {
                    type: 6,
                    string: [13, 10]
                }, this.rules[8].opcodes = [], this.rules[8].opcodes[0] = {
                    type: 6,
                    string: [10]
                }, this.rules[9].opcodes = [], this.rules[9].opcodes[0] = {
                    type: 6,
                    string: [13]
                }, this.toString = function() {
                    return "file = *line [last-line]\nline = line-text end\nline-text = *(valid/invalid)\nlast-line = 1*(valid/invalid)\nvalid = %d32-126 / %d9\ninvalid = %d0-8 / %d11-12 /%d14-31 / %x7f-ffffffff\nend = CRLF / LF / CR\nCRLF = %d13.10\nLF = %d10\nCR = %d13\n"
                }
            }
        },
        61537: function(e, t, r) {
            e.exports = function(e, t, n, i) {
                let s = r(24153),
                    o = new(r(77156)),
                    {
                        callbacks: a
                    } = r(67421),
                    l = [],
                    u = new s.parser;
                if (u.ast = new s.ast, u.ast.callbacks = a, i) {
                    if ("traceObject" !== i.traceObject) throw TypeError("scanner.js: trace argument is not a trace object");
                    u.trace = i
                }
                let c = u.parse(o, "file", e);
                if (!0 !== c.success) {
                    t.push({
                        line: 0,
                        char: 0,
                        msg: "syntax analysis error analyzing input SABNF grammar"
                    });
                    return
                }
                return u.ast.translate({
                    lines: l,
                    lineNo: 0,
                    errors: t,
                    strict: !!n
                }), l
            }
        },
        81089: function(e, t, r) {
            e.exports = function() {
                let e = r(24153),
                    t = e.ids,
                    n = function() {
                        this.names = [], this.add = function(e) {
                            let t = -1,
                                r = this.get(e);
                            return -1 === r && (t = {
                                name: e,
                                lower: e.toLowerCase(),
                                index: this.names.length
                            }, this.names.push(t)), t
                        }, this.get = function(e) {
                            let t = -1,
                                r = e.toLowerCase();
                            for (let e = 0; e < this.names.length; e += 1)
                                if (this.names[e].lower === r) {
                                    t = this.names[e];
                                    break
                                }
                            return t
                        }
                    },
                    i = function(e, t, r) {
                        let n = 0;
                        for (let i = t; i < t + r; i += 1) n = 10 * n + e[i] - 48;
                        return n
                    },
                    s = function(e, t, r) {
                        let n = 0;
                        for (let i = t; i < t + r; i += 1) n = 2 * n + e[i] - 48;
                        return n
                    },
                    o = function(e, t, r) {
                        let n = 0;
                        for (let i = t; i < t + r; i += 1) {
                            let t = e[i];
                            if (t >= 48 && t <= 57) t -= 48;
                            else if (t >= 65 && t <= 70) t -= 55;
                            else if (t >= 97 && t <= 102) t -= 87;
                            else throw Error("hexnum out of range");
                            n = 16 * n + t
                        }
                        return n
                    };
                this.callbacks = [], this.callbacks.abgop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.ABG
                    }), o
                }, this.callbacks.aenop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.AEN
                    }), o
                }, this.callbacks.alternation = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    if (e === t.SEM_PRE)
                        for (;;) {
                            if (null === s.definedas) {
                                o = t.SEM_SKIP;
                                break
                            }
                            if (null === s.topStack) {
                                if ("=" === s.definedas) {
                                    s.topStack = {
                                        alt: {
                                            type: t.ALT,
                                            children: []
                                        },
                                        cat: null
                                    }, s.altStack.push(s.topStack), s.opcodes.push(s.topStack.alt);
                                    break
                                }
                                s.topStack = {
                                    alt: s.opcodes[0],
                                    cat: null
                                }, s.altStack.push(s.topStack);
                                break
                            }
                            s.topStack = {
                                alt: {
                                    type: t.ALT,
                                    children: []
                                },
                                cat: null
                            }, s.altStack.push(s.topStack), s.opcodes.push(s.topStack.alt);
                            break
                        } else e === t.SEM_POST && (s.altStack.pop(), s.altStack.length > 0 ? s.topStack = s.altStack[s.altStack.length - 1] : s.topStack = null);
                    return o
                }, this.callbacks.andop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.AND
                    }), o
                }, this.callbacks.bmax = function(e, r, n, i, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.max = s(r, n, i)), a
                }, this.callbacks.bmin = function(e, r, n, i, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.min = s(r, n, i)), a
                }, this.callbacks.bkaop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.BKA
                    }), o
                }, this.callbacks.bknop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.BKN
                    }), o
                }, this.callbacks.bkrop = function(r, n, i, s, o) {
                    let a = t.SEM_OK;
                    return r === t.SEM_PRE ? (o.ci = !0, o.cs = !1, o.um = !0, o.pm = !1) : r === t.SEM_POST && o.opcodes.push({
                        type: t.BKR,
                        bkrCase: !0 === o.cs ? t.BKR_MODE_CS : t.BKR_MODE_CI,
                        bkrMode: !0 === o.pm ? t.BKR_MODE_PM : t.BKR_MODE_UM,
                        index: {
                            phraseIndex: o.bkrname.phraseIndex,
                            name: e.utils.charsToString(n, o.bkrname.phraseIndex, o.bkrname.phraseLength)
                        }
                    }), a
                }, this.callbacks["bkr-name"] = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.bkrname = {
                        phraseIndex: n,
                        phraseLength: i
                    }), o
                }, this.callbacks.bstring = function(e, r, n, i, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && o.tbsstr.push(s(r, n, i)), a
                }, this.callbacks.clsop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (i <= 2 ? s.opcodes.push({
                        type: t.TLS,
                        string: []
                    }) : s.opcodes.push({
                        type: t.TBS,
                        string: r.slice(n + 1, n + i - 1)
                    })), o
                }, this.callbacks.ci = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.ci = !0), o
                }, this.callbacks.cs = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.cs = !0), o
                }, this.callbacks.um = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.um = !0), o
                }, this.callbacks.pm = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.pm = !0), o
                }, this.callbacks.concatenation = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE ? (s.topStack.alt.children.push(s.opcodes.length), s.topStack.cat = {
                        type: t.CAT,
                        children: []
                    }, s.opcodes.push(s.topStack.cat)) : e === t.SEM_POST && (s.topStack.cat = null), o
                }, this.callbacks.defined = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.definedas = "="), o
                }, this.callbacks.dmax = function(e, r, n, s, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.max = i(r, n, s)), a
                }, this.callbacks.dmin = function(e, r, n, s, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.min = i(r, n, s)), a
                }, this.callbacks.dstring = function(e, r, n, s, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && o.tbsstr.push(i(r, n, s)), a
                }, this.callbacks.file = function(e, r, i, s, o) {
                    let a = t.SEM_OK;
                    if (e === t.SEM_PRE) o.ruleNames = new n, o.udtNames = new n, o.rules = [], o.udts = [], o.rulesLineMap = [], o.opcodes = [], o.altStack = [], o.topStack = null, o.topRule = null;
                    else if (e === t.SEM_POST) {
                        let e;
                        o.rules.forEach(r => {
                            r.isBkr = !1, r.opcodes.forEach(r => {
                                r.type === t.RNM && (-1 === (e = o.ruleNames.get(r.index.name)) ? (o.errors.push({
                                    line: o.findLine(o.lines, r.index.phraseIndex, o.charsLength),
                                    char: r.index.phraseIndex,
                                    msg: `Rule name '${r.index.name}' used but not defined.`
                                }), r.index = -1) : r.index = e.index)
                            })
                        }), o.udts.forEach(e => {
                            e.isBkr = !1
                        }), o.rules.forEach(r => {
                            r.opcodes.forEach(n => {
                                n.type === t.BKR && (r.hasBkr = !0, -1 !== (e = o.ruleNames.get(n.index.name)) ? (o.rules[e.index].isBkr = !0, n.index = e.index) : -1 !== (e = o.udtNames.get(n.index.name)) ? (o.udts[e.index].isBkr = !0, n.index = o.rules.length + e.index) : (o.errors.push({
                                    line: o.findLine(o.lines, n.index.phraseIndex, o.charsLength),
                                    char: n.index.phraseIndex,
                                    msg: `Back reference name '${n.index.name}' refers to undefined rule or unamed UDT.`
                                }), n.index = -1))
                            })
                        })
                    }
                    return a
                }, this.callbacks.incalt = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && (s.definedas = "=/"), o
                }, this.callbacks.notop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.NOT
                    }), o
                }, this.callbacks.optionopen = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && s.opcodes.push({
                        type: t.REP,
                        min: 0,
                        max: 1,
                        char: n
                    }), o
                }, this.callbacks["rep-max"] = function(e, r, n, s, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.max = i(r, n, s)), a
                }, this.callbacks["rep-min"] = function(e, r, n, s, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.min = i(r, n, s)), a
                }, this.callbacks["rep-min-max"] = function(e, r, n, s, o) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (o.max = i(r, n, s), o.min = o.max), a
                }, this.callbacks.repetition = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE && s.topStack.cat.children.push(s.opcodes.length), o
                }, this.callbacks.repop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE ? (s.min = 0, s.max = 1 / 0, s.topRep = {
                        type: t.REP,
                        min: 0,
                        max: 1 / 0
                    }, s.opcodes.push(s.topRep)) : e === t.SEM_POST && (s.min > s.max && s.errors.push({
                        line: s.findLine(s.lines, n, s.charsLength),
                        char: n,
                        msg: `repetition min cannot be greater than max: min: ${s.min}: max: ${s.max}`
                    }), s.topRep.min = s.min, s.topRep.max = s.max), o
                }, this.callbacks.rnmop = function(r, n, i, s, o) {
                    let a = t.SEM_OK;
                    return r === t.SEM_POST && o.opcodes.push({
                        type: t.RNM,
                        index: {
                            phraseIndex: i,
                            name: e.utils.charsToString(n, i, s)
                        }
                    }), a
                }, this.callbacks.rule = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE && (s.altStack.length = 0, s.topStack = null, s.rulesLineMap.push({
                        line: s.findLine(s.lines, n, s.charsLength),
                        char: n
                    })), o
                }, this.callbacks.rulelookup = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    if (e === t.SEM_PRE) s.ruleName = "", s.definedas = "";
                    else if (e === t.SEM_POST) {
                        let e;
                        "=" === s.definedas ? -1 === (e = s.ruleNames.add(s.ruleName)) ? (s.definedas = null, s.errors.push({
                            line: s.findLine(s.lines, n, s.charsLength),
                            char: n,
                            msg: `Rule name '${s.ruleName}' previously defined.`
                        })) : (s.topRule = {
                            name: e.name,
                            lower: e.lower,
                            opcodes: [],
                            index: e.index
                        }, s.rules.push(s.topRule), s.opcodes = s.topRule.opcodes) : -1 === (e = s.ruleNames.get(s.ruleName)) ? (s.definedas = null, s.errors.push({
                            line: s.findLine(s.lines, n, s.charsLength),
                            char: n,
                            msg: `Rule name '${s.ruleName}' for incremental alternate not previously defined.`
                        })) : (s.topRule = s.rules[e.index], s.opcodes = s.topRule.opcodes)
                    }
                    return o
                }, this.callbacks.rulename = function(r, n, i, s, o) {
                    let a = t.SEM_OK;
                    return r === t.SEM_PRE && (o.ruleName = e.utils.charsToString(n, i, s)), a
                }, this.callbacks.tbsop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE ? s.tbsstr = [] : e === t.SEM_POST && s.opcodes.push({
                        type: t.TBS,
                        string: s.tbsstr
                    }), o
                }, this.callbacks.tlscase = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_POST && i > 0 && (83 === r[n + 1] || 115 === r[n + 1]) && (s.tlscase = !1), o
                }, this.callbacks.tlsstring = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    if (e === t.SEM_POST) {
                        if (s.tlscase) {
                            let e = r.slice(n, n + i);
                            for (let t = 0; t < e.length; t += 1) e[t] >= 65 && e[t] <= 90 && (e[t] += 32);
                            s.opcodes.push({
                                type: t.TLS,
                                string: e
                            })
                        } else s.opcodes.push({
                            type: t.TBS,
                            string: r.slice(n, n + i)
                        })
                    }
                    return o
                }, this.callbacks.tlsop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE && (s.tlscase = !0), o
                }, this.callbacks.trgop = function(e, r, n, i, s) {
                    let o = t.SEM_OK;
                    return e === t.SEM_PRE ? (s.min = 0, s.max = 0) : e === t.SEM_POST && (s.min > s.max && s.errors.push({
                        line: s.findLine(s.lines, n, s.charsLength),
                        char: n,
                        msg: `TRG, (%dmin-max), min cannot be greater than max: min: ${s.min}: max: ${s.max}`
                    }), s.opcodes.push({
                        type: t.TRG,
                        min: s.min,
                        max: s.max
                    })), o
                }, this.callbacks["udt-empty"] = function(r, n, i, s, o) {
                    let a = t.SEM_OK;
                    if (r === t.SEM_POST) {
                        let r = e.utils.charsToString(n, i, s),
                            a = o.udtNames.add(r);
                        if (-1 === a) {
                            if (-1 === (a = o.udtNames.get(r))) throw Error("semUdtEmpty: name look up error")
                        } else o.udts.push({
                            name: a.name,
                            lower: a.lower,
                            index: a.index,
                            empty: !0
                        });
                        o.opcodes.push({
                            type: t.UDT,
                            empty: !0,
                            index: a.index
                        })
                    }
                    return a
                }, this.callbacks["udt-non-empty"] = function(r, n, i, s, o) {
                    let a = t.SEM_OK;
                    if (r === t.SEM_POST) {
                        let r = e.utils.charsToString(n, i, s),
                            a = o.udtNames.add(r);
                        if (-1 === a) {
                            if (-1 === (a = o.udtNames.get(r))) throw Error("semUdtNonEmpty: name look up error")
                        } else o.udts.push({
                            name: a.name,
                            lower: a.lower,
                            index: a.index,
                            empty: !1
                        });
                        o.opcodes.push({
                            type: t.UDT,
                            empty: !1,
                            index: a.index,
                            syntax: null,
                            semantic: null
                        })
                    }
                    return a
                }, this.callbacks.xmax = function(e, r, n, i, s) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (s.max = o(r, n, i)), a
                }, this.callbacks.xmin = function(e, r, n, i, s) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && (s.min = o(r, n, i)), a
                }, this.callbacks.xstring = function(e, r, n, i, s) {
                    let a = t.SEM_OK;
                    return e === t.SEM_POST && s.tbsstr.push(o(r, n, i)), a
                }
            }
        },
        69375: function(e) {
            e.exports = function() {
                let e = "show-rules.js";
                return function(t = [], r = [], n = "index") {
                    let i;
                    let s = "showRules",
                        o = [],
                        a = [],
                        l = [],
                        u = [],
                        c = t.length,
                        d = r.length,
                        h = "RULE/UDT NAMES";
                    if (!(Array.isArray(t) && t.length)) throw Error(`${e}:${s}: rules arg must be array with length > 0`);
                    if (!Array.isArray(r)) throw Error(`${e}:${s}: udts arg must be array`);
                    for (i = 0; i < c; i += 1) l.push(i);
                    if ((o = l.slice(0)).sort(function(e, r) {
                            return t[e].lower < t[r].lower ? -1 : t[e].lower > t[r].lower ? 1 : 0
                        }), d) {
                        for (i = 0; i < d; i += 1) u.push(i);
                        (a = u.slice(0)).sort(function(e, t) {
                            return r[e].lower < r[t].lower ? -1 : r[e].lower > r[t].lower ? 1 : 0
                        })
                    }
                    if (97 === n.charCodeAt(0)) {
                        for (h += " - alphabetical by rule/UDT name\n", i = 0; i < c; i += 1) h += `${i}: ${o[i]}: ${t[o[i]].name}
`;
                        if (d)
                            for (i = 0; i < d; i += 1) h += `${i}: ${a[i]}: ${r[a[i]].name}
`
                    } else {
                        for (h += " - ordered by rule/UDT index\n", i = 0; i < c; i += 1) h += `${i}: ${t[i].name}
`;
                        if (d)
                            for (i = 0; i < d; i += 1) h += `${i}: ${r[i].name}
`
                    }
                    return h
                }
            }()
        },
        65031: function(e, t, r) {
            e.exports = function() {
                let e;
                let t = "syntax-callbacks.js: ",
                    n = r(24153),
                    i = n.ids;
                this.callbacks = [], this.callbacks.andop = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.strict && s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "AND operator(&) found - strict ABNF specified."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.basicelementerr = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            !1 === e.basicError && o.errors.push({
                                line: o.findLine(o.lines, s, o.charsLength),
                                char: s,
                                msg: "Unrecognized SABNF element."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.clsclose = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                            break;
                        case i.NOMATCH:
                            o.errors.push({
                                line: o.findLine(o.lines, e.clsOpen),
                                char: e.clsOpen,
                                msg: "Case-sensitive literal string('...') opened but not closed."
                            }), e.clsOpen = null, e.basicError = !0;
                            break;
                        case i.MATCH:
                            o.strict && o.errors.push({
                                line: o.findLine(o.lines, e.clsOpen),
                                char: e.clsOpen,
                                msg: "Case-sensitive string operator('...') found - strict ABNF specified."
                            }), e.clsOpen = null;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.clsopen = function(r, n, s) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            e.clsOpen = s;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.clsstring = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                            s.stringTabChar = !1;
                            break;
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            !1 !== s.stringTabChar && s.errors.push({
                                line: s.findLine(s.lines, s.stringTabChar),
                                char: s.stringTabChar,
                                msg: "Tab character (\\t, x09) not allowed in literal string."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.definedaserror = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Expected '=' or '=/'. Not found."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.file = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                            s.altStack = [], s.repCount = 0;
                            break;
                        case i.EMPTY:
                            s.errors.push({
                                line: 0,
                                char: 0,
                                msg: "grammar file is empty"
                            });
                            break;
                        case i.MATCH:
                            0 === s.ruleCount && s.errors.push({
                                line: 0,
                                char: 0,
                                msg: "no rules defined"
                            });
                            break;
                        case i.NOMATCH:
                            throw Error(`${t}synFile: grammar file NOMATCH: design error: should never happen.`);
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.groupclose = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                            break;
                        case i.NOMATCH:
                            o.errors.push({
                                line: o.findLine(o.lines, e.groupOpen),
                                char: e.groupOpen,
                                msg: 'Group "(...)" opened but not closed.'
                            }), (e = o.altStack.pop()).groupError = !0;
                            break;
                        case i.MATCH:
                            e = o.altStack.pop();
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.groupopen = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            e = {
                                groupOpen: s,
                                groupError: !1,
                                optionOpen: null,
                                optionError: !1,
                                tlsOpen: null,
                                clsOpen: null,
                                prosValOpen: null,
                                basicError: !1
                            }, o.altStack.push(e);
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.lineenderror = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Unrecognized grammar element or characters."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.lineend = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            if (1 === e.phraseLength && s.strict) {
                                let e = 13 === r[n] ? "CR" : "LF";
                                s.errors.push({
                                    line: s.findLine(s.lines, n, s.charsLength),
                                    char: n,
                                    msg: `Line end '${e}' found - strict ABNF specified, only CRLF allowed.`
                                })
                            }
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.notop = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.strict && s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "NOT operator(!) found - strict ABNF specified."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.optionclose = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                            break;
                        case i.NOMATCH:
                            o.errors.push({
                                line: o.findLine(o.lines, e.optionOpen),
                                char: e.optionOpen,
                                msg: 'Option "[...]" opened but not closed.'
                            }), (e = o.altStack.pop()).optionError = !0;
                            break;
                        case i.MATCH:
                            e = o.altStack.pop();
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.optionopen = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            e = {
                                groupOpen: null,
                                groupError: !1,
                                optionOpen: s,
                                optionError: !1,
                                tlsOpen: null,
                                clsOpen: null,
                                prosValOpen: null,
                                basicError: !1
                            }, o.altStack.push(e);
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.prosvalclose = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                            break;
                        case i.NOMATCH:
                            o.errors.push({
                                line: o.findLine(o.lines, e.prosValOpen),
                                char: e.prosValOpen,
                                msg: "Prose value operator(<...>) opened but not closed."
                            }), e.basicError = !0, e.prosValOpen = null;
                            break;
                        case i.MATCH:
                            o.errors.push({
                                line: o.findLine(o.lines, e.prosValOpen),
                                char: e.prosValOpen,
                                msg: "Prose value operator(<...>) found. The ABNF syntax is valid, but a parser cannot be generated from this grammar."
                            }), e.prosValOpen = null;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.prosvalopen = function(r, n, s) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            e.prosValOpen = s;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.prosvalstring = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                            s.stringTabChar = !1;
                            break;
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            !1 !== s.stringTabChar && s.errors.push({
                                line: s.findLine(s.lines, s.stringTabChar),
                                char: s.stringTabChar,
                                msg: "Tab character (\\t, x09) not allowed in prose value string."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.repetition = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                            break;
                        case i.NOMATCH:
                        case i.MATCH:
                            s.repCount += 1;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.rule = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                            o.altStack.length = 0, e = {
                                groupOpen: null,
                                groupError: !1,
                                optionOpen: null,
                                optionError: !1,
                                tlsOpen: null,
                                clsOpen: null,
                                prosValOpen: null,
                                basicError: !1
                            }, o.altStack.push(e);
                            break;
                        case i.EMPTY:
                            throw Error(`${t}synRule: EMPTY: rule cannot be empty`);
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            o.ruleCount += 1;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.ruleerror = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Unrecognized SABNF line. Invalid rule, comment or blank line."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.rulenameerror = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Rule names must be alphanum and begin with alphabetic character."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.stringtab = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.stringTabChar = n;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.tlsclose = function(r, n, s, o) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                            break;
                        case i.NOMATCH:
                            o.errors.push({
                                line: o.findLine(o.lines, e.tlsOpen),
                                char: e.tlsOpen,
                                msg: 'Case-insensitive literal string("...") opened but not closed.'
                            }), e.basicError = !0, e.tlsOpen = null;
                            break;
                        case i.MATCH:
                            e.tlsOpen = null;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.tlsopen = function(r, n, s) {
                    switch (r.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            e.tlsOpen = s;
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.tlsstring = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                            s.stringTabChar = !1;
                            break;
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            !1 !== s.stringTabChar && s.errors.push({
                                line: s.findLine(s.lines, s.stringTabChar),
                                char: s.stringTabChar,
                                msg: "Tab character (\\t, x09) not allowed in literal string (see 'quoted-string' definition, RFC 7405.)"
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.udtop = function(e, r, s, o) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            if (o.strict) {
                                let t = n.utils.charsToString(r, s, e.phraseLength);
                                o.errors.push({
                                    line: o.findLine(o.lines, s, o.charsLength),
                                    char: s,
                                    msg: `UDT operator found(${t}) - strict ABNF specified.`
                                })
                            }
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.bkaop = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.strict && s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Positive look-behind operator(&&) found - strict ABNF specified."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.bknop = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.strict && s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Negative look-behind operator(!!) found - strict ABNF specified."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.bkrop = function(e, r, s, o) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            if (o.strict) {
                                let t = n.utils.charsToString(r, s, e.phraseLength);
                                o.errors.push({
                                    line: o.findLine(o.lines, s, o.charsLength),
                                    char: s,
                                    msg: `Back reference operator(${t}) found - strict ABNF specified.`
                                })
                            }
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.abgop = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.strict && s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "Beginning of string anchor(%^) found - strict ABNF specified."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }, this.callbacks.aenop = function(e, r, n, s) {
                    switch (e.state) {
                        case i.ACTIVE:
                        case i.EMPTY:
                        case i.NOMATCH:
                            break;
                        case i.MATCH:
                            s.strict && s.errors.push({
                                line: s.findLine(s.lines, n, s.charsLength),
                                char: n,
                                msg: "End of string anchor(%$) found - strict ABNF specified."
                            });
                            break;
                        default:
                            throw Error(`${t}synFile: unrecognized case.`)
                    }
                }
            }
        },
        37033: function(e, t, r) {
            let {
                Buffer: n
            } = r(59304), i = r(66153), s = "UTF8", o = "UTF16", a = "UTF16BE", l = "UTF16LE", u = "UTF32", c = "UTF32BE", d = "UTF32LE", h = "UINT7", f = "ASCII", p = "BINARY", g = "UINT8", m = "UINT16", y = "UINT16LE", b = "UINT16BE", w = "UINT32", A = "UINT32LE", v = "UINT32BE", E = "ESCAPED", P = "STRING", S = function(e) {
                e.type = s;
                let t = e.data;
                e.bom = 0, t.length >= 3 && 239 === t[0] && 187 === t[1] && 191 === t[2] && (e.bom = 3)
            }, O = function(e) {
                let t = e.data;
                switch (e.bom = 0, e.type) {
                    case o:
                        e.type = a, t.length >= 2 && (254 === t[0] && 255 === t[1] ? e.bom = 2 : 255 === t[0] && 254 === t[1] && (e.type = l, e.bom = 2));
                        break;
                    case a:
                        if (e.type = a, t.length >= 2) {
                            if (254 === t[0] && 255 === t[1]) e.bom = 2;
                            else if (255 === t[0] && 254 === t[1]) throw TypeError(`src type: "${a}" specified but BOM is for "${l}"`)
                        }
                        break;
                    case l:
                        if (e.type = l, t.length >= 0) {
                            if (254 === t[0] && 255 === t[1]) throw TypeError(`src type: "${l}" specified but BOM is for "${a}"`);
                            255 === t[0] && 254 === t[1] && (e.bom = 2)
                        }
                        break;
                    default:
                        throw TypeError(`UTF16 BOM: src type "${e.type}" unrecognized`)
                }
            }, k = function(e) {
                let t = e.data;
                switch (e.bom = 0, e.type) {
                    case u:
                        e.type = c, t.length >= 4 && (0 === t[0] && 0 === t[1] && 254 === t[2] && 255 === t[3] && (e.bom = 4), 255 === t[0] && 254 === t[1] && 0 === t[2] && 0 === t[3] && (e.type = d, e.bom = 4));
                        break;
                    case c:
                        if (e.type = c, t.length >= 4 && (0 === t[0] && 0 === t[1] && 254 === t[2] && 255 === t[3] && (e.bom = 4), 255 === t[0] && 254 === t[1] && 0 === t[2] && 0 === t[3])) throw TypeError(`src type: ${c} specified but BOM is for ${d}"`);
                        break;
                    case d:
                        if (e.type = d, t.length >= 4) {
                            if (0 === t[0] && 0 === t[1] && 254 === t[2] && 255 === t[3]) throw TypeError(`src type: "${d}" specified but BOM is for "${c}"`);
                            255 === t[0] && 254 === t[1] && 0 === t[2] && 0 === t[3] && (e.bom = 4)
                        }
                        break;
                    default:
                        throw TypeError(`UTF32 BOM: src type "${e.type}" unrecognized`)
                }
            }, C = function(e, t) {
                let r = function(e) {
                    let t = {
                            type: "",
                            base64: !1
                        },
                        r = /^(base64:)?([a-zA-Z0-9]+)$/i.exec(e);
                    return r && (r[2] && (t.type = r[2].toUpperCase()), r[1] && (t.base64 = !0)), t
                }(e.toUpperCase());
                if (r.base64) {
                    if (r.type === P) throw TypeError(`type: "${e} "BASE64:" prefix not allowed with type ${P}`);
                    if (n.isBuffer(t)) r.data = i.base64.decode(t);
                    else if ("string" == typeof t) {
                        let e = n.from(t, "ascii");
                        r.data = i.base64.decode(e)
                    } else throw TypeError(`type: "${e} unrecognized data type: typeof(data): ${typeof t}`)
                } else r.data = t;
                switch (r.type) {
                    case s:
                        S(r);
                        break;
                    case o:
                    case a:
                    case l:
                        O(r);
                        break;
                    case u:
                    case c:
                    case d:
                        k(r);
                        break;
                    case m:
                        r.type = b;
                        break;
                    case w:
                        r.type = v;
                        break;
                    case f:
                        r.type = h;
                        break;
                    case p:
                        r.type = g;
                        break;
                    case h:
                    case g:
                    case y:
                    case b:
                    case A:
                    case v:
                    case P:
                    case E:
                        break;
                    default:
                        throw TypeError(`type: "${e}" not recognized`)
                }
                if (r.type === P) {
                    if ("string" != typeof r.data) throw TypeError(`type: "${e}" but data is not a string`)
                } else if (!n.isBuffer(r.data)) throw TypeError(`type: "${e}" but data is not a Buffer`);
                return r
            }, x = function(e, t) {
                if (!Array.isArray(t)) throw TypeError(`dst chars: not array: "${typeof t}`);
                if ("string" != typeof e) throw TypeError(`dst type: not string: "${typeof e}`);
                let r = function(e) {
                    let t, r;
                    let n = {
                        crlf: !1,
                        lf: !1,
                        base64: !1,
                        type: ""
                    };
                    for (;;) {
                        if (r = e, "CRLF:" === (t = e.slice(0, 5))) {
                            n.crlf = !0, r = e.slice(5);
                            break
                        }
                        "LF:" === (t = e.slice(0, 3)) && (n.lf = !0, r = e.slice(3));
                        break
                    }
                    return 1 === (t = r.split(":")).length ? n.type = t[0] : 2 === t.length && "BASE64" === t[1] && (n.base64 = !0, n.type = t[0]), n
                }(e.toUpperCase());
                switch (r.type) {
                    case s:
                    case a:
                    case l:
                    case c:
                    case d:
                    case h:
                    case g:
                    case y:
                    case b:
                    case A:
                    case v:
                    case E:
                        break;
                    case P:
                        if (r.base64) throw TypeError(`":BASE64" suffix not allowed with type ${P}`);
                        break;
                    case f:
                        r.type = h;
                        break;
                    case p:
                        r.type = g;
                        break;
                    case o:
                        r.type = a;
                        break;
                    case u:
                        r.type = c;
                        break;
                    case m:
                        r.type = b;
                        break;
                    case w:
                        r.type = v;
                        break;
                    default:
                        throw TypeError(`dst type unrecognized: "${e}" : must have form [crlf:|lf:]type[:base64]`)
                }
                return r
            }, T = function(e, t) {
                switch (e) {
                    case s:
                        return i.utf8.encode(t);
                    case a:
                        return i.utf16be.encode(t);
                    case l:
                        return i.utf16le.encode(t);
                    case c:
                        return i.utf32be.encode(t);
                    case d:
                        return i.utf32le.encode(t);
                    case h:
                        return i.uint7.encode(t);
                    case g:
                        return i.uint8.encode(t);
                    case b:
                        return i.uint16be.encode(t);
                    case y:
                        return i.uint16le.encode(t);
                    case v:
                        return i.uint32be.encode(t);
                    case A:
                        return i.uint32le.encode(t);
                    case P:
                        return i.string.encode(t);
                    case E:
                        return i.escaped.encode(t);
                    default:
                        throw TypeError(`encode type "${e}" not recognized`)
                }
            }, N = function(e) {
                switch (e.type) {
                    case s:
                        return i.utf8.decode(e.data, e.bom);
                    case l:
                        return i.utf16le.decode(e.data, e.bom);
                    case a:
                        return i.utf16be.decode(e.data, e.bom);
                    case c:
                        return i.utf32be.decode(e.data, e.bom);
                    case d:
                        return i.utf32le.decode(e.data, e.bom);
                    case h:
                        return i.uint7.decode(e.data);
                    case g:
                        return i.uint8.decode(e.data);
                    case b:
                        return i.uint16be.decode(e.data);
                    case y:
                        return i.uint16le.decode(e.data);
                    case v:
                        return i.uint32be.decode(e.data);
                    case A:
                        return i.uint32le.decode(e.data);
                    case P:
                        return i.string.decode(e.data);
                    case E:
                        return i.escaped.decode(e.data);
                    default:
                        throw TypeError(`decode type "${e.type}" not recognized`)
                }
            };
            t.decode = function(e, t) {
                let r = C(e, t);
                return N(r)
            }, t.encode = function(e, t) {
                let r, n;
                let s = x(e, t);
                return s.crlf ? (r = i.lineEnds.crlf(t), n = T(s.type, r)) : s.lf ? (r = i.lineEnds.lf(t), n = T(s.type, r)) : n = T(s.type, t), s.base64 && (n = i.base64.encode(n)), n
            }, t.convert = function(e, r, n) {
                return t.encode(n, t.decode(e, r))
            }
        },
        66153: function(e, t, r) {
            let {
                Buffer: n
            } = r(59304), is = [];
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split("").forEach(e => {
                s.push(e.charCodeAt(0))
            }), t.utf8 = {
                encode(e) {
                    let t = [];
                    return e.forEach(e => {
                        if (e >= 0 && e <= 127) t.push(e);
                        else if (e <= 2047) t.push(192 + (e >> 6 & 31)), t.push(128 + (63 & e));
                        else if (e < 55296 || e > 57343 && e <= 65535) t.push(224 + (e >> 12 & 15)), t.push(128 + (e >> 6 & 63)), t.push(128 + (63 & e));
                        else if (e >= 65536 && e <= 1114111) {
                            let r = e >> 16 & 31;
                            t.push(240 + (r >> 2)), t.push(128 + ((3 & r) << 4) + (e >> 12 & 15)), t.push(128 + (e >> 6 & 63)), t.push(128 + (63 & e))
                        } else throw RangeError(`utf8.encode: character out of range: char: ${e}`)
                    }), n.from(t)
                },
                decode(e, t) {
                    let r, n, i, s, o, a;
                    let l = e.length,
                        u = t ? 3 : 0,
                        c = [];
                    for (; u < l;) {
                        for (n = e[u], r = 4294967295;;) {
                            if (n >= 0 && n <= 127) {
                                r = n, a = 1;
                                break
                            }
                            if ((i = u + 1) < l && n >= 194 && n <= 223) {
                                r = function(e, t) {
                                    if ((192 & t) != 128) return 4294967293;
                                    let r = ((31 & e) << 6) + (63 & t);
                                    return r < 128 ? 4294967292 : r
                                }(n, e[i]), a = 2;
                                break
                            }
                            if ((s = u + 2) < l && n >= 224 && n <= 239) {
                                r = function(e, t, r) {
                                    if ((192 & r) != 128 || (192 & t) != 128) return 4294967293;
                                    let n = ((15 & e) << 12) + ((63 & t) << 6) + (63 & r);
                                    return n < 2048 ? 4294967292 : n >= 55296 && n <= 57343 ? 4294967294 : n
                                }(n, e[i], e[s]), a = 3;
                                break
                            }(o = u + 3) < l && n >= 240 && n <= 244 && (r = function(e, t, r, n) {
                                if ((192 & n) != 128 || (192 & r) != 128 || (192 & t) != 128) return 4294967293;
                                let i = (((7 & e) << 2) + (t >> 4 & 3) << 16) + ((15 & t) << 12) + ((63 & r) << 6) + (63 & n);
                                return i < 65536 ? 4294967292 : i > 1114111 ? 4294967294 : i
                            }(n, e[i], e[s], e[o]), a = 4);
                            break
                        }
                        if (r > 1114111) {
                            let e = `byte[${u}]`;
                            if (4294967295 === r) throw RangeError(`utf8.decode: ill-formed UTF8 byte sequence found at: ${e}`);
                            if (4294967293 === r) throw RangeError(`utf8.decode: illegal trailing byte found at: ${e}`);
                            if (4294967294 === r) throw RangeError(`utf8.decode: code point out of range found at: ${e}`);
                            if (4294967292 === r) throw RangeError(`utf8.decode: non-shortest form found at: ${e}`);
                            throw RangeError(`utf8.decode: unrecognized error found at: ${e}`)
                        }
                        c.push(r), u += a
                    }
                    return c
                }
            }, t.utf16be = {
                encode(e) {
                    let t, r, i;
                    let s = [];
                    for (let n = 0; n < e.length; n += 1)
                        if ((t = e[n]) >= 0 && t <= 55295 || t >= 57344 && t <= 65535) s.push(t >> 8 & 255), s.push(255 & t);
                        else if (t >= 65536 && t <= 1114111) r = 55296 + ((i = t - 65536) >> 10), i = 56320 + (1023 & i), s.push(r >> 8 & 255), s.push(255 & r), s.push(i >> 8 & 255), s.push(255 & i);
                    else throw RangeError(`utf16be.encode: UTF16BE value out of range: char[${n}]: ${t}`);
                    return n.from(s)
                },
                decode(e, t) {
                    let r, n, i, s, o, a;
                    if (e.length % 2 > 0) throw RangeError(`utf16be.decode: data length must be even multiple of 2: length: ${e.length}`);
                    let l = [],
                        u = e.length,
                        c = t ? 2 : 0,
                        d = 0;
                    for (; c < u;) {
                        for (;;) {
                            if ((i = c + 1) < u) {
                                if ((o = (e[c] << 8) + e[i]) < 55296 || o > 57343) {
                                    r = o, n = 2;
                                    break
                                }
                                if ((s = c + 3) < u && (a = (e[c + 2] << 8) + e[s], o <= 56319 && a >= 56320 && a <= 57343)) {
                                    r = 65536 + (o - 55296 << 10) + (a - 56320), n = 4;
                                    break
                                }
                            }
                            throw RangeError(`utf16be.decode: ill-formed UTF16BE byte sequence found: byte[${c}]`)
                        }
                        l[d++] = r, c += n
                    }
                    return l
                }
            }, t.utf16le = {
                encode(e) {
                    let t, r, i;
                    let s = [];
                    for (let n = 0; n < e.length; n += 1)
                        if ((t = e[n]) >= 0 && t <= 55295 || t >= 57344 && t <= 65535) s.push(255 & t), s.push(t >> 8 & 255);
                        else if (t >= 65536 && t <= 1114111) r = 55296 + ((i = t - 65536) >> 10), i = 56320 + (1023 & i), s.push(255 & r), s.push(r >> 8 & 255), s.push(255 & i), s.push(i >> 8 & 255);
                    else throw RangeError(`utf16le.encode: UTF16LE value out of range: char[${n}]: ${t}`);
                    return n.from(s)
                },
                decode(e, t) {
                    let r, n, i, s, o, a;
                    if (e.length % 2 > 0) throw RangeError(`utf16le.decode: data length must be even multiple of 2: length: ${e.length}`);
                    let l = [],
                        u = e.length,
                        c = t ? 2 : 0,
                        d = 0;
                    for (; c < u;) {
                        for (;;) {
                            if ((i = c + 1) < u) {
                                if ((o = (e[i] << 8) + e[c]) < 55296 || o > 57343) {
                                    r = o, n = 2;
                                    break
                                }
                                if ((s = c + 3) < u && (a = (e[s] << 8) + e[c + 2], o <= 56319 && a >= 56320 && a <= 57343)) {
                                    r = 65536 + (o - 55296 << 10) + (a - 56320), n = 4;
                                    break
                                }
                            }
                            throw RangeError(`utf16le.decode: ill-formed UTF16LE byte sequence found: byte[${c}]`)
                        }
                        l[d++] = r, c += n
                    }
                    return l
                }
            }, t.utf32be = {
                encode(e) {
                    let t = n.alloc(4 * e.length),
                        r = 0;
                    return e.forEach(e => {
                        if (e >= 55296 && e <= 57343 || e > 1114111) throw RangeError(`utf32be.encode: UTF32BE character code out of range: char[${r/4}]: ${e}`);
                        t[r++] = e >> 24 & 255, t[r++] = e >> 16 & 255, t[r++] = e >> 8 & 255, t[r++] = 255 & e
                    }), t
                },
                decode(e, t) {
                    if (e.length % 4 > 0) throw RangeError(`utf32be.decode: UTF32BE byte length must be even multiple of 4: length: ${e.length}`);
                    let r = [],
                        n = t ? 4 : 0;
                    for (; n < e.length; n += 4) {
                        let t = (e[n] << 24) + (e[n + 1] << 16) + (e[n + 2] << 8) + e[n + 3];
                        if (t >= 55296 && t <= 57343 || t > 1114111) throw RangeError(`utf32be.decode: UTF32BE character code out of range: char[${n/4}]: ${t}`);
                        r.push(t)
                    }
                    return r
                }
            }, t.utf32le = {
                encode(e) {
                    let t = n.alloc(4 * e.length),
                        r = 0;
                    return e.forEach(e => {
                        if (e >= 55296 && e <= 57343 || e > 1114111) throw RangeError(`utf32le.encode: UTF32LE character code out of range: char[${r/4}]: ${e}`);
                        t[r++] = 255 & e, t[r++] = e >> 8 & 255, t[r++] = e >> 16 & 255, t[r++] = e >> 24 & 255
                    }), t
                },
                decode(e, t) {
                    if (e.length % 4 > 0) throw RangeError(`utf32be.decode: UTF32LE byte length must be even multiple of 4: length: ${e.length}`);
                    let r = [],
                        n = t ? 4 : 0;
                    for (; n < e.length; n += 4) {
                        let t = (e[n + 3] << 24) + (e[n + 2] << 16) + (e[n + 1] << 8) + e[n];
                        if (t >= 55296 && t <= 57343 || t > 1114111) throw RangeError(`utf32le.encode: UTF32LE character code out of range: char[${n/4}]: ${t}`);
                        r.push(t)
                    }
                    return r
                }
            }, t.uint7 = {
                encode(e) {
                    let t = n.alloc(e.length);
                    for (let r = 0; r < e.length; r += 1) {
                        if (e[r] > 127) throw RangeError(`uint7.encode: UINT7 character code out of range: char[${r}]: ${e[r]}`);
                        t[r] = e[r]
                    }
                    return t
                },
                decode(e) {
                    let t = [];
                    for (let r = 0; r < e.length; r += 1) {
                        if (e[r] > 127) throw RangeError(`uint7.decode: UINT7 character code out of range: byte[${r}]: ${e[r]}`);
                        t[r] = e[r]
                    }
                    return t
                }
            }, t.uint8 = {
                encode(e) {
                    let t = n.alloc(e.length);
                    for (let r = 0; r < e.length; r += 1) {
                        if (e[r] > 255) throw RangeError(`uint8.encode: UINT8 character code out of range: char[${r}]: ${e[r]}`);
                        t[r] = e[r]
                    }
                    return t
                },
                decode(e) {
                    let t = [];
                    for (let r = 0; r < e.length; r += 1) t[r] = e[r];
                    return t
                }
            }, t.uint16be = {
                encode(e) {
                    let t = n.alloc(2 * e.length),
                        r = 0;
                    return e.forEach(e => {
                        if (e > 65535) throw RangeError(`uint16be.encode: UINT16BE character code out of range: char[${r/2}]: ${e}`);
                        t[r++] = e >> 8 & 255, t[r++] = 255 & e
                    }), t
                },
                decode(e) {
                    if (e.length % 2 > 0) throw RangeError(`uint16be.decode: UINT16BE byte length must be even multiple of 2: length: ${e.length}`);
                    let t = [];
                    for (let r = 0; r < e.length; r += 2) t.push((e[r] << 8) + e[r + 1]);
                    return t
                }
            }, t.uint16le = {
                encode(e) {
                    let t = n.alloc(2 * e.length),
                        r = 0;
                    return e.forEach(e => {
                        if (e > 65535) throw RangeError(`uint16le.encode: UINT16LE character code out of range: char[${r/2}]: ${e}`);
                        t[r++] = 255 & e, t[r++] = e >> 8 & 255
                    }), t
                },
                decode(e) {
                    if (e.length % 2 > 0) throw RangeError(`uint16le.decode: UINT16LE byte length must be even multiple of 2: length: ${e.length}`);
                    let t = [];
                    for (let r = 0; r < e.length; r += 2) t.push((e[r + 1] << 8) + e[r]);
                    return t
                }
            }, t.uint32be = {
                encode(e) {
                    let t = n.alloc(4 * e.length),
                        r = 0;
                    return e.forEach(e => {
                        t[r++] = e >> 24 & 255, t[r++] = e >> 16 & 255, t[r++] = e >> 8 & 255, t[r++] = 255 & e
                    }), t
                },
                decode(e) {
                    if (e.length % 4 > 0) throw RangeError(`uint32be.decode: UINT32BE byte length must be even multiple of 4: length: ${e.length}`);
                    let t = [];
                    for (let r = 0; r < e.length; r += 4) t.push((e[r] << 24) + (e[r + 1] << 16) + (e[r + 2] << 8) + e[r + 3]);
                    return t
                }
            }, t.uint32le = {
                encode(e) {
                    let t = n.alloc(4 * e.length),
                        r = 0;
                    return e.forEach(e => {
                        t[r++] = 255 & e, t[r++] = e >> 8 & 255, t[r++] = e >> 16 & 255, t[r++] = e >> 24 & 255
                    }), t
                },
                decode(e) {
                    if (e.length % 4 > 0) throw RangeError(`uint32le.decode: UINT32LE byte length must be even multiple of 4: length: ${e.length}`);
                    let t = [];
                    for (let r = 0; r < e.length; r += 4) t.push((e[r + 3] << 24) + (e[r + 2] << 16) + (e[r + 1] << 8) + e[r]);
                    return t
                }
            }, t.string = {
                encode: e => t.utf16le.encode(e).toString("utf16le"),
                decode: e => t.utf16le.decode(n.from(e, "utf16le"), 0)
            }, t.escaped = {
                encode(e) {
                    let t = [];
                    for (let r = 0; r < e.length; r += 1) {
                        let s = e[r];
                        if (96 === s) t.push(s), t.push(s);
                        else if (10 === s) t.push(s);
                        else if (s >= 32 && s <= 126) t.push(s);
                        else {
                            let e = "";
                            if (s >= 0 && s <= 31) e += `\`x${i[s]}`;
                            else if (s >= 127 && s <= 255) e += `\`x${i[s]}`;
                            else if (s >= 256 && s <= 65535) e += `\`u${i[s>>8&255]}${i[255&s]}`;
                            else if (s >= 65536 && s <= 4294967295) {
                                e += "`u{";
                                let t = s >> 24 & 255;
                                t > 0 && (e += i[t]), e += `${i[s>>16&255]+i[s>>8&255]+i[255&s]}}`
                            } else throw Error("escape.encode(char): char > 0xffffffff not allowed");
                            let r = n.from(e);
                            r.forEach(e => {
                                t.push(e)
                            })
                        }
                    }
                    return n.from(t)
                },
                decode(e) {
                    let t, r, n;

                    function i(e) {
                        return e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102
                    }
                    let s = [],
                        o = e.length,
                        a = 0;
                    for (; a < o;) {
                        for (;;) {
                            if (n = !0, 96 !== e[a]) {
                                s.push(e[a]), a += 1, n = !1;
                                break
                            }
                            if ((t = a + 1) >= o) break;
                            if (96 === e[t]) {
                                s.push(96), a += 2, n = !1;
                                break
                            }
                            if (120 === e[t]) {
                                if ((r = function(e, t, r) {
                                        let n = {
                                            char: null,
                                            nexti: e + 2,
                                            error: !0
                                        };
                                        if (e + 1 < t && i(r[e]) && i(r[e + 1])) {
                                            let t = String.fromCodePoint(r[e], r[e + 1]);
                                            n.char = parseInt(t, 16), Number.isNaN(n.char) || (n.error = !1)
                                        }
                                        return n
                                    }(t + 1, o, e)).error) break;
                                s.push(r.char), a = r.nexti, n = !1;
                                break
                            }
                            if (117 === e[t]) {
                                if (123 === e[t + 1]) {
                                    if ((r = function(e, t, r) {
                                            let n = {
                                                    char: null,
                                                    nexti: e + 4,
                                                    error: !0
                                                },
                                                s = "";
                                            for (; e < t && i(r[e]);) s += String.fromCodePoint(r[e]), e += 1;
                                            return n.char = parseInt(s, 16), 125 !== r[e] || Number.isNaN(n.char) || (n.error = !1), n.nexti = e + 1, n
                                        }(t + 2, o, e)).error) break;
                                    s.push(r.char), a = r.nexti, n = !1;
                                    break
                                }
                                if ((r = function(e, t, r) {
                                        let n = {
                                            char: null,
                                            nexti: e + 4,
                                            error: !0
                                        };
                                        if (e + 3 < t && i(r[e]) && i(r[e + 1]) && i(r[e + 2]) && i(r[e + 3])) {
                                            let t = String.fromCodePoint(r[e], r[e + 1], r[e + 2], r[e + 3]);
                                            n.char = parseInt(t, 16), Number.isNaN(n.char) || (n.error = !1)
                                        }
                                        return n
                                    }(t + 1, o, e)).error) break;
                                s.push(r.char), a = r.nexti, n = !1
                            }
                            break
                        }
                        if (n) throw Error(`escaped.decode: ill-formed escape sequence at buf[${a}]`)
                    }
                    return s
                }
            }, t.lineEnds = {
                crlf(e) {
                    let t = [],
                        r = 0;
                    for (; r < e.length;) switch (e[r]) {
                        case 13:
                            r + 1 < e.length && 10 === e[r + 1] ? r += 2 : r += 1, t.push(13), t.push(10);
                            break;
                        case 10:
                            t.push(13), t.push(10), r += 1;
                            break;
                        default:
                            t.push(e[r]), r += 1
                    }
                    return t.length > 0 && 10 !== t[t.length - 1] && (t.push(13), t.push(10)), t
                },
                lf(e) {
                    let t = [],
                        r = 0;
                    for (; r < e.length;) switch (e[r]) {
                        case 13:
                            r + 1 < e.length && 10 === e[r + 1] ? r += 2 : r += 1, t.push(10);
                            break;
                        case 10:
                            t.push(10), r += 1;
                            break;
                        default:
                            t.push(e[r]), r += 1
                    }
                    return t.length > 0 && 10 !== t[t.length - 1] && t.push(10), t
                }
            }, t.base64 = {
                encode(e) {
                    let t, r, i;
                    if (0 === e.length) return n.alloc(0);
                    let o = e.length % 3;
                    o = o > 0 ? 3 - o : 0;
                    let a = (e.length + o) / 3,
                        l = n.alloc(4 * a);
                    o > 0 && (a -= 1), t = 0, r = 0;
                    for (let n = 0; n < a; n += 1) i = (e[t++] << 16) + (e[t++] << 8) + e[t++], l[r++] = s[i >> 18 & 63], l[r++] = s[i >> 12 & 63], l[r++] = s[i >> 6 & 63], l[r++] = s[63 & i];
                    return 0 === o ? l : 1 === o ? (i = (e[t++] << 16) + (e[t] << 8), l[r++] = s[i >> 18 & 63], l[r++] = s[i >> 12 & 63], l[r++] = s[i >> 6 & 63], l[r] = s[64], l) : 2 === o ? (i = e[t] << 16, l[r++] = s[i >> 18 & 63], l[r++] = s[i >> 12 & 63], l[r++] = s[64], l[r] = s[64], l) : void 0
                },
                decode(e) {
                    let t, r, i;
                    if (0 === e.length) return n.alloc(0);
                    let s = function(e) {
                            let t = [],
                                r = 0;
                            for (let n = 0; n < e.length; n += 1) {
                                let i = e[n];
                                for (; 32 !== i && 9 !== i && 10 !== i && 13 !== i;) {
                                    if (i >= 65 && i <= 90) {
                                        t.push(i - 65);
                                        break
                                    }
                                    if (i >= 97 && i <= 122) {
                                        t.push(i - 71);
                                        break
                                    }
                                    if (i >= 48 && i <= 57) {
                                        t.push(i + 4);
                                        break
                                    }
                                    if (43 === i) {
                                        t.push(62);
                                        break
                                    }
                                    if (47 === i) {
                                        t.push(63);
                                        break
                                    }
                                    if (61 === i) {
                                        t.push(64), r += 1;
                                        break
                                    }
                                    throw RangeError(`base64.decode: invalid character buf[${n}]: ${i}`)
                                }
                            }
                            if (t.length % 4 > 0) throw RangeError(`base64.decode: string length not integral multiple of 4: ${t.length}`);
                            switch (r) {
                                case 0:
                                    break;
                                case 1:
                                    if (64 !== t[t.length - 1]) throw RangeError("base64.decode: one tail character found: not last character");
                                    break;
                                case 2:
                                    if (64 !== t[t.length - 1] || 64 !== t[t.length - 2]) throw RangeError("base64.decode: two tail characters found: not last characters");
                                    break;
                                default:
                                    throw RangeError(`base64.decode: more than two tail characters found: ${r}`)
                            }
                            return {
                                tail: r,
                                buf: n.from(t)
                            }
                        }(e),
                        {
                            tail: o
                        } = s,
                        a = s.buf,
                        l = a.length / 4,
                        u = n.alloc(3 * l - o);
                    o > 0 && (l -= 1), r = 0, t = 0;
                    for (let e = 0; e < l; e += 1) i = (a[t++] << 18) + (a[t++] << 12) + (a[t++] << 6) + a[t++], u[r++] = i >> 16 & 255, u[r++] = i >> 8 & 255, u[r++] = 255 & i;
                    return 1 === o && (i = (a[t++] << 18) + (a[t++] << 12) + (a[t] << 6), u[r++] = i >> 16 & 255, u[r] = i >> 8 & 255), 2 === o && (i = (a[t++] << 18) + (a[t++] << 12), u[r] = i >> 16 & 255), u
                },
                toString(e) {
                    if (e.length % 4 > 0) throw RangeError(`base64.toString: input buffer length not multiple of 4: ${e.length}`);
                    let t = "",
                        r = 0;
                    for (let i = 0; i < e.length; i += 4) {
                        for (let t = i; t < i + 4; t += 1) {
                            var n;
                            if (!((n = e[t]) >= 65 && n <= 90 || n >= 97 && n <= 122 || n >= 48 && n <= 57 || 43 === n || 47 === n || 61 === n)) throw RangeError(`base64.toString: buf[${t}]: ${e[t]} : not valid base64 character code`)
                        }! function(e, n, i, s) {
                            switch (r) {
                                case 76:
                                    t += `\r
${e}${n}${i}${s}`, r = 4;
                                    break;
                                case 75:
                                    t += `${e}\r
${n}${i}${s}`, r = 3;
                                    break;
                                case 74:
                                    t += `${e+n}\r
${i}${s}`, r = 2;
                                    break;
                                case 73:
                                    t += `${e+n+i}\r
${s}`, r = 1;
                                    break;
                                default:
                                    t += e + n + i + s, r += 4
                            }
                        }(String.fromCharCode(e[i]), String.fromCharCode(e[i + 1]), String.fromCharCode(e[i + 2]), String.fromCharCode(e[i + 3]))
                    }
                    return t
                }
            }
        },
        35641: function(e, t, r) {
            e.exports = function() {
                let e = r(92242),
                    t = r(80166),
                    n = this,
                    i = null,
                    s = null,
                    o = null,
                    a = 0,
                    l = [],
                    u = [],
                    c = [],
                    d = [];

                function h(e) {
                    let t = "";
                    for (let r = 0; r < e; r += 1) t += " ";
                    return t
                }
                this.callbacks = [], this.astObject = "astObject", this.init = function(e, t, r) {
                    let h;
                    c.length = 0, d.length = 0, l.length = 0, a = 0, i = e, s = t, o = r;
                    let f = [];
                    for (h = 0; h < i.length; h += 1) f.push(i[h].lower);
                    for (h = 0; h < s.length; h += 1) f.push(s[h].lower);
                    for (h = 0, a = i.length + s.length; h < a; h += 1) l[h] = !1, u[h] = null;
                    for (let e in n.callbacks) {
                        let t = e.toLowerCase();
                        if ((h = f.indexOf(t)) < 0) throw Error(`ast.js: init: node '${e}' not a rule or udt name`);
                        "function" == typeof n.callbacks[e] && (l[h] = !0, u[h] = n.callbacks[e]), !0 === n.callbacks[e] && (l[h] = !0)
                    }
                }, this.ruleDefined = function(e) {
                    return !1 !== l[e]
                }, this.udtDefined = function(e) {
                    return !1 !== l[i.length + e]
                }, this.down = function(t, r) {
                    let n = d.length;
                    return c.push(n), d.push({
                        name: r,
                        thisIndex: n,
                        thatIndex: null,
                        state: e.SEM_PRE,
                        callbackIndex: t,
                        phraseIndex: null,
                        phraseLength: null,
                        stack: c.length
                    }), n
                }, this.up = function(t, r, n, i) {
                    let s = d.length,
                        o = c.pop();
                    return d.push({
                        name: r,
                        thisIndex: s,
                        thatIndex: o,
                        state: e.SEM_POST,
                        callbackIndex: t,
                        phraseIndex: n,
                        phraseLength: i,
                        stack: c.length
                    }), d[o].thatIndex = s, d[o].phraseIndex = n, d[o].phraseLength = i, s
                }, this.translate = function(t) {
                    let r, n;
                    for (let i = 0; i < d.length; i += 1) r = u[(n = d[i]).callbackIndex], n.state === e.SEM_PRE ? null !== r && r(e.SEM_PRE, o, n.phraseIndex, n.phraseLength, t) === e.SEM_SKIP && (i = n.thatIndex) : null !== r && r(e.SEM_POST, o, n.phraseIndex, n.phraseLength, t)
                }, this.setLength = function(e) {
                    d.length = e, e > 0 ? c.length = d[e - 1].stack : c.length = 0
                }, this.getLength = function() {
                    return d.length
                }, this.toXml = function(r) {
                    let n = t.charsToDec,
                        i = "decimal integer character codes";
                    if ("string" == typeof r && r.length >= 3) {
                        let e = r.slice(0, 3).toLowerCase();
                        "asc" === e ? (n = t.charsToAscii, i = "ASCII for printing characters, hex for non-printing") : "hex" === e ? (n = t.charsToHex, i = "hexadecimal integer character codes") : "uni" === e && (n = t.charsToUnicode, i = "Unicode UTF-32 integer character codes")
                    }
                    let s = "",
                        a = 0;
                    return s += `<?xml version="1.0" encoding="utf-8"?>
<root nodes="${d.length/2}" characters="${o.length}">
<!-- input string, ${i} -->
` + h(a + 2) + n(o) + "\n", d.forEach(t => {
                        t.state === e.SEM_PRE ? (a += 1, s += h(a) + `<node name="${t.name}" index="${t.phraseIndex}" length="${t.phraseLength}">
` + h(a + 2) + n(o, t.phraseIndex, t.phraseLength) + "\n") : (s += h(a) + `</node><!-- name="${t.name}" -->
`, a -= 1)
                    }), s += "</root>\n"
                }, this.phrases = function() {
                    let t, r;
                    let n = {};
                    for (t = 0; t < d.length; t += 1)(r = d[t]).state === e.SEM_PRE && (Array.isArray(n[r.name]) || (n[r.name] = []), n[r.name].push({
                        index: r.phraseIndex,
                        length: r.phraseLength
                    }));
                    return n
                }
            }
        },
        83414: function(e) {
            e.exports = function() {
                let e = -1,
                    t = 0;
                this.init = function(r) {
                    if ("number" != typeof r || r <= 0) throw Error("circular-buffer.js: init: circular buffer size must an integer > 0");
                    t = Math.ceil(r), e = -1
                }, this.increment = function() {
                    return ((e += 1) + t) % t
                }, this.maxSize = function() {
                    return t
                }, this.items = function() {
                    return e + 1
                }, this.getListIndex = function(r) {
                    return -1 === e || r < 0 || r > e || e - r >= t ? -1 : (r + t) % t
                }, this.forEach = function(r) {
                    if (-1 !== e) {
                        if (e < t) {
                            for (let t = 0; t <= e; t += 1) r(t, t);
                            return
                        }
                        for (let n = e - t + 1; n <= e; n += 1) {
                            let e = (n + t) % t;
                            r(e, n)
                        }
                    }
                }
            }
        },
        12959: function(e) {
            e.exports = function() {
                return "/* This file automatically generated by jsonToless() and LESS. */\n.apg-mono {\n  font-family: monospace;\n}\n.apg-active {\n  font-weight: bold;\n  color: #000000;\n}\n.apg-match {\n  font-weight: bold;\n  color: #264BFF;\n}\n.apg-empty {\n  font-weight: bold;\n  color: #0fbd0f;\n}\n.apg-nomatch {\n  font-weight: bold;\n  color: #FF4000;\n}\n.apg-lh-match {\n  font-weight: bold;\n  color: #1A97BA;\n}\n.apg-lb-match {\n  font-weight: bold;\n  color: #5F1687;\n}\n.apg-remainder {\n  font-weight: bold;\n  color: #999999;\n}\n.apg-ctrl-char {\n  font-weight: bolder;\n  font-style: italic;\n  font-size: 0.6em;\n}\n.apg-line-end {\n  font-weight: bold;\n  color: #000000;\n}\n.apg-error {\n  font-weight: bold;\n  color: #FF4000;\n}\n.apg-phrase {\n  color: #000000;\n  background-color: #8caae6;\n}\n.apg-empty-phrase {\n  color: #0fbd0f;\n}\ntable.apg-state {\n  font-family: monospace;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: 130%;\n  text-align: left;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-state th,\ntable.apg-state td {\n  text-align: left;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-state th:nth-last-child(2),\ntable.apg-state td:nth-last-child(2) {\n  text-align: right;\n}\ntable.apg-state caption {\n  font-size: 125%;\n  line-height: 130%;\n  font-weight: bold;\n  text-align: left;\n}\ntable.apg-stats {\n  font-family: monospace;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: 130%;\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-stats th,\ntable.apg-stats td {\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-stats caption {\n  font-size: 125%;\n  line-height: 130%;\n  font-weight: bold;\n  text-align: left;\n}\ntable.apg-trace {\n  font-family: monospace;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: 130%;\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-trace caption {\n  font-size: 125%;\n  line-height: 130%;\n  font-weight: bold;\n  text-align: left;\n}\ntable.apg-trace th,\ntable.apg-trace td {\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-trace th:last-child,\ntable.apg-trace th:nth-last-child(2),\ntable.apg-trace td:last-child,\ntable.apg-trace td:nth-last-child(2) {\n  text-align: left;\n}\ntable.apg-grammar {\n  font-family: monospace;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: 130%;\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-grammar caption {\n  font-size: 125%;\n  line-height: 130%;\n  font-weight: bold;\n  text-align: left;\n}\ntable.apg-grammar th,\ntable.apg-grammar td {\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-grammar th:last-child,\ntable.apg-grammar td:last-child {\n  text-align: left;\n}\ntable.apg-rules {\n  font-family: monospace;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: 130%;\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-rules caption {\n  font-size: 125%;\n  line-height: 130%;\n  font-weight: bold;\n  text-align: left;\n}\ntable.apg-rules th,\ntable.apg-rules td {\n  text-align: right;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-rules a {\n  color: #003399 !important;\n}\ntable.apg-rules a:hover {\n  color: #8caae6 !important;\n}\ntable.apg-attrs {\n  font-family: monospace;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: 130%;\n  text-align: center;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-attrs caption {\n  font-size: 125%;\n  line-height: 130%;\n  font-weight: bold;\n  text-align: left;\n}\ntable.apg-attrs th,\ntable.apg-attrs td {\n  text-align: center;\n  border: 1px solid black;\n  border-collapse: collapse;\n}\ntable.apg-attrs th:nth-child(1),\ntable.apg-attrs th:nth-child(2),\ntable.apg-attrs th:nth-child(3) {\n  text-align: right;\n}\ntable.apg-attrs td:nth-child(1),\ntable.apg-attrs td:nth-child(2),\ntable.apg-attrs td:nth-child(3) {\n  text-align: right;\n}\ntable.apg-attrs a {\n  color: #003399 !important;\n}\ntable.apg-attrs a:hover {\n  color: #8caae6 !important;\n}\n"
            }
        },
        92242: function(e) {
            e.exports = {
                ALT: 1,
                CAT: 2,
                REP: 3,
                RNM: 4,
                TRG: 5,
                TBS: 6,
                TLS: 7,
                UDT: 11,
                AND: 12,
                NOT: 13,
                BKR: 14,
                BKA: 15,
                BKN: 16,
                ABG: 17,
                AEN: 18,
                ACTIVE: 100,
                MATCH: 101,
                EMPTY: 102,
                NOMATCH: 103,
                SEM_PRE: 200,
                SEM_POST: 201,
                SEM_OK: 300,
                SEM_SKIP: 301,
                ATTR_N: 400,
                ATTR_R: 401,
                ATTR_MR: 402,
                LOOKAROUND_NONE: 500,
                LOOKAROUND_AHEAD: 501,
                LOOKAROUND_BEHIND: 502,
                BKR_MODE_UM: 601,
                BKR_MODE_PM: 602,
                BKR_MODE_CS: 603,
                BKR_MODE_CI: 604
            }
        },
        24153: function(e, t, r) {
            e.exports = {
                ast: r(35641),
                circular: r(83414),
                ids: r(92242),
                parser: r(39652),
                stats: r(44195),
                trace: r(69849),
                utils: r(80166),
                emitcss: r(12959),
                style: r(89290)
            }
        },
        39652: function(e, t, r) {
            e.exports = function() {
                let e, t, n, i, s;
                let o = r(92242),
                    a = r(80166),
                    l = "parser.js: ",
                    u = this;
                this.ast = null, this.stats = null, this.trace = null, this.callbacks = [];
                let c = null,
                    d = null,
                    h = 0,
                    f = 0,
                    p = 0,
                    g = null,
                    m = null,
                    y = null,
                    b = null,
                    w = null,
                    A = 0,
                    v = 1 / 0,
                    E = 1 / 0,
                    P = function(t, r, n) {
                        let s = `${l}evaluateRule(): `;
                        if (t >= y.length) throw Error(`${s}rule index: ${t} out of range`);
                        if (r >= i) throw Error(`${s}phrase index: ${r} out of range`);
                        let {
                            length: a
                        } = c;
                        c.push({
                            type: o.RNM,
                            index: t
                        }), e(a, r, n), c.pop()
                    },
                    S = function(t, r, n) {
                        let s = `${l}evaluateUdt(): `;
                        if (t >= b.length) throw Error(`${s}udt index: ${t} out of range`);
                        if (r >= i) throw Error(`${s}phrase index: ${r} out of range`);
                        let {
                            length: a
                        } = c;
                        c.push({
                            type: o.UDT,
                            empty: b[t].empty,
                            index: t
                        }), e(a, r, n), c.pop()
                    },
                    O = function() {
                        h = 0, f = 0, p = 0, A = 0, s = [{
                            lookAround: o.LOOKAROUND_NONE,
                            anchor: 0,
                            charsEnd: 0,
                            charsLength: 0
                        }], y = null, b = null, d = null, t = 0, n = 0, i = 0, g = null, m = null, w = null, c = null
                    },
                    k = function() {
                        let e = [],
                            t = function() {
                                let t = e[e.length - 1],
                                    r = {};
                                for (let e in t) r[e] = t[e];
                                return r
                            };
                        this.push = function() {
                                e.push(t())
                            }, this.pop = function(t) {
                                let r = t;
                                if (r || (r = e.length - 1), r < 1 || r > e.length) throw Error(`${l}backRef.pop(): bad length: ${r}`);
                                return e.length = r, e[e.length - 1]
                            }, this.length = function() {
                                return e.length
                            }, this.savePhrase = function(t, r, n) {
                                e[e.length - 1][t] = {
                                    phraseIndex: r,
                                    phraseLength: n
                                }
                            }, this.getPhrase = function(t) {
                                return e[e.length - 1][t]
                            },
                            function() {
                                let t = {};
                                y.forEach(e => {
                                    e.isBkr && (t[e.lower] = null)
                                }), b.length > 0 && b.forEach(e => {
                                    e.isBkr && (t[e.lower] = null)
                                }), e.push(t)
                            }()
                    },
                    C = function() {
                        let e = this;
                        this.state = o.ACTIVE, this.phraseLength = 0, this.ruleIndex = 0, this.udtIndex = 0, this.lookAround = s[s.length - 1], this.uFrame = new k, this.pFrame = new k, this.evaluateRule = P, this.evaluateUdt = S, this.refresh = function() {
                            e.state = o.ACTIVE, e.phraseLength = 0, e.lookAround = s[s.length - 1]
                        }
                    },
                    x = function() {
                        return s[s.length - 1]
                    },
                    T = function() {
                        return s.length > 1
                    },
                    N = function() {
                        let e = `${l}initializeAst(): `;
                        for (;;) {
                            if (void 0 === u.ast) {
                                u.ast = null;
                                break
                            }
                            if (null === u.ast) break;
                            if ("astObject" !== u.ast.astObject) throw Error(`${e}ast object not recognized`);
                            break
                        }
                        null !== u.ast && u.ast.init(y, b, d)
                    },
                    _ = function() {
                        let e = `${l}initializeTrace(): `;
                        for (;;) {
                            if (void 0 === u.trace) {
                                u.trace = null;
                                break
                            }
                            if (null === u.trace) break;
                            if ("traceObject" !== u.trace.traceObject) throw Error(`${e}trace object not recognized`);
                            break
                        }
                        null !== u.trace && u.trace.init(y, b, d)
                    },
                    B = function() {
                        let e = `${l}initializeStats(): `;
                        for (;;) {
                            if (void 0 === u.stats) {
                                u.stats = null;
                                break
                            }
                            if (null === u.stats) break;
                            if ("statsObject" !== u.stats.statsObject) throw Error(`${e}stats object not recognized`);
                            break
                        }
                        null !== u.stats && u.stats.init(y, b)
                    },
                    D = function(e) {
                        let t = `${l}initializeGrammar(): `;
                        if (!e) throw Error(`${t}grammar object undefined`);
                        if ("grammarObject" !== e.grammarObject) throw Error(`${t}bad grammar object`);
                        y = e.rules, b = e.udts
                    },
                    I = function(e) {
                        let t = `${l}initializeStartRule(): `,
                            r = null;
                        if ("number" == typeof e) {
                            if (e >= y.length) throw Error(`${t}start rule index too large: max: ${y.length}: index: ${e}`);
                            r = e
                        } else if ("string" == typeof e) {
                            let n = e.toLowerCase();
                            for (let e = 0; e < y.length; e += 1)
                                if (n === y[e].lower) {
                                    r = y[e].index;
                                    break
                                }
                            if (null === r) throw Error(`${t}start rule name '${e}' not recognized`)
                        } else throw Error(`${t}type of start rule '${typeof e}' not recognized`);
                        return r
                    },
                    R = function(e, r, s) {
                        let o = `${l}initializeInputChars(): `,
                            u = e,
                            c = r,
                            h = s;
                        if (void 0 === u) throw Error(`${o}input string is undefined`);
                        if (null === u) throw Error(`${o}input string is null`);
                        if ("string" == typeof u) u = a.stringToChars(u);
                        else if (!Array.isArray(u)) throw Error(`${o}input string is not a string or array`);
                        if (u.length > 0 && "number" != typeof u[0]) throw Error(`${o}input string not an array of integers`);
                        if ("number" != typeof c) c = 0;
                        else if ((c = Math.floor(c)) < 0 || c > u.length) throw Error(`${o}input beginning index out of range: ${c}`);
                        if ("number" != typeof h) h = u.length - c;
                        else if ((h = Math.floor(h)) < 0 || h > u.length - c) throw Error(`${o}input length out of range: ${h}`);
                        d = u, i = (t = c) + (n = h)
                    },
                    M = function() {
                        let e, t;
                        let r = `${l}initializeCallbacks(): `;
                        for (e = 0, g = [], m = []; e < y.length; e += 1) g[e] = null;
                        for (e = 0; e < b.length; e += 1) m[e] = null;
                        let n = [];
                        for (e = 0; e < y.length; e += 1) n.push(y[e].lower);
                        for (e = 0; e < b.length; e += 1) n.push(b[e].lower);
                        for (let i in u.callbacks) {
                            if ((e = n.indexOf(i.toLowerCase())) < 0) throw Error(`${r}syntax callback '${i}' not a rule or udt name`);
                            if ((t = u.callbacks[i]) || (t = null), "function" == typeof t || null === t) e < y.length ? g[e] = t : m[e - y.length] = t;
                            else throw Error(`${r}syntax callback[${i}] must be function reference or 'false' (false/null/undefined/etc.)`)
                        }
                        for (e = 0; e < b.length; e += 1)
                            if (null === m[e]) throw Error(`${r}all UDT callbacks must be defined. UDT callback[${b[e].lower}] not a function reference`)
                    };
                this.setMaxTreeDepth = function(e) {
                    if ("number" != typeof e || (v = Math.floor(e)) <= 0) throw Error(`parser: max tree depth must be integer > 0: ${e}`)
                }, this.setMaxNodeHits = function(e) {
                    if ("number" != typeof e || (E = Math.floor(e)) <= 0) throw Error(`parser: max node hits must be integer > 0: ${e}`)
                };
                let L = function(r, s, a) {
                    let u;
                    let h = `${l}parse(): `;
                    D(r);
                    let g = I(s);
                    M(), _(), B(), N();
                    let m = new C;
                    switch (null != a && (w = a), c = [{
                        type: o.RNM,
                        index: g
                    }], e(0, t, m), c = null, m.state) {
                        case o.ACTIVE:
                            throw Error(`${h}final state should never be 'ACTIVE'`);
                        case o.NOMATCH:
                            u = !1;
                            break;
                        case o.EMPTY:
                        case o.MATCH:
                            u = m.phraseLength === n;
                            break;
                        default:
                            throw Error("unrecognized state")
                    }
                    return {
                        success: u,
                        state: m.state,
                        length: n,
                        matched: m.phraseLength,
                        maxMatched: A,
                        maxTreeDepth: f,
                        nodeHits: p,
                        inputLength: d.length,
                        subBegin: t,
                        subEnd: i,
                        subLength: n
                    }
                };
                this.parseSubstring = function(e, t, r, n, i, s) {
                    return O(), R(r, n, i), L(e, t, s)
                }, this.parse = function(e, t, r, n) {
                    return O(), R(r, 0, r.length), L(e, t, n)
                };
                let U = function(t, r, n) {
                        let i = c[t];
                        for (let t = 0; t < i.children.length && (e(i.children[t], r, n), n.state === o.NOMATCH); t += 1);
                    },
                    j = function(t, r, n) {
                        let i, s, a, l;
                        let d = c[t],
                            h = n.uFrame.length(),
                            f = n.pFrame.length();
                        u.ast && (s = u.ast.getLength()), i = !0, a = r, l = 0;
                        for (let t = 0; t < d.children.length; t += 1) {
                            if (e(d.children[t], a, n), n.state === o.NOMATCH) {
                                i = !1;
                                break
                            }
                            a += n.phraseLength, l += n.phraseLength
                        }
                        i ? (n.state = 0 === l ? o.EMPTY : o.MATCH, n.phraseLength = l) : (n.state = o.NOMATCH, n.phraseLength = 0, n.uFrame.pop(h), n.pFrame.pop(f), u.ast && u.ast.setLength(s))
                    },
                    F = function(t, r, n) {
                        let s, a, l, d;
                        let h = c[t];
                        a = r, l = 0, d = 0;
                        let f = n.uFrame.length(),
                            p = n.pFrame.length();
                        for (u.ast && (s = u.ast.getLength()); !(a >= i) && (e(t + 1, a, n), n.state !== o.NOMATCH && n.state !== o.EMPTY && (d += 1, l += n.phraseLength, a += n.phraseLength, d !== h.max)););
                        n.state === o.EMPTY ? (n.state = 0 === l ? o.EMPTY : o.MATCH, n.phraseLength = l) : d >= h.min ? (n.state = 0 === l ? o.EMPTY : o.MATCH, n.phraseLength = l) : (n.state = o.NOMATCH, n.phraseLength = 0, n.uFrame.pop(f), n.pFrame.pop(p), u.ast && u.ast.setLength(s))
                    },
                    H = function(e, t, r, n) {
                        if (t.phraseLength > r) {
                            let n = `${l}opRNM(${e.name}): callback function error: `;
                            throw Error(n += `sysData.phraseLength: ${t.phraseLength} must be <= remaining chars: ${r}`)
                        }
                        switch (t.state) {
                            case o.ACTIVE:
                                if (!0 !== n) throw Error(`${l}opRNM(${e.name}): callback function return error. ACTIVE state not allowed.`);
                                break;
                            case o.EMPTY:
                                t.phraseLength = 0;
                                break;
                            case o.MATCH:
                                0 === t.phraseLength && (t.state = o.EMPTY);
                                break;
                            case o.NOMATCH:
                                t.phraseLength = 0;
                                break;
                            default:
                                throw Error(`${l}opRNM(${e.name}): callback function return error. Unrecognized return state: ${t.state}`)
                        }
                    },
                    $ = function(t, r, n) {
                        let s, a, l, h, f, p;
                        let m = c[t],
                            b = y[m.index],
                            A = g[b.index],
                            v = !T();
                        if (v && ((a = u.ast && u.ast.ruleDefined(m.index)) && (s = u.ast.getLength(), u.ast.down(m.index, y[m.index].name)), h = n.uFrame.length(), f = n.pFrame.length(), n.uFrame.push(), n.pFrame.push(), p = n.pFrame, n.pFrame = new k), null === A) l = c, c = b.opcodes, e(0, r, n), c = l;
                        else {
                            let t = i - r;
                            n.ruleIndex = b.index, A(n, d, r, w), H(b, n, t, !0), n.state === o.ACTIVE && (l = c, c = b.opcodes, e(0, r, n), c = l, n.ruleIndex = b.index, A(n, d, r, w), H(b, n, t, !1))
                        }
                        v && (a && (n.state === o.NOMATCH ? u.ast.setLength(s) : u.ast.up(m.index, b.name, r, n.phraseLength)), n.pFrame = p, n.state === o.NOMATCH ? (n.uFrame.pop(h), n.pFrame.pop(f)) : b.isBkr && (n.pFrame.savePhrase(b.lower, r, n.phraseLength), n.uFrame.savePhrase(b.lower, r, n.phraseLength)))
                    },
                    K = function(e, t, r) {
                        if (t.phraseLength > r) {
                            let n = `${l}opUDT(${e.name}): callback function error: `;
                            throw Error(n += `sysData.phraseLength: ${t.phraseLength} must be <= remaining chars: ${r}`)
                        }
                        switch (t.state) {
                            case o.ACTIVE:
                                throw Error(`${l}opUDT(${e.name}): callback function return error. ACTIVE state not allowed.`);
                            case o.EMPTY:
                                if (!1 === e.empty) throw Error(`${l}opUDT(${e.name}): callback function return error. May not return EMPTY.`);
                                t.phraseLength = 0;
                                break;
                            case o.MATCH:
                                if (0 === t.phraseLength) {
                                    if (!1 === e.empty) throw Error(`${l}opUDT(${e.name}): callback function return error. May not return EMPTY.`);
                                    t.state = o.EMPTY
                                }
                                break;
                            case o.NOMATCH:
                                t.phraseLength = 0;
                                break;
                            default:
                                throw Error(`${l}opUDT(${e.name}): callback function return error. Unrecognized return state: ${t.state}`)
                        }
                    },
                    z = function(e, t, r) {
                        let n, s, a, l, h, f;
                        let p = c[e],
                            g = b[p.index];
                        r.UdtIndex = g.index;
                        let A = !T();
                        A && ((a = u.ast && u.ast.udtDefined(p.index)) && (s = y.length + p.index, n = u.ast.getLength(), u.ast.down(s, g.name)), l = r.uFrame.length(), h = r.pFrame.length(), r.uFrame.push(), r.pFrame.push(), f = r.pFrame, r.pFrame = new k);
                        let v = i - t;
                        m[p.index](r, d, t, w), K(g, r, v), A && (a && (r.state === o.NOMATCH ? u.ast.setLength(n) : u.ast.up(s, g.name, t, r.phraseLength)), r.pFrame = f, r.state === o.NOMATCH ? (r.uFrame.pop(l), r.pFrame.pop(h)) : g.isBkr && (r.pFrame.savePhrase(g.lower, t, r.phraseLength), r.uFrame.savePhrase(g.lower, t, r.phraseLength)))
                    },
                    V = function(r, a, l) {
                        s.push({
                            lookAround: o.LOOKAROUND_AHEAD,
                            anchor: a,
                            charsEnd: i,
                            charsLength: n
                        }), i = d.length, n = d.length - t, e(r + 1, a, l);
                        let u = s.pop();
                        switch (i = u.charsEnd, n = u.charsLength, l.phraseLength = 0, l.state) {
                            case o.EMPTY:
                            case o.MATCH:
                                l.state = o.EMPTY;
                                break;
                            case o.NOMATCH:
                                l.state = o.NOMATCH;
                                break;
                            default:
                                throw Error(`opAND: invalid state ${l.state}`)
                        }
                    },
                    G = function(r, a, l) {
                        s.push({
                            lookAround: o.LOOKAROUND_AHEAD,
                            anchor: a,
                            charsEnd: i,
                            charsLength: n
                        }), i = d.length, n = d.length - t, e(r + 1, a, l);
                        let u = s.pop();
                        switch (i = u.charsEnd, n = u.charsLength, l.phraseLength = 0, l.state) {
                            case o.EMPTY:
                            case o.MATCH:
                                l.state = o.NOMATCH;
                                break;
                            case o.NOMATCH:
                                l.state = o.EMPTY;
                                break;
                            default:
                                throw Error(`opNOT: invalid state ${l.state}`)
                        }
                    },
                    W = function(e, t, r) {
                        let n = c[e];
                        r.state = o.NOMATCH, t < i && n.min <= d[t] && d[t] <= n.max && (r.state = o.MATCH, r.phraseLength = 1)
                    },
                    J = function(e, t, r) {
                        let n;
                        let s = c[e],
                            a = s.string.length;
                        if (r.state = o.NOMATCH, t + a <= i) {
                            for (n = 0; n < a; n += 1)
                                if (d[t + n] !== s.string[n]) return;
                            r.state = o.MATCH, r.phraseLength = a
                        }
                    },
                    q = function(e, t, r) {
                        let n, s;
                        let a = c[e];
                        r.state = o.NOMATCH;
                        let l = a.string.length;
                        if (0 === l) {
                            r.state = o.EMPTY;
                            return
                        }
                        if (t + l <= i) {
                            for (n = 0; n < l; n += 1)
                                if ((s = d[t + n]) >= 65 && s <= 90 && (s += 32), s !== a.string[n]) return;
                            r.state = o.MATCH, r.phraseLength = l
                        }
                    },
                    Q = function(e, t, r) {
                        r.state = o.NOMATCH, r.phraseLength = 0, r.state = 0 === t ? o.EMPTY : o.NOMATCH
                    },
                    Y = function(e, t, r) {
                        r.state = o.NOMATCH, r.phraseLength = 0, r.state = t === d.length ? o.EMPTY : o.NOMATCH
                    },
                    Z = function(e, t, r) {
                        let n, s, a, l;
                        let u = c[e];
                        r.state = o.NOMATCH, l = u.index < y.length ? y[u.index].lower : b[u.index - y.length].lower;
                        let h = u.bkrMode === o.BKR_MODE_PM ? r.pFrame.getPhrase(l) : r.uFrame.getPhrase(l),
                            f = u.bkrCase === o.BKR_MODE_CI;
                        if (null === h) return;
                        let p = h.phraseIndex,
                            g = h.phraseLength;
                        if (0 === g) {
                            r.state = o.EMPTY;
                            return
                        }
                        if (t + g <= i) {
                            if (f) {
                                for (n = 0; n < g; n += 1)
                                    if (s = d[t + n], a = d[p + n], s >= 65 && s <= 90 && (s += 32), a >= 65 && a <= 90 && (a += 32), s !== a) return;
                                r.state = o.MATCH, r.phraseLength = g
                            } else
                                for (n = 0; n < g; n += 1)
                                    if ((s = d[t + n]) !== (a = d[p + n])) return;
                            r.state = o.MATCH, r.phraseLength = g
                        }
                    },
                    X = function(t, r, n) {
                        switch (s.push({
                            lookAround: o.LOOKAROUND_BEHIND,
                            anchor: r
                        }), e(t + 1, r, n), s.pop(), n.phraseLength = 0, n.state) {
                            case o.EMPTY:
                            case o.MATCH:
                                n.state = o.EMPTY;
                                break;
                            case o.NOMATCH:
                                n.state = o.NOMATCH;
                                break;
                            default:
                                throw Error(`opBKA: invalid state ${n.state}`)
                        }
                    },
                    ee = function(t, r, n) {
                        switch (s.push({
                            lookAround: o.LOOKAROUND_BEHIND,
                            anchor: r
                        }), e(t + 1, r, n), s.pop(), n.phraseLength = 0, n.state) {
                            case o.EMPTY:
                            case o.MATCH:
                                n.state = o.NOMATCH;
                                break;
                            case o.NOMATCH:
                                n.state = o.EMPTY;
                                break;
                            default:
                                throw Error(`opBKN: invalid state ${n.state}`)
                        }
                    },
                    et = function(t, r, n) {
                        let i, s, a, l;
                        let d = c[t],
                            h = n.uFrame.length(),
                            f = n.pFrame.length();
                        u.ast && (s = u.ast.getLength()), i = !0, a = r, l = 0;
                        for (let t = d.children.length - 1; t >= 0; t -= 1)
                            if (e(d.children[t], a, n), a -= n.phraseLength, l += n.phraseLength, n.state === o.NOMATCH) {
                                i = !1;
                                break
                            }
                        i ? (n.state = 0 === l ? o.EMPTY : o.MATCH, n.phraseLength = l) : (n.state = o.NOMATCH, n.phraseLength = 0, n.uFrame.pop(h), n.pFrame.pop(f), u.ast && u.ast.setLength(s))
                    },
                    er = function(t, r, n) {
                        let i, s, a, l;
                        let d = c[t];
                        s = r, a = 0, l = 0;
                        let h = n.uFrame.length(),
                            f = n.pFrame.length();
                        for (u.ast && (i = u.ast.getLength()); !(s <= 0) && (e(t + 1, s, n), n.state !== o.NOMATCH && n.state !== o.EMPTY && (l += 1, a += n.phraseLength, s -= n.phraseLength, l !== d.max)););
                        n.state === o.EMPTY ? (n.state = 0 === a ? o.EMPTY : o.MATCH, n.phraseLength = a) : l >= d.min ? (n.state = 0 === a ? o.EMPTY : o.MATCH, n.phraseLength = a) : (n.state = o.NOMATCH, n.phraseLength = 0, n.uFrame.pop(h), n.pFrame.pop(f), u.ast && u.ast.setLength(i))
                    },
                    en = function(e, t, r) {
                        let n = c[e];
                        if (r.state = o.NOMATCH, r.phraseLength = 0, t > 0) {
                            let e = d[t - 1];
                            n.min <= e && e <= n.max && (r.state = o.MATCH, r.phraseLength = 1)
                        }
                    },
                    ei = function(e, t, r) {
                        let n;
                        let i = c[e];
                        r.state = o.NOMATCH;
                        let s = i.string.length,
                            a = t - s;
                        if (a >= 0) {
                            for (n = 0; n < s; n += 1)
                                if (d[a + n] !== i.string[n]) return;
                            r.state = o.MATCH, r.phraseLength = s
                        }
                    },
                    es = function(e, t, r) {
                        let n;
                        let i = c[e];
                        r.state = o.NOMATCH;
                        let s = i.string.length;
                        if (0 === s) {
                            r.state = o.EMPTY;
                            return
                        }
                        let a = t - s;
                        if (a >= 0) {
                            for (let e = 0; e < s; e += 1)
                                if ((n = d[a + e]) >= 65 && n <= 90 && (n += 32), n !== i.string[e]) return;
                            r.state = o.MATCH, r.phraseLength = s
                        }
                    },
                    eo = function(e, t, r) {
                        let n, i, s, a;
                        let l = c[e];
                        r.state = o.NOMATCH, r.phraseLength = 0, a = l.index < y.length ? y[l.index].lower : b[l.index - y.length].lower;
                        let u = l.bkrMode === o.BKR_MODE_PM ? r.pFrame.getPhrase(a) : r.uFrame.getPhrase(a),
                            h = l.bkrCase === o.BKR_MODE_CI;
                        if (null === u) return;
                        let f = u.phraseIndex,
                            p = u.phraseLength;
                        if (0 === p) {
                            r.state = o.EMPTY, r.phraseLength = 0;
                            return
                        }
                        let g = t - p;
                        if (g >= 0) {
                            if (h) {
                                for (n = 0; n < p; n += 1)
                                    if (i = d[g + n], s = d[f + n], i >= 65 && i <= 90 && (i += 32), s >= 65 && s <= 90 && (s += 32), i !== s) return;
                                r.state = o.MATCH, r.phraseLength = p
                            } else
                                for (n = 0; n < p; n += 1)
                                    if ((i = d[g + n]) !== (s = d[f + n])) return;
                            r.state = o.MATCH, r.phraseLength = p
                        }
                    };
                e = function(e, t, r) {
                    let n = !0,
                        i = c[e];
                    if ((p += 1) > E) throw Error(`parser: maximum number of node hits exceeded: ${E}`);
                    if ((h += 1) > f && (f = h) > v) throw Error(`parser: maximum parse tree depth exceeded: ${v}`);
                    if (r.refresh(), null !== u.trace) {
                        let e = x();
                        u.trace.down(i, r.state, t, r.phraseLength, e.anchor, e.lookAround)
                    }
                    if (s[s.length - 1].lookAround === o.LOOKAROUND_BEHIND) switch (i.type) {
                        case o.ALT:
                            U(e, t, r);
                            break;
                        case o.CAT:
                            et(e, t, r);
                            break;
                        case o.REP:
                            er(e, t, r);
                            break;
                        case o.RNM:
                            $(e, t, r);
                            break;
                        case o.UDT:
                            z(e, t, r);
                            break;
                        case o.AND:
                            V(e, t, r);
                            break;
                        case o.NOT:
                            G(e, t, r);
                            break;
                        case o.TRG:
                            en(e, t, r);
                            break;
                        case o.TBS:
                            ei(e, t, r);
                            break;
                        case o.TLS:
                            es(e, t, r);
                            break;
                        case o.BKR:
                            eo(e, t, r);
                            break;
                        case o.BKA:
                            X(e, t, r);
                            break;
                        case o.BKN:
                            ee(e, t, r);
                            break;
                        case o.ABG:
                            Q(e, t, r);
                            break;
                        case o.AEN:
                            Y(e, t, r);
                            break;
                        default:
                            n = !1
                    } else switch (i.type) {
                        case o.ALT:
                            U(e, t, r);
                            break;
                        case o.CAT:
                            j(e, t, r);
                            break;
                        case o.REP:
                            F(e, t, r);
                            break;
                        case o.RNM:
                            $(e, t, r);
                            break;
                        case o.UDT:
                            z(e, t, r);
                            break;
                        case o.AND:
                            V(e, t, r);
                            break;
                        case o.NOT:
                            G(e, t, r);
                            break;
                        case o.TRG:
                            W(e, t, r);
                            break;
                        case o.TBS:
                            J(e, t, r);
                            break;
                        case o.TLS:
                            q(e, t, r);
                            break;
                        case o.BKR:
                            Z(e, t, r);
                            break;
                        case o.BKA:
                            X(e, t, r);
                            break;
                        case o.BKN:
                            ee(e, t, r);
                            break;
                        case o.ABG:
                            Q(e, t, r);
                            break;
                        case o.AEN:
                            Y(e, t, r);
                            break;
                        default:
                            n = !1
                    }
                    if (!T() && t + r.phraseLength > A && (A = t + r.phraseLength), null !== u.stats && u.stats.collect(i, r), null !== u.trace) {
                        let e = x();
                        u.trace.up(i, r.state, t, r.phraseLength, e.anchor, e.lookAround)
                    }
                    return h -= 1, n
                }
            }
        },
        44195: function(e, t, r) {
            e.exports = function() {
                let e;
                let t = r(92242),
                    n = r(80166),
                    i = r(89290),
                    s = [],
                    o = [],
                    a = [],
                    l = [],
                    u = [];
                this.statsObject = "statsObject";
                let c = function(e, t) {
                        return e.lower < t.lower ? -1 : e.lower > t.lower ? 1 : 0
                    },
                    d = function(e, t) {
                        return e.total < t.total ? 1 : e.total > t.total ? -1 : c(e, t)
                    },
                    h = function(e, t) {
                        return e.index < t.index ? -1 : e.index > t.index ? 1 : 0
                    },
                    f = function() {
                        this.empty = 0, this.match = 0, this.nomatch = 0, this.total = 0
                    },
                    p = function() {
                        a.length = 0, e = new f, a[t.ALT] = new f, a[t.CAT] = new f, a[t.REP] = new f, a[t.RNM] = new f, a[t.TRG] = new f, a[t.TBS] = new f, a[t.TLS] = new f, a[t.UDT] = new f, a[t.AND] = new f, a[t.NOT] = new f, a[t.BKR] = new f, a[t.BKA] = new f, a[t.BKN] = new f, a[t.ABG] = new f, a[t.AEN] = new f, l.length = 0;
                        for (let e = 0; e < s.length; e += 1) l.push({
                            empty: 0,
                            match: 0,
                            nomatch: 0,
                            total: 0,
                            name: s[e].name,
                            lower: s[e].lower,
                            index: s[e].index
                        });
                        if (o.length > 0) {
                            u.length = 0;
                            for (let e = 0; e < o.length; e += 1) u.push({
                                empty: 0,
                                match: 0,
                                nomatch: 0,
                                total: 0,
                                name: o[e].name,
                                lower: o[e].lower,
                                index: o[e].index
                            })
                        }
                    },
                    g = function(e, r) {
                        switch (e.total += 1, r) {
                            case t.EMPTY:
                                e.empty += 1;
                                break;
                            case t.MATCH:
                                e.match += 1;
                                break;
                            case t.NOMATCH:
                                e.nomatch += 1;
                                break;
                            default:
                                throw Error(`stats.js: collect(): incStat(): unrecognized state: ${r}`)
                        }
                    },
                    m = function(e, t) {
                        return `<tr><td class="${i.CLASS_ACTIVE}">${e}</td><td class="${i.CLASS_EMPTY}">${t.empty}</td><td class="${i.CLASS_MATCH}">${t.match}</td><td class="${i.CLASS_NOMATCH}">${t.nomatch}</td><td class="${i.CLASS_ACTIVE}">${t.total}</td></tr>
`
                    },
                    y = function() {
                        return "" + (m("ALT", a[t.ALT]) + m("CAT", a[t.CAT]) + m("REP", a[t.REP]) + m("RNM", a[t.RNM]) + m("TRG", a[t.TRG]) + m("TBS", a[t.TBS]) + m("TLS", a[t.TLS]) + m("UDT", a[t.UDT]) + m("AND", a[t.AND]) + m("NOT", a[t.NOT]) + m("BKR", a[t.BKR]) + m("BKA", a[t.BKA]) + m("BKN", a[t.BKN]) + m("ABG", a[t.ABG]) + m("AEN", a[t.AEN]) + m("totals", e))
                    },
                    b = function() {
                        let e = "";
                        e += "<tr><th></th><th></th><th></th><th></th><th></th></tr>\n<tr><th>rules</th><th></th><th></th><th></th><th></th></tr>\n";
                        for (let t = 0; t < s.length; t += 1) l[t].total > 0 && (e += `<tr><td class="${i.CLASS_ACTIVE}">${l[t].name}</td><td class="${i.CLASS_EMPTY}">${l[t].empty}</td><td class="${i.CLASS_MATCH}">${l[t].match}</td><td class="${i.CLASS_NOMATCH}">${l[t].nomatch}</td><td class="${i.CLASS_ACTIVE}">${l[t].total}</td></tr>
`);
                        if (o.length > 0) {
                            e += "<tr><th></th><th></th><th></th><th></th><th></th></tr>\n<tr><th>udts</th><th></th><th></th><th></th><th></th></tr>\n";
                            for (let t = 0; t < o.length; t += 1) u[t].total > 0 && (e += `<tr><td class="${i.CLASS_ACTIVE}">${u[t].name}</td><td class="${i.CLASS_EMPTY}">${u[t].empty}</td><td class="${i.CLASS_MATCH}">${u[t].match}</td><td class="${i.CLASS_NOMATCH}">${u[t].nomatch}</td><td class="${i.CLASS_ACTIVE}">${u[t].total}</td></tr>
`)
                        }
                        return e
                    };
                this.validate = function(e) {
                    let t = !1;
                    return "string" == typeof e && "stats" === e && (t = !0), t
                }, this.init = function(e, t) {
                    s = e, o = t, p()
                }, this.collect = function(r, n) {
                    g(e, n.state, n.phraseLength), g(a[r.type], n.state, n.phraseLength), r.type === t.RNM && g(l[r.index], n.state, n.phraseLength), r.type === t.UDT && g(u[r.index], n.state, n.phraseLength)
                }, this.toHtml = function(e, t) {
                    let r = "";
                    for (r += `<table class="${i.CLASS_STATS}">
`, "string" == typeof t && (r += `<caption>${t}</caption>
`), r += `<tr><th class="${i.CLASS_ACTIVE}">ops</th>
<th class="${i.CLASS_EMPTY}">EMPTY</th>
<th class="${i.CLASS_MATCH}">MATCH</th>
<th class="${i.CLASS_NOMATCH}">NOMATCH</th>
<th class="${i.CLASS_ACTIVE}">totals</th></tr>
`;;) {
                        if (null == e || "ops" === e) {
                            r += y();
                            break
                        }
                        if ("index" === e) {
                            l.sort(h), u.length > 0 && u.sort(h), r += y() + b();
                            break
                        }
                        if ("hits" === e) {
                            l.sort(d), u.length > 0 && u.sort(h), r += y() + b();
                            break
                        }
                        "alpha" === e && (l.sort(c), u.length > 0 && u.sort(c), r += y() + b());
                        break
                    }
                    return r + "</table>\n"
                }, this.toHtmlPage = function(e, t, r) {
                    return n.htmlToPage(this.toHtml(e, t), r)
                }
            }
        },
        89290: function(e) {
            e.exports = {
                CLASS_MONOSPACE: "apg-mono",
                CLASS_ACTIVE: "apg-active",
                CLASS_EMPTY: "apg-empty",
                CLASS_MATCH: "apg-match",
                CLASS_NOMATCH: "apg-nomatch",
                CLASS_LOOKAHEAD: "apg-lh-match",
                CLASS_LOOKBEHIND: "apg-lb-match",
                CLASS_REMAINDER: "apg-remainder",
                CLASS_CTRLCHAR: "apg-ctrl-char",
                CLASS_LINEEND: "apg-line-end",
                CLASS_ERROR: "apg-error",
                CLASS_PHRASE: "apg-phrase",
                CLASS_EMPTYPHRASE: "apg-empty-phrase",
                CLASS_STATE: "apg-state",
                CLASS_STATS: "apg-stats",
                CLASS_TRACE: "apg-trace",
                CLASS_GRAMMAR: "apg-grammar",
                CLASS_RULES: "apg-rules",
                CLASS_RULESLINK: "apg-rules-link",
                CLASS_ATTRIBUTES: "apg-attrs"
            }
        },
        69849: function(e, t, r) {
            e.exports = function() {
                let e = r(80166),
                    t = r(89290),
                    n = new(r(83414)),
                    i = r(92242),
                    s = "trace.js: ",
                    o = this,
                    a = [],
                    l = 5e3,
                    u = -1,
                    c = 0,
                    d = 0,
                    h = [],
                    f = null,
                    p = null,
                    g = null,
                    m = [],
                    y = [],
                    b = `<span class="${t.CLASS_LINEEND}">&bull;</span>`,
                    w = `<span class="${t.CLASS_LINEEND}">&hellip;</span>`,
                    A = `<span class="${t.CLASS_EMPTY}">&#120634;</span>`,
                    v = function() {
                        let e = function(e) {
                                m[i.ALT] = e, m[i.CAT] = e, m[i.REP] = e, m[i.TLS] = e, m[i.TBS] = e, m[i.TRG] = e, m[i.AND] = e, m[i.NOT] = e, m[i.BKR] = e, m[i.BKA] = e, m[i.BKN] = e, m[i.ABG] = e, m[i.AEN] = e
                            },
                            t = 0;
                        for (let e in o.filter.operators) t += 1;
                        if (0 === t) {
                            e(!1);
                            return
                        }
                        for (let t in o.filter.operators) {
                            let r = t.toUpperCase();
                            if ("<ALL>" === r) {
                                e(!0);
                                return
                            }
                            if ("<NONE>" === r) {
                                e(!1);
                                return
                            }
                        }
                        for (let t in e(!1), o.filter.operators) {
                            let e = t.toUpperCase();
                            if ("ALT" === e) m[i.ALT] = !0 === o.filter.operators[t];
                            else if ("CAT" === e) m[i.CAT] = !0 === o.filter.operators[t];
                            else if ("REP" === e) m[i.REP] = !0 === o.filter.operators[t];
                            else if ("AND" === e) m[i.AND] = !0 === o.filter.operators[t];
                            else if ("NOT" === e) m[i.NOT] = !0 === o.filter.operators[t];
                            else if ("TLS" === e) m[i.TLS] = !0 === o.filter.operators[t];
                            else if ("TBS" === e) m[i.TBS] = !0 === o.filter.operators[t];
                            else if ("TRG" === e) m[i.TRG] = !0 === o.filter.operators[t];
                            else if ("BKR" === e) m[i.BKR] = !0 === o.filter.operators[t];
                            else if ("BKA" === e) m[i.BKA] = !0 === o.filter.operators[t];
                            else if ("BKN" === e) m[i.BKN] = !0 === o.filter.operators[t];
                            else if ("ABG" === e) m[i.ABG] = !0 === o.filter.operators[t];
                            else if ("AEN" === e) m[i.AEN] = !0 === o.filter.operators[t];
                            else throw Error(`${s}initOpratorFilter: '${t}' not a valid operator name. Must be <all>, <none>, alt, cat, rep, tls, tbs, trg, and, not, bkr, bka or bkn`)
                        }
                    },
                    E = function() {
                        let e, t;
                        let r = function(e) {
                                m[i.RNM] = e, m[i.UDT] = e;
                                let t = p.length + g.length;
                                y.length = 0;
                                for (let r = 0; r < t; r += 1) y.push(e)
                            },
                            n = [];
                        for (t = 0; t < p.length; t += 1) n.push(p[t].lower);
                        for (t = 0; t < g.length; t += 1) n.push(g[t].lower);
                        for (let t in y.length = 0, e = 0, o.filter.rules) e += 1;
                        if (0 === e) {
                            r(!0);
                            return
                        }
                        for (let e in o.filter.rules) {
                            let t = e.toLowerCase();
                            if ("<all>" === t) {
                                r(!0);
                                return
                            }
                            if ("<none>" === t) {
                                r(!1);
                                return
                            }
                        }
                        for (let e in r(!1), m[i.RNM] = !0, m[i.UDT] = !0, o.filter.rules) {
                            let r = e.toLowerCase();
                            if ((t = n.indexOf(r)) < 0) throw Error(`${s}initRuleFilter: '${e}' not a valid rule or udt name`);
                            y[t] = !0 === o.filter.rules[e]
                        }
                    };
                this.traceObject = "traceObject", this.filter = {
                    operators: [],
                    rules: []
                }, this.setMaxRecords = function(e, t) {
                    if (u = -1, "number" == typeof e && e > 0) l = Math.ceil(e);
                    else {
                        l = 0;
                        return
                    }
                    "number" == typeof t && (u = Math.floor(t)) < 0 && (u = -1)
                }, this.getMaxRecords = function() {
                    return l
                }, this.getLastRecord = function() {
                    return u
                }, this.init = function(e, t, r) {
                    a.length = 0, h.length = 0, c = 0, d = 0, f = r, p = e, g = t, v(), E(), n.init(l)
                };
                let P = function(e) {
                        return e.type === i.RNM ? !!m[e.type] && !!y[e.index] : e.type === i.UDT ? !!m[e.type] && !!y[p.length + e.index] : m[e.type]
                    },
                    S = function(e) {
                        return -1 === u || e <= u
                    };
                this.down = function(e, t, r, i, s, o) {
                    S(c) && P(e) && (h.push(c), a[n.increment()] = {
                        dirUp: !1,
                        depth: d,
                        thisLine: c,
                        thatLine: void 0,
                        opcode: e,
                        state: t,
                        phraseIndex: r,
                        phraseLength: i,
                        lookAnchor: s,
                        lookAround: o
                    }, c += 1, d += 1)
                }, this.up = function(e, t, r, i, s, o) {
                    if (S(c) && P(e)) {
                        let l = c,
                            u = h.pop(),
                            f = n.getListIndex(u); - 1 !== f && (a[f].thatLine = l), d -= 1, a[n.increment()] = {
                            dirUp: !0,
                            depth: d,
                            thisLine: l,
                            thatLine: u,
                            opcode: e,
                            state: t,
                            phraseIndex: r,
                            phraseLength: i,
                            lookAnchor: s,
                            lookAround: o
                        }, c += 1
                    }
                };
                let O = function() {
                    let t, r, s, o, l;

                    function u(t, r) {
                        let n, s, o;
                        if (r) switch (t.op = {
                            id: r.type,
                            name: e.opcodeToString(r.type)
                        }, t.opData = void 0, r.type) {
                            case i.RNM:
                                t.opData = p[r.index].name;
                                break;
                            case i.UDT:
                                t.opData = g[r.index].name;
                                break;
                            case i.BKR:
                                n = r.index < p.length ? p[r.index].name : g[r.index - p.length].name, s = r.bkrCase === i.BKR_MODE_CI ? "%i" : "%s", o = r.bkrMode === i.BKR_MODE_UM ? "%u" : "%p", t.opData = `\\\\${s}${o}${n}`;
                                break;
                            case i.TLS:
                                t.opData = [];
                                for (let e = 0; e < r.string.length; e += 1) t.opData.push(r.string[e]);
                                break;
                            case i.TBS:
                                t.opData = [];
                                for (let e = 0; e < r.string.length; e += 1) t.opData.push(r.string[e]);
                                break;
                            case i.TRG:
                            case i.REP:
                                t.opData = [r.min, r.max];
                                break;
                            default:
                                throw Error("unrecognized opcode")
                        } else t.op = {
                            id: void 0,
                            name: void 0
                        }, t.opData = void 0
                    }

                    function c(e, t, r) {
                        return e === i.MATCH ? {
                            index: t,
                            length: r
                        } : e === i.NOMATCH || e === i.EMPTY ? {
                            index: t,
                            length: 0
                        } : null
                    }
                    let h = -1;

                    function m(t, r, n) {
                        let i = {
                            id: h++,
                            branch: -1,
                            parent: t,
                            up: !1,
                            down: !1,
                            depth: n,
                            children: []
                        };
                        return r ? (i.down = !0, i.state = {
                            id: r.state,
                            name: e.stateToString(r.state)
                        }, i.phrase = null, u(i, r.opcode)) : (i.state = {
                            id: void 0,
                            name: void 0
                        }, i.phrase = c(), u(i, void 0)), i
                    }

                    function y(t, r) {
                        r && (t.up = !0, t.state = {
                            id: r.state,
                            name: e.stateToString(r.state)
                        }, t.phrase = c(r.state, r.phraseIndex, r.phraseLength), t.down || u(t, r.opcode))
                    }
                    let b = 0,
                        w = -1,
                        A = 1,
                        v = [],
                        E = !0,
                        P = m(null, null, -1);
                    for (v.push(P), r = P, n.forEach(e => {
                            if (o = a[e], E && (E = !1, o.depth > 0)) {
                                let e = o.dirUp ? o.depth + 1 : o.depth;
                                for (let t = 0; t < e; t += 1) s = r, r = m(r, null, t), v.push(r), s.children.push(r)
                            }
                            o.dirUp ? (y(r = v.pop(), o), r = v[v.length - 1]) : (s = r, r = m(r, o, o.depth), v.push(r), s.children.push(r))
                        }); v.length > 1;) y(r = v.pop(), null);
                    if (0 === P.children.length) throw Error("trace.toTree(): parse tree has no nodes");
                    if (0 === v.length) throw Error("trace.toTree(): integrity check: dummy root node disappeared?");
                    let S = t = P.children[0];
                    for (; t && !t.down && !t.up;) S = t, t = t.children[0];
                    (t = S).leftMost = !0, t.rightMost = !0,
                        function e(t) {
                            if (w += 1, t.branch = A, w > d && (d = w), 0 === t.children.length) b += 1;
                            else
                                for (let r = 0; r < t.children.length; r += 1) r > 0 && (A += 1), t.children[r].leftMost = !1, t.children[r].rightMost = !1, t.leftMost && (t.children[r].leftMost = 0 === r), t.rightMost && (t.children[r].rightMost = r === t.children.length - 1), e(t.children[r]);
                            w -= 1
                        }(t), t.branch = 0;
                    let O = {};
                    O.string = [];
                    for (let e = 0; e < f.length; e += 1) O.string[e] = f[e];
                    O.rules = [];
                    for (let e = 0; e < p.length; e += 1) O.rules[e] = p[e].name;
                    O.udts = [];
                    for (let e = 0; e < g.length; e += 1) O.udts[e] = g[e].name;
                    return O.id = {}, O.id.ALT = {
                        id: i.ALT,
                        name: "ALT"
                    }, O.id.CAT = {
                        id: i.CAT,
                        name: "CAT"
                    }, O.id.REP = {
                        id: i.REP,
                        name: "REP"
                    }, O.id.RNM = {
                        id: i.RNM,
                        name: "RNM"
                    }, O.id.TLS = {
                        id: i.TLS,
                        name: "TLS"
                    }, O.id.TBS = {
                        id: i.TBS,
                        name: "TBS"
                    }, O.id.TRG = {
                        id: i.TRG,
                        name: "TRG"
                    }, O.id.UDT = {
                        id: i.UDT,
                        name: "UDT"
                    }, O.id.AND = {
                        id: i.AND,
                        name: "AND"
                    }, O.id.NOT = {
                        id: i.NOT,
                        name: "NOT"
                    }, O.id.BKR = {
                        id: i.BKR,
                        name: "BKR"
                    }, O.id.BKA = {
                        id: i.BKA,
                        name: "BKA"
                    }, O.id.BKN = {
                        id: i.BKN,
                        name: "BKN"
                    }, O.id.ABG = {
                        id: i.ABG,
                        name: "ABG"
                    }, O.id.AEN = {
                        id: i.AEN,
                        name: "AEN"
                    }, O.id.ACTIVE = {
                        id: i.ACTIVE,
                        name: "ACTIVE"
                    }, O.id.MATCH = {
                        id: i.MATCH,
                        name: "MATCH"
                    }, O.id.EMPTY = {
                        id: i.EMPTY,
                        name: "EMPTY"
                    }, O.id.NOMATCH = {
                        id: i.NOMATCH,
                        name: "NOMATCH"
                    }, O.treeDepth = d, O.leafNodes = b, l = t.down ? t.up ? "none" : "right" : t.up ? "left" : "both", O.branchesIncomplete = l, O.tree = function e(t, r) {
                        let n;
                        let i = {};
                        if (i.id = t.id, i.branch = t.branch, i.leftMost = t.leftMost, i.rightMost = t.rightMost, n = t.state.name ? t.state.name : "ACTIVE", i.state = {
                                id: t.state.id,
                                name: n
                            }, n = t.op.name ? t.op.name : "?", i.op = {
                                id: t.op.id,
                                name: n
                            }, "string" == typeof t.opData) i.opData = t.opData;
                        else if (Array.isArray(t.opData)) {
                            i.opData = [];
                            for (let e = 0; e < t.opData.length; e += 1) i.opData[e] = t.opData[e]
                        } else i.opData = void 0;
                        t.phrase ? i.phrase = {
                            index: t.phrase.index,
                            length: t.phrase.length
                        } : i.phrase = null, i.depth = t.depth, i.children = [];
                        for (let n = 0; n < t.children.length; n += 1) {
                            let s = n !== t.children.length - 1;
                            i.children[n] = e(t.children[n], r, s)
                        }
                        return i
                    }(t, t.depth, !1), O
                };
                this.toTree = function(e) {
                    let t = O();
                    return e ? JSON.stringify(t) : t
                }, this.toHtmlPage = function(t, r, n) {
                    return e.htmlToPage(this.toHtml(t, r), n)
                };
                let k = function(e, r) {
                    let n;
                    switch (e) {
                        case 16:
                            n = "hexadecimal";
                            break;
                        case 10:
                            n = "decimal";
                            break;
                        case 8:
                            n = "ASCII";
                            break;
                        case 32:
                            n = "UNICODE";
                            break;
                        default:
                            throw Error(`${s}htmlHeader: unrecognized mode: ${e}`)
                    }
                    let i = "";
                    return i += `<p>display mode: ${n}</p>
<table class="${t.CLASS_TRACE}">
`, "string" == typeof r && (i += `<caption>${r}</caption>`), i
                };
                this.indent = function(e) {
                    let t = "";
                    for (let r = 0; r < e; r += 1) t += ".";
                    return t
                };
                let C = function(e, t) {
                        let r = "";
                        if (t.type === i.TRG) {
                            if (16 === e || 32 === e) {
                                let n = t.min.toString(16).toUpperCase();
                                n.length % 2 != 0 && (n = `0${n}`), r += (16 === e ? "%x" : "U+") + n, (n = t.max.toString(16).toUpperCase()).length % 2 != 0 && (n = `0${n}`), r += `&ndash;${n}`
                            } else r = `%d${t.min.toString(10)}&ndash;${t.max.toString(10)}`
                        }
                        return r
                    },
                    x = function(e, t) {
                        let r = "";
                        if (t.type === i.REP) {
                            if (16 === e) {
                                let e = t.min.toString(16).toUpperCase();
                                e.length % 2 != 0 && (e = `0${e}`), r = `x${e}`, t.max < 1 / 0 ? (e = t.max.toString(16).toUpperCase()).length % 2 != 0 && (e = `0${e}`) : e = "inf", r += `&ndash;${e}`
                            } else r = t.max < 1 / 0 ? `${t.min.toString(10)}&ndash;${t.max.toString(10)}` : `${t.min.toString(10)}&ndash;inf`
                        }
                        return r
                    },
                    T = function(e, t) {
                        let r = "";
                        if (t.type === i.TBS) {
                            let n = Math.min(t.string.length, 10);
                            if (16 === e || 32 === e) {
                                r += 16 === e ? "%x" : "U+";
                                for (let e = 0; e < n; e += 1) {
                                    let n;
                                    e > 0 && (r += "."), (n = t.string[e].toString(16).toUpperCase()).length % 2 != 0 && (n = `0${n}`), r += n
                                }
                            } else {
                                r = "%d";
                                for (let e = 0; e < n; e += 1) e > 0 && (r += "."), r += t.string[e].toString(10)
                            }
                            n < t.string.length && (r += w)
                        }
                        return r
                    },
                    N = function(t, r) {
                        let n = "";
                        if (r.type === i.TLS) {
                            let i = Math.min(r.string.length, 5);
                            if (16 === t || 10 === t) {
                                let e, s, o;
                                16 === t ? (n = "%x", o = 16) : (n = "%d", o = 10);
                                for (let t = 0; t < i; t += 1) t > 0 && (n += "."), (s = r.string[t]) >= 97 && s <= 122 ? n += `${(e=s-32).toString(o)}/${s.toString(o)}`.toUpperCase() : s >= 65 && s <= 90 ? (e = s, s += 32, n += `${e.toString(o)}/${s.toString(o)}`.toUpperCase()) : n += s.toString(o).toUpperCase();
                                i < r.string.length && (n += w)
                            } else {
                                n = '"';
                                for (let t = 0; t < i; t += 1) n += e.asciiChars[r.string[t]];
                                i < r.string.length && (n += w), n += '"'
                            }
                        }
                        return n
                    },
                    _ = function(t, r, n, i, s) {
                        if (0 === i) return "";
                        let o = "",
                            a = s ? "," : "";
                        switch (t) {
                            case 16:
                                o = a + e.charsToHex(r, n, i);
                                break;
                            case 10:
                                if (s) return `,${e.charsToDec(r,n,i)}`;
                                o = a + e.charsToDec(r, n, i);
                                break;
                            case 32:
                                o = e.charsToUnicode(r, n, i);
                                break;
                            default:
                                o = e.charsToAsciiHtml(r, n, i)
                        }
                        return o
                    },
                    B = function(e, r, n, s, o, a) {
                        let l, u, c, d, h = "",
                            f = b,
                            p = `<span class="${t.CLASS_LOOKBEHIND}">`,
                            g = `<span class="${t.CLASS_REMAINDER}">`,
                            m = "</span>",
                            y = !1;
                        switch (n) {
                            case i.EMPTY:
                                h += A;
                            case i.NOMATCH:
                            case i.MATCH:
                            case i.ACTIVE:
                                u = a - (l = s - o), c = a, d = r.length - c;
                                break;
                            default:
                                throw Error("unrecognized state")
                        }
                        return f = b, u > 80 ? (u = 80, f = w, d = 0) : u + d > 80 && (f = w, d = 80 - u), u > 0 && (h += p + _(e, r, l, u, y) + m, y = !0), d > 0 && (h += g + _(e, r, c, d, y) + m), h + f
                    },
                    D = function(e, r, n, s, o, a) {
                        let l, u, c, d, h = "",
                            f = b,
                            p = `<span class="${t.CLASS_REMAINDER}">`,
                            g = "</span>",
                            m = !1;
                        switch (n) {
                            case i.EMPTY:
                                h += A;
                            case i.NOMATCH:
                            case i.ACTIVE:
                                l = s, u = 0, c = s, d = r.length - c;
                                break;
                            case i.MATCH:
                                l = s, c = s + (u = o), d = r.length - c;
                                break;
                            default:
                                throw Error("unrecognized state")
                        }
                        return f = b, u > 80 ? (u = 80, f = w, d = 0) : u + d > 80 && (f = w, d = 80 - u), u > 0 && (h += a + _(e, r, l, u, m) + g, m = !0), d > 0 && (h += p + _(e, r, c, d, m) + g), h + f
                    },
                    I = function(e, r, n, i, s) {
                        let o = `<span class="${t.CLASS_LOOKAHEAD}">`;
                        return D(e, r, n, i, s, o)
                    },
                    R = function(e, r, n, i, s) {
                        let o = `<span class="${t.CLASS_MATCH}">`;
                        return D(e, r, n, i, s, o)
                    },
                    M = function(r) {
                        let s, l, u, c, d, h;
                        if (null === p) return "";
                        let m = "";
                        return m += "<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th><th>operator</th><th>phrase</th></tr>\n", n.forEach(n => {
                            let y = a[n];
                            switch (s = y.thisLine, l = void 0 !== y.thatLine ? y.thatLine : "--", u = !1, c = !1, d = !1, y.lookAround === i.LOOKAROUND_AHEAD && (u = !0, d = !0, h = y.lookAnchor), (y.opcode.type === i.AND || y.opcode.type === i.NOT) && (u = !0, d = !0, h = y.phraseIndex), y.lookAround === i.LOOKAROUND_BEHIND && (c = !0, d = !0, h = y.lookAnchor), (y.opcode.type === i.BKA || y.opcode.type === i.BKN) && (c = !0, d = !0, h = y.phraseIndex), m += `<tr><td>${s}</td><td>${l}</td><td>${y.phraseIndex}</td><td>${y.phraseLength}</td><td>${y.depth}</td><td>`, y.state) {
                                case i.ACTIVE:
                                    m += `<span class="${t.CLASS_ACTIVE}">&darr;&nbsp;</span>`;
                                    break;
                                case i.MATCH:
                                    m += `<span class="${t.CLASS_MATCH}">&uarr;M</span>`;
                                    break;
                                case i.NOMATCH:
                                    m += `<span class="${t.CLASS_NOMATCH}">&uarr;N</span>`;
                                    break;
                                case i.EMPTY:
                                    m += `<span class="${t.CLASS_EMPTY}">&uarr;E</span>`;
                                    break;
                                default:
                                    m += `<span class="${t.CLASS_ACTIVE}">--</span>`
                            }
                            if (m += "</td><td>" + o.indent(y.depth), u ? m += `<span class="${t.CLASS_LOOKAHEAD}">` : c && (m += `<span class="${t.CLASS_LOOKBEHIND}">`), m += e.opcodeToString(y.opcode.type), y.opcode.type === i.RNM && (m += `(${p[y.opcode.index].name}) `), y.opcode.type === i.BKR) {
                                let e = y.opcode.bkrCase === i.BKR_MODE_CI ? "%i" : "%s",
                                    t = y.opcode.bkrMode === i.BKR_MODE_UM ? "%u" : "%p";
                                m += `(\\${e}${t}${p[y.opcode.index].name}) `
                            }
                            y.opcode.type === i.UDT && (m += `(${g[y.opcode.index].name}) `), y.opcode.type === i.TRG && (m += `(${C(r,y.opcode)}) `), y.opcode.type === i.TBS && (m += `(${T(r,y.opcode)}) `), y.opcode.type === i.TLS && (m += `(${N(r,y.opcode)}) `), y.opcode.type === i.REP && (m += `(${x(r,y.opcode)}) `), d && (m += "</span>"), m += "</td><td>", c ? m += B(r, f, y.state, y.phraseIndex, y.phraseLength, h) : u ? m += I(r, f, y.state, y.phraseIndex, y.phraseLength) : m += R(r, f, y.state, y.phraseIndex, y.phraseLength), m += "</td></tr>\n"
                        }), m += "<tr><th>(a)</th><th>(b)</th><th>(c)</th><th>(d)</th><th>(e)</th><th>(f)</th><th>operator</th><th>phrase</th></tr>\n</table>\n"
                    };
                this.toHtml = function(e, r) {
                    let n = 8;
                    if ("string" == typeof e && e.length >= 3) {
                        let t = e.toLowerCase().slice(0, 3);
                        "hex" === t ? n = 16 : "dec" === t ? n = 10 : "uni" === t && (n = 32)
                    }
                    return k(n, r) + M(n) + "" + `</table>
<p class="${t.CLASS_MONOSPACE}">legend:<br>
(a)&nbsp;-&nbsp;line number<br>
(b)&nbsp;-&nbsp;matching line number<br>
(c)&nbsp;-&nbsp;phrase offset<br>
(d)&nbsp;-&nbsp;phrase length<br>
(e)&nbsp;-&nbsp;tree depth<br>
(f)&nbsp;-&nbsp;operator state<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_ACTIVE}">&darr;</span>&nbsp;&nbsp;phrase opened<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_MATCH}">&uarr;M</span> phrase matched<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_EMPTY}">&uarr;E</span> empty phrase matched<br>
&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_NOMATCH}">&uarr;N</span> phrase not matched<br>
operator&nbsp;-&nbsp;ALT, CAT, REP, RNM, TRG, TLS, TBS<sup>&dagger;</sup>, UDT, AND, NOT, BKA, BKN, BKR, ABG, AEN<sup>&Dagger;</sup><br>
phrase&nbsp;&nbsp;&nbsp;-&nbsp;up to 80 characters of the phrase being matched<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_MATCH}">matched characters</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_LOOKAHEAD}">matched characters in look ahead mode</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_LOOKBEHIND}">matched characters in look behind mode</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_REMAINDER}">remainder characters(not yet examined by parser)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;<span class="${t.CLASS_CTRLCHAR}">control characters, TAB, LF, CR, etc. (ASCII mode only)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${A} empty string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${b} end of input string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;${w} input string display truncated<br>
</p>
<p class="${t.CLASS_MONOSPACE}">
<sup>&dagger;</sup>original ABNF operators:<br>
ALT - alternation<br>
CAT - concatenation<br>
REP - repetition<br>
RNM - rule name<br>
TRG - terminal range<br>
TLS - terminal literal string (case insensitive)<br>
TBS - terminal binary string (case sensitive)<br>
<br>
<sup>&Dagger;</sup>super set SABNF operators:<br>
UDT - user-defined terminal<br>
AND - positive look ahead<br>
NOT - negative look ahead<br>
BKA - positive look behind<br>
BKN - negative look behind<br>
BKR - back reference<br>
ABG - anchor - begin of input string<br>
AEN - anchor - end of input string<br>
</p>
`
                }
            }
        },
        80166: function(e, t, r) {
            let n = r(89290),
                i = r(37033),
                s = r(12959),
                o = r(92242),
                a = "utilities.js: ",
                l = function(e, t, r) {
                    let n;
                    let i = t;
                    for (;;) {
                        if (e <= 0) {
                            i = 0, n = 0;
                            break
                        }
                        if ("number" != typeof i) {
                            i = 0, n = e;
                            break
                        }
                        if (i >= e) {
                            i = e, n = e;
                            break
                        }
                        if ("number" != typeof r) {
                            n = e;
                            break
                        }(n = i + r) > e && (n = e);
                        break
                    }
                    return {
                        beg: i,
                        end: n
                    }
                };
            t.htmlToPage = function(e, t) {
                if ("string" != typeof e) throw Error(`${a}htmlToPage: input HTML is not a string`);
                return `<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>${"string"!=typeof t?"htmlToPage":t}</title>
<style>
` + s() + "</style>\n</head>\n<body>\n" + `<p>${new Date}</p>
` + e + "</body>\n</html>\n"
            }, t.parserResultToHtml = function(e, t) {
                let r, i, s = null;
                "string" == typeof t && "" !== t && (s = t), r = !0 === e.success ? `<span class="${n.CLASS_MATCH}">true</span>` : `<span class="${n.CLASS_NOMATCH}">false</span>`, i = e.state === o.EMPTY ? `<span class="${n.CLASS_EMPTY}">EMPTY</span>` : e.state === o.MATCH ? `<span class="${n.CLASS_MATCH}">MATCH</span>` : e.state === o.NOMATCH ? `<span class="${n.CLASS_NOMATCH}">NOMATCH</span>` : `<span class="${n.CLASS_NOMATCH}">unrecognized</span>`;
                let a = "";
                return a += `<table class="${n.CLASS_STATE}">
`, s && (a += `<caption>${s}</caption>
`), a += `<tr><th>state item</th><th>value</th><th>description</th></tr>
<tr><td>parser success</td><td>${r}</td>
<td><span class="${n.CLASS_MATCH}">true</span> if the parse succeeded,
 <span class="${n.CLASS_NOMATCH}">false</span> otherwise<br><i>NOTE: for success, entire string must be matched</i></td></tr>
<tr><td>parser state</td><td>${i}</td>
<td><span class="${n.CLASS_EMPTY}">EMPTY</span>, <span class="${n.CLASS_MATCH}">MATCH</span> or 
<span class="${n.CLASS_NOMATCH}">NOMATCH</span></td></tr>
<tr><td>string length</td><td>${e.length}</td><td>length of the input (sub)string</td></tr>
<tr><td>matched length</td><td>${e.matched}</td><td>number of input string characters matched</td></tr>
<tr><td>max matched</td><td>${e.maxMatched}</td><td>maximum number of input string characters matched</td></tr>
<tr><td>max tree depth</td><td>${e.maxTreeDepth}</td><td>maximum depth of the parse tree reached</td></tr>
<tr><td>node hits</td><td>${e.nodeHits}</td><td>number of parse tree node hits (opcode function calls)</td></tr>
<tr><td>input length</td><td>${e.inputLength}</td><td>length of full input string</td></tr>
<tr><td>sub-string begin</td><td>${e.subBegin}</td><td>sub-string first character index</td></tr>
<tr><td>sub-string end</td><td>${e.subEnd}</td><td>sub-string end-of-string index</td></tr>
<tr><td>sub-string length</td><td>${e.subLength}</td><td>sub-string length</td></tr>
</table>
`
            }, t.charsToString = function(e, t, r) {
                let n, s;
                if ("number" == typeof t) {
                    if (t >= e.length) return "";
                    n = t < 0 ? 0 : t
                } else n = 0;
                if ("number" == typeof r) {
                    if (r <= 0) return "";
                    s = r > e.length - n ? e.length : n + r
                } else s = e.length;
                return n < s ? i.encode("UTF16LE", e.slice(n, s)).toString("utf16le") : ""
            }, t.stringToChars = function(e) {
                return i.decode("STRING", e)
            }, t.opcodeToString = function(e) {
                let t = "unknown";
                switch (e) {
                    case o.ALT:
                        t = "ALT";
                        break;
                    case o.CAT:
                        t = "CAT";
                        break;
                    case o.RNM:
                        t = "RNM";
                        break;
                    case o.UDT:
                        t = "UDT";
                        break;
                    case o.AND:
                        t = "AND";
                        break;
                    case o.NOT:
                        t = "NOT";
                        break;
                    case o.REP:
                        t = "REP";
                        break;
                    case o.TRG:
                        t = "TRG";
                        break;
                    case o.TBS:
                        t = "TBS";
                        break;
                    case o.TLS:
                        t = "TLS";
                        break;
                    case o.BKR:
                        t = "BKR";
                        break;
                    case o.BKA:
                        t = "BKA";
                        break;
                    case o.BKN:
                        t = "BKN";
                        break;
                    case o.ABG:
                        t = "ABG";
                        break;
                    case o.AEN:
                        t = "AEN";
                        break;
                    default:
                        throw Error("unrecognized opcode")
                }
                return t
            }, t.stateToString = function(e) {
                let t = "unknown";
                switch (e) {
                    case o.ACTIVE:
                        t = "ACTIVE";
                        break;
                    case o.MATCH:
                        t = "MATCH";
                        break;
                    case o.EMPTY:
                        t = "EMPTY";
                        break;
                    case o.NOMATCH:
                        t = "NOMATCH";
                        break;
                    default:
                        throw Error("unrecognized state")
                }
                return t
            }, t.asciiChars = ["NUL", "SOH", "STX", "ETX", "EOT", "ENQ", "ACK", "BEL", "BS", "TAB", "LF", "VT", "FF", "CR", "SO", "SI", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "ESC", "FS", "GS", "RS", "US", "&nbsp;", "!", "&#34;", "#", "$", "%", "&#38;", "&#39;", "(", ")", "*", "+", ",", "-", ".", "/", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "&#60;", "=", "&#62;", "?", "@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "[", "&#92;", "]", "^", "_", "`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "{", "|", "}", "~", "DEL"], t.charToHex = function(e) {
                let t = e.toString(16).toUpperCase();
                switch (t.length) {
                    case 1:
                    case 3:
                    case 7:
                        t = `0${t}`;
                        break;
                    case 2:
                    case 6:
                        t = `00${t}`;
                        break;
                    case 4:
                        break;
                    case 5:
                        t = `000${t}`;
                        break;
                    default:
                        throw Error("unrecognized option")
                }
                return t
            }, t.charsToDec = function(e, t, r) {
                let n = "";
                if (!Array.isArray(e)) throw Error(`${a}charsToDec: input must be an array of integers`);
                let i = l(e.length, t, r);
                if (i.end > i.beg) {
                    n += e[i.beg];
                    for (let t = i.beg + 1; t < i.end; t += 1) n += `,${e[t]}`
                }
                return n
            }, t.charsToHex = function(e, r, n) {
                let i = "";
                if (!Array.isArray(e)) throw Error(`${a}charsToHex: input must be an array of integers`);
                let s = l(e.length, r, n);
                if (s.end > s.beg) {
                    i += `\\x${t.charToHex(e[s.beg])}`;
                    for (let r = s.beg + 1; r < s.end; r += 1) i += `,\\x${t.charToHex(e[r])}`
                }
                return i
            }, t.charsToHtmlEntities = function(e, t, r) {
                let n = "";
                if (!Array.isArray(e)) throw Error(`${a}charsToHex: input must be an array of integers`);
                let i = l(e.length, t, r);
                if (i.end > i.beg)
                    for (let t = i.beg; t < i.end; t += 1) n += `&#x${e[t].toString(16)};`;
                return n
            }, t.charsToUnicode = function(e, r, n) {
                let i = "";
                if (!Array.isArray(e)) throw Error(`${a}charsToUnicode: input must be an array of integers`);
                let s = l(e.length, r, n);
                if (s.end > s.beg)
                    for (let r = s.beg; r < s.end; r += 1) {
                        var o;
                        ((o = e[r]) >= 55296 && o <= 57343 || o > 1114111 ? 1 : 0) ? i += ` U+${t.charToHex(e[r])}`: i += `&#${e[r]};`
                    }
                return i
            }, t.charsToJsUnicode = function(e, r, n) {
                let i = "";
                if (!Array.isArray(e)) throw Error(`${a}charsToJsUnicode: input must be an array of integers`);
                let s = l(e.length, r, n);
                if (s.end > s.beg) {
                    i += `\\u${t.charToHex(e[s.beg])}`;
                    for (let r = s.beg + 1; r < s.end; r += 1) i += `,\\u${t.charToHex(e[r])}`
                }
                return i
            }, t.charsToAscii = function(e, r, n) {
                let i = "";
                if (!Array.isArray(e)) throw Error(`${a}charsToAscii: input must be an array of integers`);
                let s = l(e.length, r, n);
                for (let r = s.beg; r < s.end; r += 1) {
                    let n = e[r];
                    n >= 32 && n <= 126 ? i += String.fromCharCode(n) : i += `\\x${t.charToHex(n)}`
                }
                return i
            }, t.charsToAsciiHtml = function(e, r, i) {
                let s;
                if (!Array.isArray(e)) throw Error(`${a}charsToAsciiHtml: input must be an array of integers`);
                let o = "",
                    u = l(e.length, r, i);
                for (let r = u.beg; r < u.end; r += 1)(s = e[r]) < 32 || 127 === s ? o += `<span class="${n.CLASS_CTRLCHAR}">${t.asciiChars[s]}</span>` : s > 127 ? o += `<span class="${n.CLASS_CTRLCHAR}">U+${t.charToHex(s)}</span>` : o += t.asciiChars[s];
                return o
            }, t.stringToAsciiHtml = function(e) {
                let t = i.decode("STRING", e);
                return this.charsToAsciiHtml(t)
            }
        },
        93109: function(e, t, r) {
            var n;
            ! function(i) {
                "use strict";
                var s, o = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                    a = Math.ceil,
                    l = Math.floor,
                    u = "[BigNumber Error] ",
                    c = u + "Number primitive has more than 15 significant digits: ",
                    d = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13];

                function h(e) {
                    var t = 0 | e;
                    return e > 0 || e === t ? t : t - 1
                }

                function f(e) {
                    for (var t, r, n = 1, i = e.length, s = e[0] + ""; n < i;) {
                        for (r = 14 - (t = e[n++] + "").length; r--; t = "0" + t);
                        s += t
                    }
                    for (i = s.length; 48 === s.charCodeAt(--i););
                    return s.slice(0, i + 1 || 1)
                }

                function p(e, t) {
                    var r, n, i = e.c,
                        s = t.c,
                        o = e.s,
                        a = t.s,
                        l = e.e,
                        u = t.e;
                    if (!o || !a) return null;
                    if (r = i && !i[0], n = s && !s[0], r || n) return r ? n ? 0 : -a : o;
                    if (o != a) return o;
                    if (r = o < 0, n = l == u, !i || !s) return n ? 0 : !i ^ r ? 1 : -1;
                    if (!n) return l > u ^ r ? 1 : -1;
                    for (o = 0, a = (l = i.length) < (u = s.length) ? l : u; o < a; o++)
                        if (i[o] != s[o]) return i[o] > s[o] ^ r ? 1 : -1;
                    return l == u ? 0 : l > u ^ r ? 1 : -1
                }

                function g(e, t, r, n) {
                    if (e < t || e > r || e !== l(e)) throw Error(u + (n || "Argument") + ("number" == typeof e ? e < t || e > r ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e))
                }

                function m(e) {
                    var t = e.c.length - 1;
                    return h(e.e / 14) == t && e.c[t] % 2 != 0
                }

                function y(e, t) {
                    return (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) + (t < 0 ? "e" : "e+") + t
                }

                function b(e, t, r) {
                    var n, i;
                    if (t < 0) {
                        for (i = r + "."; ++t; i += r);
                        e = i + e
                    } else if (n = e.length, ++t > n) {
                        for (i = r, t -= n; --t; i += r);
                        e += i
                    } else t < n && (e = e.slice(0, t) + "." + e.slice(t));
                    return e
                }(s = function e(t) {
                    var r, n, i, s, w, A, v, E, P, S = U.prototype = {
                            constructor: U,
                            toString: null,
                            valueOf: null
                        },
                        O = new U(1),
                        k = 20,
                        C = 4,
                        x = -7,
                        T = 21,
                        N = -1e7,
                        _ = 1e7,
                        B = !1,
                        D = 1,
                        I = 0,
                        R = {
                            prefix: "",
                            groupSize: 3,
                            secondaryGroupSize: 0,
                            groupSeparator: ",",
                            decimalSeparator: ".",
                            fractionGroupSize: 0,
                            fractionGroupSeparator: "\xa0",
                            suffix: ""
                        },
                        M = "0123456789abcdefghijklmnopqrstuvwxyz",
                        L = !0;

                    function U(e, t) {
                        var r, n, i, s, a, u, d, h, f = this;
                        if (!(f instanceof U)) return new U(e, t);
                        if (null == t) {
                            if (e && !0 === e._isBigNumber) {
                                f.s = e.s, !e.c || e.e > _ ? f.c = f.e = null : e.e < N ? f.c = [f.e = 0] : (f.e = e.e, f.c = e.c.slice());
                                return
                            }
                            if ((u = "number" == typeof e) && 0 * e == 0) {
                                if (f.s = 1 / e < 0 ? (e = -e, -1) : 1, e === ~~e) {
                                    for (s = 0, a = e; a >= 10; a /= 10, s++);
                                    s > _ ? f.c = f.e = null : (f.e = s, f.c = [e]);
                                    return
                                }
                                h = String(e)
                            } else {
                                if (!o.test(h = String(e))) return P(f, h, u);
                                f.s = 45 == h.charCodeAt(0) ? (h = h.slice(1), -1) : 1
                            }(s = h.indexOf(".")) > -1 && (h = h.replace(".", "")), (a = h.search(/e/i)) > 0 ? (s < 0 && (s = a), s += +h.slice(a + 1), h = h.substring(0, a)) : s < 0 && (s = h.length)
                        } else {
                            if (g(t, 2, M.length, "Base"), 10 == t && L) return $(f = new U(e), k + f.e + 1, C);
                            if (h = String(e), u = "number" == typeof e) {
                                if (0 * e != 0) return P(f, h, u, t);
                                if (f.s = 1 / e < 0 ? (h = h.slice(1), -1) : 1, U.DEBUG && h.replace(/^0\.0*|\./, "").length > 15) throw Error(c + e)
                            } else f.s = 45 === h.charCodeAt(0) ? (h = h.slice(1), -1) : 1;
                            for (r = M.slice(0, t), s = a = 0, d = h.length; a < d; a++)
                                if (0 > r.indexOf(n = h.charAt(a))) {
                                    if ("." == n) {
                                        if (a > s) {
                                            s = d;
                                            continue
                                        }
                                    } else if (!i && (h == h.toUpperCase() && (h = h.toLowerCase()) || h == h.toLowerCase() && (h = h.toUpperCase()))) {
                                        i = !0, a = -1, s = 0;
                                        continue
                                    }
                                    return P(f, String(e), u, t)
                                }
                            u = !1, (s = (h = E(h, t, 10, f.s)).indexOf(".")) > -1 ? h = h.replace(".", "") : s = h.length
                        }
                        for (a = 0; 48 === h.charCodeAt(a); a++);
                        for (d = h.length; 48 === h.charCodeAt(--d););
                        if (h = h.slice(a, ++d)) {
                            if (d -= a, u && U.DEBUG && d > 15 && (e > 9007199254740991 || e !== l(e))) throw Error(c + f.s * e);
                            if ((s = s - a - 1) > _) f.c = f.e = null;
                            else if (s < N) f.c = [f.e = 0];
                            else {
                                if (f.e = s, f.c = [], a = (s + 1) % 14, s < 0 && (a += 14), a < d) {
                                    for (a && f.c.push(+h.slice(0, a)), d -= 14; a < d;) f.c.push(+h.slice(a, a += 14));
                                    a = 14 - (h = h.slice(a)).length
                                } else a -= d;
                                for (; a--; h += "0");
                                f.c.push(+h)
                            }
                        } else f.c = [f.e = 0]
                    }

                    function j(e, t, r, n) {
                        var i, s, o, a, l;
                        if (null == r ? r = C : g(r, 0, 8), !e.c) return e.toString();
                        if (i = e.c[0], o = e.e, null == t) l = f(e.c), l = 1 == n || 2 == n && (o <= x || o >= T) ? y(l, o) : b(l, o, "0");
                        else if (s = (e = $(new U(e), t, r)).e, a = (l = f(e.c)).length, 1 == n || 2 == n && (t <= s || s <= x)) {
                            for (; a < t; l += "0", a++);
                            l = y(l, s)
                        } else if (t -= o, l = b(l, s, "0"), s + 1 > a) {
                            if (--t > 0)
                                for (l += "."; t--; l += "0");
                        } else if ((t += s - a) > 0)
                            for (s + 1 == a && (l += "."); t--; l += "0");
                        return e.s < 0 && i ? "-" + l : l
                    }

                    function F(e, t) {
                        for (var r, n, i = 1, s = new U(e[0]); i < e.length; i++)(n = new U(e[i])).s && (r = p(s, n)) !== t && (0 !== r || s.s !== t) || (s = n);
                        return s
                    }

                    function H(e, t, r) {
                        for (var n = 1, i = t.length; !t[--i]; t.pop());
                        for (i = t[0]; i >= 10; i /= 10, n++);
                        return (r = n + 14 * r - 1) > _ ? e.c = e.e = null : r < N ? e.c = [e.e = 0] : (e.e = r, e.c = t), e
                    }

                    function $(e, t, r, n) {
                        var i, s, o, u, c, h, f, p = e.c;
                        if (p) {
                            e: {
                                for (i = 1, u = p[0]; u >= 10; u /= 10, i++);
                                if ((s = t - i) < 0) s += 14,
                                o = t,
                                f = l((c = p[h = 0]) / d[i - o - 1] % 10);
                                else if ((h = a((s + 1) / 14)) >= p.length) {
                                    if (n) {
                                        for (; p.length <= h; p.push(0));
                                        c = f = 0, i = 1, s %= 14, o = s - 14 + 1
                                    } else break e
                                } else {
                                    for (i = 1, c = u = p[h]; u >= 10; u /= 10, i++);
                                    s %= 14, f = (o = s - 14 + i) < 0 ? 0 : l(c / d[i - o - 1] % 10)
                                }
                                if (n = n || t < 0 || null != p[h + 1] || (o < 0 ? c : c % d[i - o - 1]), n = r < 4 ? (f || n) && (0 == r || r == (e.s < 0 ? 3 : 2)) : f > 5 || 5 == f && (4 == r || n || 6 == r && (s > 0 ? o > 0 ? c / d[i - o] : 0 : p[h - 1]) % 10 & 1 || r == (e.s < 0 ? 8 : 7)), t < 1 || !p[0]) return p.length = 0, n ? (t -= e.e + 1, p[0] = d[(14 - t % 14) % 14], e.e = -t || 0) : p[0] = e.e = 0, e;
                                if (0 == s ? (p.length = h, u = 1, h--) : (p.length = h + 1, u = d[14 - s], p[h] = o > 0 ? l(c / d[i - o] % d[o]) * u : 0), n)
                                    for (;;) {
                                        if (0 == h) {
                                            for (s = 1, o = p[0]; o >= 10; o /= 10, s++);
                                            for (o = p[0] += u, u = 1; o >= 10; o /= 10, u++);
                                            s != u && (e.e++, 1e14 == p[0] && (p[0] = 1));
                                            break
                                        }
                                        if (p[h] += u, 1e14 != p[h]) break;
                                        p[h--] = 0, u = 1
                                    }
                                for (s = p.length; 0 === p[--s]; p.pop());
                            }
                            e.e > _ ? e.c = e.e = null : e.e < N && (e.c = [e.e = 0])
                        }
                        return e
                    }

                    function K(e) {
                        var t, r = e.e;
                        return null === r ? e.toString() : (t = f(e.c), t = r <= x || r >= T ? y(t, r) : b(t, r, "0"), e.s < 0 ? "-" + t : t)
                    }
                    return U.clone = e, U.ROUND_UP = 0, U.ROUND_DOWN = 1, U.ROUND_CEIL = 2, U.ROUND_FLOOR = 3, U.ROUND_HALF_UP = 4, U.ROUND_HALF_DOWN = 5, U.ROUND_HALF_EVEN = 6, U.ROUND_HALF_CEIL = 7, U.ROUND_HALF_FLOOR = 8, U.EUCLID = 9, U.config = U.set = function(e) {
                        var t, r;
                        if (null != e) {
                            if ("object" == typeof e) {
                                if (e.hasOwnProperty(t = "DECIMAL_PLACES") && (g(r = e[t], 0, 1e9, t), k = r), e.hasOwnProperty(t = "ROUNDING_MODE") && (g(r = e[t], 0, 8, t), C = r), e.hasOwnProperty(t = "EXPONENTIAL_AT") && ((r = e[t]) && r.pop ? (g(r[0], -1e9, 0, t), g(r[1], 0, 1e9, t), x = r[0], T = r[1]) : (g(r, -1e9, 1e9, t), x = -(T = r < 0 ? -r : r))), e.hasOwnProperty(t = "RANGE")) {
                                    if ((r = e[t]) && r.pop) g(r[0], -1e9, -1, t), g(r[1], 1, 1e9, t), N = r[0], _ = r[1];
                                    else if (g(r, -1e9, 1e9, t), r) N = -(_ = r < 0 ? -r : r);
                                    else throw Error(u + t + " cannot be zero: " + r)
                                }
                                if (e.hasOwnProperty(t = "CRYPTO")) {
                                    if (!!(r = e[t]) === r) {
                                        if (r) {
                                            if ("undefined" != typeof crypto && crypto && (crypto.getRandomValues || crypto.randomBytes)) B = r;
                                            else throw B = !r, Error(u + "crypto unavailable")
                                        } else B = r
                                    } else throw Error(u + t + " not true or false: " + r)
                                }
                                if (e.hasOwnProperty(t = "MODULO_MODE") && (g(r = e[t], 0, 9, t), D = r), e.hasOwnProperty(t = "POW_PRECISION") && (g(r = e[t], 0, 1e9, t), I = r), e.hasOwnProperty(t = "FORMAT")) {
                                    if ("object" == typeof(r = e[t])) R = r;
                                    else throw Error(u + t + " not an object: " + r)
                                }
                                if (e.hasOwnProperty(t = "ALPHABET")) {
                                    if ("string" != typeof(r = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(r)) throw Error(u + t + " invalid: " + r);
                                    L = "0123456789" == r.slice(0, 10), M = r
                                }
                            } else throw Error(u + "Object expected: " + e)
                        }
                        return {
                            DECIMAL_PLACES: k,
                            ROUNDING_MODE: C,
                            EXPONENTIAL_AT: [x, T],
                            RANGE: [N, _],
                            CRYPTO: B,
                            MODULO_MODE: D,
                            POW_PRECISION: I,
                            FORMAT: R,
                            ALPHABET: M
                        }
                    }, U.isBigNumber = function(e) {
                        if (!e || !0 !== e._isBigNumber) return !1;
                        if (!U.DEBUG) return !0;
                        var t, r, n = e.c,
                            i = e.e,
                            s = e.s;
                        e: if ("[object Array]" == ({}).toString.call(n)) {
                            if ((1 === s || -1 === s) && i >= -1e9 && i <= 1e9 && i === l(i)) {
                                if (0 === n[0]) {
                                    if (0 === i && 1 === n.length) return !0;
                                    break e
                                }
                                if ((t = (i + 1) % 14) < 1 && (t += 14), String(n[0]).length == t) {
                                    for (t = 0; t < n.length; t++)
                                        if ((r = n[t]) < 0 || r >= 1e14 || r !== l(r)) break e;
                                    if (0 !== r) return !0
                                }
                            }
                        } else
                        if (null === n && null === i && (null === s || 1 === s || -1 === s)) return !0;
                        throw Error(u + "Invalid BigNumber: " + e)
                    }, U.maximum = U.max = function() {
                        return F(arguments, -1)
                    }, U.minimum = U.min = function() {
                        return F(arguments, 1)
                    }, U.random = (r = 9007199254740992 * Math.random() & 2097151 ? function() {
                        return l(9007199254740992 * Math.random())
                    } : function() {
                        return (1073741824 * Math.random() | 0) * 8388608 + (8388608 * Math.random() | 0)
                    }, function(e) {
                        var t, n, i, s, o, c = 0,
                            h = [],
                            f = new U(O);
                        if (null == e ? e = k : g(e, 0, 1e9), s = a(e / 14), B) {
                            if (crypto.getRandomValues) {
                                for (t = crypto.getRandomValues(new Uint32Array(s *= 2)); c < s;)(o = 131072 * t[c] + (t[c + 1] >>> 11)) >= 9e15 ? (n = crypto.getRandomValues(new Uint32Array(2)), t[c] = n[0], t[c + 1] = n[1]) : (h.push(o % 1e14), c += 2);
                                c = s / 2
                            } else if (crypto.randomBytes) {
                                for (t = crypto.randomBytes(s *= 7); c < s;)(o = (31 & t[c]) * 281474976710656 + 1099511627776 * t[c + 1] + 4294967296 * t[c + 2] + 16777216 * t[c + 3] + (t[c + 4] << 16) + (t[c + 5] << 8) + t[c + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t, c) : (h.push(o % 1e14), c += 7);
                                c = s / 7
                            } else throw B = !1, Error(u + "crypto unavailable")
                        }
                        if (!B)
                            for (; c < s;)(o = r()) < 9e15 && (h[c++] = o % 1e14);
                        for (s = h[--c], e %= 14, s && e && (o = d[14 - e], h[c] = l(s / o) * o); 0 === h[c]; h.pop(), c--);
                        if (c < 0) h = [i = 0];
                        else {
                            for (i = -1; 0 === h[0]; h.splice(0, 1), i -= 14);
                            for (c = 1, o = h[0]; o >= 10; o /= 10, c++);
                            c < 14 && (i -= 14 - c)
                        }
                        return f.e = i, f.c = h, f
                    }), U.sum = function() {
                        for (var e = 1, t = arguments, r = new U(t[0]); e < t.length;) r = r.plus(t[e++]);
                        return r
                    }, E = function() {
                        var e = "0123456789";

                        function t(e, t, r, n) {
                            for (var i, s, o = [0], a = 0, l = e.length; a < l;) {
                                for (s = o.length; s--; o[s] *= t);
                                for (o[0] += n.indexOf(e.charAt(a++)), i = 0; i < o.length; i++) o[i] > r - 1 && (null == o[i + 1] && (o[i + 1] = 0), o[i + 1] += o[i] / r | 0, o[i] %= r)
                            }
                            return o.reverse()
                        }
                        return function(r, n, i, s, o) {
                            var a, l, u, c, d, h, p, g, m = r.indexOf("."),
                                y = k,
                                w = C;
                            for (m >= 0 && (c = I, I = 0, r = r.replace(".", ""), h = (g = new U(n)).pow(r.length - m), I = c, g.c = t(b(f(h.c), h.e, "0"), 10, i, e), g.e = g.c.length), u = c = (p = t(r, n, i, o ? (a = M, e) : (a = e, M))).length; 0 == p[--c]; p.pop());
                            if (!p[0]) return a.charAt(0);
                            if (m < 0 ? --u : (h.c = p, h.e = u, h.s = s, p = (h = v(h, g, y, w, i)).c, d = h.r, u = h.e), m = p[l = u + y + 1], c = i / 2, d = d || l < 0 || null != p[l + 1], d = w < 4 ? (null != m || d) && (0 == w || w == (h.s < 0 ? 3 : 2)) : m > c || m == c && (4 == w || d || 6 == w && 1 & p[l - 1] || w == (h.s < 0 ? 8 : 7)), l < 1 || !p[0]) r = d ? b(a.charAt(1), -y, a.charAt(0)) : a.charAt(0);
                            else {
                                if (p.length = l, d)
                                    for (--i; ++p[--l] > i;) p[l] = 0, l || (++u, p = [1].concat(p));
                                for (c = p.length; !p[--c];);
                                for (m = 0, r = ""; m <= c; r += a.charAt(p[m++]));
                                r = b(r, u, a.charAt(0))
                            }
                            return r
                        }
                    }(), v = function() {
                        function e(e, t, r) {
                            var n, i, s, o, a = 0,
                                l = e.length,
                                u = t % 1e7,
                                c = t / 1e7 | 0;
                            for (e = e.slice(); l--;) n = c * (s = e[l] % 1e7) + (o = e[l] / 1e7 | 0) * u, a = ((i = u * s + n % 1e7 * 1e7 + a) / r | 0) + (n / 1e7 | 0) + c * o, e[l] = i % r;
                            return a && (e = [a].concat(e)), e
                        }

                        function t(e, t, r, n) {
                            var i, s;
                            if (r != n) s = r > n ? 1 : -1;
                            else
                                for (i = s = 0; i < r; i++)
                                    if (e[i] != t[i]) {
                                        s = e[i] > t[i] ? 1 : -1;
                                        break
                                    } return s
                        }

                        function r(e, t, r, n) {
                            for (var i = 0; r--;) e[r] -= i, i = e[r] < t[r] ? 1 : 0, e[r] = i * n + e[r] - t[r];
                            for (; !e[0] && e.length > 1; e.splice(0, 1));
                        }
                        return function(n, i, s, o, a) {
                            var u, c, d, f, p, g, m, y, b, w, A, v, E, P, S, O, k, C = n.s == i.s ? 1 : -1,
                                x = n.c,
                                T = i.c;
                            if (!x || !x[0] || !T || !T[0]) return new U(n.s && i.s && (x ? !T || x[0] != T[0] : T) ? x && 0 == x[0] || !T ? 0 * C : C / 0 : NaN);
                            for (b = (y = new U(C)).c = [], C = s + (c = n.e - i.e) + 1, a || (a = 1e14, c = h(n.e / 14) - h(i.e / 14), C = C / 14 | 0), d = 0; T[d] == (x[d] || 0); d++);
                            if (T[d] > (x[d] || 0) && c--, C < 0) b.push(1), f = !0;
                            else {
                                for (P = x.length, O = T.length, d = 0, C += 2, (p = l(a / (T[0] + 1))) > 1 && (T = e(T, p, a), x = e(x, p, a), O = T.length, P = x.length), E = O, A = (w = x.slice(0, O)).length; A < O; w[A++] = 0);
                                k = [0].concat(k = T.slice()), S = T[0], T[1] >= a / 2 && S++;
                                do {
                                    if (p = 0, (u = t(T, w, O, A)) < 0) {
                                        if (v = w[0], O != A && (v = v * a + (w[1] || 0)), (p = l(v / S)) > 1)
                                            for (p >= a && (p = a - 1), m = (g = e(T, p, a)).length, A = w.length; 1 == t(g, w, m, A);) p--, r(g, O < m ? k : T, m, a), m = g.length, u = 1;
                                        else 0 == p && (u = p = 1), m = (g = T.slice()).length;
                                        if (m < A && (g = [0].concat(g)), r(w, g, A, a), A = w.length, -1 == u)
                                            for (; 1 > t(T, w, O, A);) p++, r(w, O < A ? k : T, A, a), A = w.length
                                    } else 0 === u && (p++, w = [0]);
                                    b[d++] = p, w[0] ? w[A++] = x[E] || 0 : (w = [x[E]], A = 1)
                                } while ((E++ < P || null != w[0]) && C--);
                                f = null != w[0], b[0] || b.splice(0, 1)
                            }
                            if (1e14 == a) {
                                for (d = 1, C = b[0]; C >= 10; C /= 10, d++);
                                $(y, s + (y.e = d + 14 * c - 1) + 1, o, f)
                            } else y.e = c, y.r = +f;
                            return y
                        }
                    }(), n = /^(-?)0([xbo])(?=\w[\w.]*$)/i, i = /^([^.]+)\.$/, s = /^\.([^.]+)$/, w = /^-?(Infinity|NaN)$/, A = /^\s*\+(?=[\w.])|^\s+|\s+$/g, P = function(e, t, r, o) {
                        var a, l = r ? t : t.replace(A, "");
                        if (w.test(l)) e.s = isNaN(l) ? null : l < 0 ? -1 : 1;
                        else {
                            if (!r && (l = l.replace(n, function(e, t, r) {
                                    return a = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8, o && o != a ? e : t
                                }), o && (a = o, l = l.replace(i, "$1").replace(s, "0.$1")), t != l)) return new U(l, a);
                            if (U.DEBUG) throw Error(u + "Not a" + (o ? " base " + o : "") + " number: " + t);
                            e.s = null
                        }
                        e.c = e.e = null
                    }, S.absoluteValue = S.abs = function() {
                        var e = new U(this);
                        return e.s < 0 && (e.s = 1), e
                    }, S.comparedTo = function(e, t) {
                        return p(this, new U(e, t))
                    }, S.decimalPlaces = S.dp = function(e, t) {
                        var r, n, i;
                        if (null != e) return g(e, 0, 1e9), null == t ? t = C : g(t, 0, 8), $(new U(this), e + this.e + 1, t);
                        if (!(r = this.c)) return null;
                        if (n = ((i = r.length - 1) - h(this.e / 14)) * 14, i = r[i])
                            for (; i % 10 == 0; i /= 10, n--);
                        return n < 0 && (n = 0), n
                    }, S.dividedBy = S.div = function(e, t) {
                        return v(this, new U(e, t), k, C)
                    }, S.dividedToIntegerBy = S.idiv = function(e, t) {
                        return v(this, new U(e, t), 0, 1)
                    }, S.exponentiatedBy = S.pow = function(e, t) {
                        var r, n, i, s, o, c, d, h, f, p = this;
                        if ((e = new U(e)).c && !e.isInteger()) throw Error(u + "Exponent not an integer: " + K(e));
                        if (null != t && (t = new U(t)), c = e.e > 14, !p.c || !p.c[0] || 1 == p.c[0] && !p.e && 1 == p.c.length || !e.c || !e.c[0]) return f = new U(Math.pow(+K(p), c ? e.s * (2 - m(e)) : +K(e))), t ? f.mod(t) : f;
                        if (d = e.s < 0, t) {
                            if (t.c ? !t.c[0] : !t.s) return new U(NaN);
                            (n = !d && p.isInteger() && t.isInteger()) && (p = p.mod(t))
                        } else {
                            if (e.e > 9 && (p.e > 0 || p.e < -1 || (0 == p.e ? p.c[0] > 1 || c && p.c[1] >= 24e7 : p.c[0] < 8e13 || c && p.c[0] <= 9999975e7))) return s = p.s < 0 && m(e) ? -0 : 0, p.e > -1 && (s = 1 / s), new U(d ? 1 / s : s);
                            I && (s = a(I / 14 + 2))
                        }
                        for (c ? (r = new U(.5), d && (e.s = 1), h = m(e)) : h = (i = Math.abs(+K(e))) % 2, f = new U(O);;) {
                            if (h) {
                                if (!(f = f.times(p)).c) break;
                                s ? f.c.length > s && (f.c.length = s) : n && (f = f.mod(t))
                            }
                            if (i) {
                                if (0 === (i = l(i / 2))) break;
                                h = i % 2
                            } else if ($(e = e.times(r), e.e + 1, 1), e.e > 14) h = m(e);
                            else {
                                if (0 == (i = +K(e))) break;
                                h = i % 2
                            }
                            p = p.times(p), s ? p.c && p.c.length > s && (p.c.length = s) : n && (p = p.mod(t))
                        }
                        return n ? f : (d && (f = O.div(f)), t ? f.mod(t) : s ? $(f, I, C, o) : f)
                    }, S.integerValue = function(e) {
                        var t = new U(this);
                        return null == e ? e = C : g(e, 0, 8), $(t, t.e + 1, e)
                    }, S.isEqualTo = S.eq = function(e, t) {
                        return 0 === p(this, new U(e, t))
                    }, S.isFinite = function() {
                        return !!this.c
                    }, S.isGreaterThan = S.gt = function(e, t) {
                        return p(this, new U(e, t)) > 0
                    }, S.isGreaterThanOrEqualTo = S.gte = function(e, t) {
                        return 1 === (t = p(this, new U(e, t))) || 0 === t
                    }, S.isInteger = function() {
                        return !!this.c && h(this.e / 14) > this.c.length - 2
                    }, S.isLessThan = S.lt = function(e, t) {
                        return 0 > p(this, new U(e, t))
                    }, S.isLessThanOrEqualTo = S.lte = function(e, t) {
                        return -1 === (t = p(this, new U(e, t))) || 0 === t
                    }, S.isNaN = function() {
                        return !this.s
                    }, S.isNegative = function() {
                        return this.s < 0
                    }, S.isPositive = function() {
                        return this.s > 0
                    }, S.isZero = function() {
                        return !!this.c && 0 == this.c[0]
                    }, S.minus = function(e, t) {
                        var r, n, i, s, o = this.s;
                        if (t = (e = new U(e, t)).s, !o || !t) return new U(NaN);
                        if (o != t) return e.s = -t, this.plus(e);
                        var a = this.e / 14,
                            l = e.e / 14,
                            u = this.c,
                            c = e.c;
                        if (!a || !l) {
                            if (!u || !c) return u ? (e.s = -t, e) : new U(c ? this : NaN);
                            if (!u[0] || !c[0]) return c[0] ? (e.s = -t, e) : new U(u[0] ? this : 3 == C ? -0 : 0)
                        }
                        if (a = h(a), l = h(l), u = u.slice(), o = a - l) {
                            for ((s = o < 0) ? (o = -o, i = u) : (l = a, i = c), i.reverse(), t = o; t--; i.push(0));
                            i.reverse()
                        } else
                            for (n = (s = (o = u.length) < (t = c.length)) ? o : t, o = t = 0; t < n; t++)
                                if (u[t] != c[t]) {
                                    s = u[t] < c[t];
                                    break
                                } if (s && (i = u, u = c, c = i, e.s = -e.s), (t = (n = c.length) - (r = u.length)) > 0)
                            for (; t--; u[r++] = 0);
                        for (t = 1e14 - 1; n > o;) {
                            if (u[--n] < c[n]) {
                                for (r = n; r && !u[--r]; u[r] = t);
                                --u[r], u[n] += 1e14
                            }
                            u[n] -= c[n]
                        }
                        for (; 0 == u[0]; u.splice(0, 1), --l);
                        return u[0] ? H(e, u, l) : (e.s = 3 == C ? -1 : 1, e.c = [e.e = 0], e)
                    }, S.modulo = S.mod = function(e, t) {
                        var r, n;
                        return (e = new U(e, t), this.c && e.s && (!e.c || e.c[0])) ? e.c && (!this.c || this.c[0]) ? (9 == D ? (n = e.s, e.s = 1, r = v(this, e, 0, 3), e.s = n, r.s *= n) : r = v(this, e, 0, D), (e = this.minus(r.times(e))).c[0] || 1 != D || (e.s = this.s), e) : new U(this) : new U(NaN)
                    }, S.multipliedBy = S.times = function(e, t) {
                        var r, n, i, s, o, a, l, u, c, d, f, p, g, m = this.c,
                            y = (e = new U(e, t)).c;
                        if (!m || !y || !m[0] || !y[0]) return this.s && e.s && (!m || m[0] || y) && (!y || y[0] || m) ? (e.s *= this.s, m && y ? (e.c = [0], e.e = 0) : e.c = e.e = null) : e.c = e.e = e.s = null, e;
                        for (n = h(this.e / 14) + h(e.e / 14), e.s *= this.s, (l = m.length) < (d = y.length) && (g = m, m = y, y = g, i = l, l = d, d = i), i = l + d, g = []; i--; g.push(0));
                        for (i = d; --i >= 0;) {
                            for (r = 0, f = y[i] % 1e7, p = y[i] / 1e7 | 0, o = l, s = i + o; s > i;) a = p * (u = m[--o] % 1e7) + (c = m[o] / 1e7 | 0) * f, r = ((u = f * u + a % 1e7 * 1e7 + g[s] + r) / 1e14 | 0) + (a / 1e7 | 0) + p * c, g[s--] = u % 1e14;
                            g[s] = r
                        }
                        return r ? ++n : g.splice(0, 1), H(e, g, n)
                    }, S.negated = function() {
                        var e = new U(this);
                        return e.s = -e.s || null, e
                    }, S.plus = function(e, t) {
                        var r, n = this.s;
                        if (t = (e = new U(e, t)).s, !n || !t) return new U(NaN);
                        if (n != t) return e.s = -t, this.minus(e);
                        var i = this.e / 14,
                            s = e.e / 14,
                            o = this.c,
                            a = e.c;
                        if (!i || !s) {
                            if (!o || !a) return new U(n / 0);
                            if (!o[0] || !a[0]) return a[0] ? e : new U(o[0] ? this : 0 * n)
                        }
                        if (i = h(i), s = h(s), o = o.slice(), n = i - s) {
                            for (n > 0 ? (s = i, r = a) : (n = -n, r = o), r.reverse(); n--; r.push(0));
                            r.reverse()
                        }
                        for ((n = o.length) - (t = a.length) < 0 && (r = a, a = o, o = r, t = n), n = 0; t;) n = (o[--t] = o[t] + a[t] + n) / 1e14 | 0, o[t] = 1e14 === o[t] ? 0 : o[t] % 1e14;
                        return n && (o = [n].concat(o), ++s), H(e, o, s)
                    }, S.precision = S.sd = function(e, t) {
                        var r, n, i;
                        if (null != e && !!e !== e) return g(e, 1, 1e9), null == t ? t = C : g(t, 0, 8), $(new U(this), e, t);
                        if (!(r = this.c)) return null;
                        if (n = 14 * (i = r.length - 1) + 1, i = r[i]) {
                            for (; i % 10 == 0; i /= 10, n--);
                            for (i = r[0]; i >= 10; i /= 10, n++);
                        }
                        return e && this.e + 1 > n && (n = this.e + 1), n
                    }, S.shiftedBy = function(e) {
                        return g(e, -9007199254740991, 9007199254740991), this.times("1e" + e)
                    }, S.squareRoot = S.sqrt = function() {
                        var e, t, r, n, i, s = this.c,
                            o = this.s,
                            a = this.e,
                            l = k + 4,
                            u = new U("0.5");
                        if (1 !== o || !s || !s[0]) return new U(!o || o < 0 && (!s || s[0]) ? NaN : s ? this : 1 / 0);
                        if (0 == (o = Math.sqrt(+K(this))) || o == 1 / 0 ? (((t = f(s)).length + a) % 2 == 0 && (t += "0"), o = Math.sqrt(+t), a = h((a + 1) / 2) - (a < 0 || a % 2), t = o == 1 / 0 ? "5e" + a : (t = o.toExponential()).slice(0, t.indexOf("e") + 1) + a, r = new U(t)) : r = new U(o + ""), r.c[0]) {
                            for ((o = (a = r.e) + l) < 3 && (o = 0);;)
                                if (i = r, r = u.times(i.plus(v(this, i, l, 1))), f(i.c).slice(0, o) === (t = f(r.c)).slice(0, o)) {
                                    if (r.e < a && --o, "9999" != (t = t.slice(o - 3, o + 1)) && (n || "4999" != t)) {
                                        +t && (+t.slice(1) || "5" != t.charAt(0)) || ($(r, r.e + k + 2, 1), e = !r.times(r).eq(this));
                                        break
                                    }
                                    if (!n && ($(i, i.e + k + 2, 0), i.times(i).eq(this))) {
                                        r = i;
                                        break
                                    }
                                    l += 4, o += 4, n = 1
                                }
                        }
                        return $(r, r.e + k + 1, C, e)
                    }, S.toExponential = function(e, t) {
                        return null != e && (g(e, 0, 1e9), e++), j(this, e, t, 1)
                    }, S.toFixed = function(e, t) {
                        return null != e && (g(e, 0, 1e9), e = e + this.e + 1), j(this, e, t)
                    }, S.toFormat = function(e, t, r) {
                        var n;
                        if (null == r) null != e && t && "object" == typeof t ? (r = t, t = null) : e && "object" == typeof e ? (r = e, e = t = null) : r = R;
                        else if ("object" != typeof r) throw Error(u + "Argument not an object: " + r);
                        if (n = this.toFixed(e, t), this.c) {
                            var i, s = n.split("."),
                                o = +r.groupSize,
                                a = +r.secondaryGroupSize,
                                l = r.groupSeparator || "",
                                c = s[0],
                                d = s[1],
                                h = this.s < 0,
                                f = h ? c.slice(1) : c,
                                p = f.length;
                            if (a && (i = o, o = a, a = i, p -= i), o > 0 && p > 0) {
                                for (i = p % o || o, c = f.substr(0, i); i < p; i += o) c += l + f.substr(i, o);
                                a > 0 && (c += l + f.slice(i)), h && (c = "-" + c)
                            }
                            n = d ? c + (r.decimalSeparator || "") + ((a = +r.fractionGroupSize) ? d.replace(RegExp("\\d{" + a + "}\\B", "g"), "$&" + (r.fractionGroupSeparator || "")) : d) : c
                        }
                        return (r.prefix || "") + n + (r.suffix || "")
                    }, S.toFraction = function(e) {
                        var t, r, n, i, s, o, a, l, c, h, p, g, m = this.c;
                        if (null != e && (!(a = new U(e)).isInteger() && (a.c || 1 !== a.s) || a.lt(O))) throw Error(u + "Argument " + (a.isInteger() ? "out of range: " : "not an integer: ") + K(a));
                        if (!m) return new U(this);
                        for (t = new U(O), c = r = new U(O), n = l = new U(O), g = f(m), s = t.e = g.length - this.e - 1, t.c[0] = d[(o = s % 14) < 0 ? 14 + o : o], e = !e || a.comparedTo(t) > 0 ? s > 0 ? t : c : a, o = _, _ = 1 / 0, a = new U(g), l.c[0] = 0; h = v(a, t, 0, 1), 1 != (i = r.plus(h.times(n))).comparedTo(e);) r = n, n = i, c = l.plus(h.times(i = c)), l = i, t = a.minus(h.times(i = t)), a = i;
                        return i = v(e.minus(r), n, 0, 1), l = l.plus(i.times(c)), r = r.plus(i.times(n)), l.s = c.s = this.s, s *= 2, p = 1 > v(c, n, s, C).minus(this).abs().comparedTo(v(l, r, s, C).minus(this).abs()) ? [c, n] : [l, r], _ = o, p
                    }, S.toNumber = function() {
                        return +K(this)
                    }, S.toPrecision = function(e, t) {
                        return null != e && g(e, 1, 1e9), j(this, e, t, 2)
                    }, S.toString = function(e) {
                        var t, r = this,
                            n = r.s,
                            i = r.e;
                        return null === i ? n ? (t = "Infinity", n < 0 && (t = "-" + t)) : t = "NaN" : (null == e ? t = i <= x || i >= T ? y(f(r.c), i) : b(f(r.c), i, "0") : 10 === e && L ? t = b(f((r = $(new U(r), k + i + 1, C)).c), r.e, "0") : (g(e, 2, M.length, "Base"), t = E(b(f(r.c), i, "0"), 10, e, n, !0)), n < 0 && r.c[0] && (t = "-" + t)), t
                    }, S.valueOf = S.toJSON = function() {
                        return K(this)
                    }, S._isBigNumber = !0, null != t && U.set(t), U
                }()).default = s.BigNumber = s, void 0 !== (n = (function() {
                    return s
                }).call(t, r, t, e)) && (e.exports = n)
            }(0)
        },
        97653: function(e) {
            "use strict";
            var t = "%[a-f0-9]{2}",
                r = RegExp("(" + t + ")|([^%]+?)", "gi"),
                n = RegExp("(" + t + ")+", "gi");
            e.exports = function(e) {
                if ("string" != typeof e) throw TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof e + "`");
                try {
                    return e = e.replace(/\+/g, " "), decodeURIComponent(e)
                } catch (t) {
                    return function(e) {
                        for (var t = {
                                "%FE%FF": "��",
                                "%FF%FE": "��"
                            }, i = n.exec(e); i;) {
                            try {
                                t[i[0]] = decodeURIComponent(i[0])
                            } catch (e) {
                                var s = function(e) {
                                    try {
                                        return decodeURIComponent(e)
                                    } catch (i) {
                                        for (var t = e.match(r) || [], n = 1; n < t.length; n++) t = (e = (function e(t, r) {
                                            try {
                                                return [decodeURIComponent(t.join(""))]
                                            } catch (e) {}
                                            if (1 === t.length) return t;
                                            r = r || 1;
                                            var n = t.slice(0, r),
                                                i = t.slice(r);
                                            return Array.prototype.concat.call([], e(n), e(i))
                                        })(t, n).join("")).match(r) || [];
                                        return e
                                    }
                                }(i[0]);
                                s !== i[0] && (t[i[0]] = s)
                            }
                            i = n.exec(e)
                        }
                        t["%C2"] = "�";
                        for (var o = Object.keys(t), a = 0; a < o.length; a++) {
                            var l = o[a];
                            e = e.replace(RegExp(l, "g"), t[l])
                        }
                        return e
                    }(e)
                }
            }
        },
        48520: function(e, t, r) {
            "use strict";
            r.d(t, {
                qY: function() {
                    return f
                }
            });
            var n = r(20982),
                i = function(e, t, r) {
                    if (r || 2 == arguments.length)
                        for (var n, i = 0, s = t.length; i < s; i++) !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                    return e.concat(n || Array.prototype.slice.call(t))
                },
                s = function(e, t, r) {
                    this.name = e, this.version = t, this.os = r, this.type = "browser"
                },
                o = function(e) {
                    this.version = e, this.type = "node", this.name = "node", this.os = n.platform
                },
                a = function(e, t, r, n) {
                    this.name = e, this.version = t, this.os = r, this.bot = n, this.type = "bot-device"
                },
                l = function() {
                    this.type = "bot", this.bot = !0, this.name = "bot", this.version = null, this.os = null
                },
                u = function() {
                    this.type = "react-native", this.name = "react-native", this.version = null, this.os = null
                },
                c = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
                d = [
                    ["aol", /AOLShield\/([0-9\._]+)/],
                    ["edge", /Edge\/([0-9\._]+)/],
                    ["edge-ios", /EdgiOS\/([0-9\._]+)/],
                    ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
                    ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
                    ["samsung", /SamsungBrowser\/([0-9\.]+)/],
                    ["silk", /\bSilk\/([0-9._-]+)\b/],
                    ["miui", /MiuiBrowser\/([0-9\.]+)$/],
                    ["beaker", /BeakerBrowser\/([0-9\.]+)/],
                    ["edge-chromium", /EdgA?\/([0-9\.]+)/],
                    ["chromium-webview", /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
                    ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
                    ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
                    ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
                    ["fxios", /FxiOS\/([0-9\.]+)/],
                    ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
                    ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
                    ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
                    ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
                    ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
                    ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
                    ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
                    ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
                    ["ie", /MSIE\s(7\.0)/],
                    ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
                    ["android", /Android\s([0-9\.]+)/],
                    ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
                    ["safari", /Version\/([0-9\._]+).*Safari/],
                    ["facebook", /FB[AS]V\/([0-9\.]+)/],
                    ["instagram", /Instagram\s([0-9\.]+)/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
                    ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
                    ["curl", /^curl\/([0-9\.]+)$/],
                    ["searchbot", /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/]
                ],
                h = [
                    ["iOS", /iP(hone|od|ad)/],
                    ["Android OS", /Android/],
                    ["BlackBerry OS", /BlackBerry|BB10/],
                    ["Windows Mobile", /IEMobile/],
                    ["Amazon OS", /Kindle/],
                    ["Windows 3.11", /Win16/],
                    ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
                    ["Windows 98", /(Windows 98)|(Win98)/],
                    ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
                    ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
                    ["Windows Server 2003", /(Windows NT 5.2)/],
                    ["Windows Vista", /(Windows NT 6.0)/],
                    ["Windows 7", /(Windows NT 6.1)/],
                    ["Windows 8", /(Windows NT 6.2)/],
                    ["Windows 8.1", /(Windows NT 6.3)/],
                    ["Windows 10", /(Windows NT 10.0)/],
                    ["Windows ME", /Windows ME/],
                    ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
                    ["Open BSD", /OpenBSD/],
                    ["Sun OS", /SunOS/],
                    ["Chrome OS", /CrOS/],
                    ["Linux", /(Linux)|(X11)/],
                    ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
                    ["QNX", /QNX/],
                    ["BeOS", /BeOS/],
                    ["OS/2", /OS\/2/]
                ];

            function f(e) {
                return e ? p(e) : "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product ? new u : "undefined" != typeof navigator ? p(navigator.userAgent) : void 0 !== n && n.version ? new o(n.version.slice(1)) : null
            }

            function p(e) {
                var t = "" !== e && d.reduce(function(t, r) {
                    var n = r[0],
                        i = r[1];
                    if (t) return t;
                    var s = i.exec(e);
                    return !!s && [n, s]
                }, !1);
                if (!t) return null;
                var r = t[0],
                    n = t[1];
                if ("searchbot" === r) return new l;
                var o = n[1] && n[1].split(".").join("_").split("_").slice(0, 3);
                o ? o.length < 3 && (o = i(i([], o, !0), function(e) {
                    for (var t = [], r = 0; r < e; r++) t.push("0");
                    return t
                }(3 - o.length), !0)) : o = [];
                var u = o.join("."),
                    f = function(e) {
                        for (var t = 0, r = h.length; t < r; t++) {
                            var n = h[t],
                                i = n[0];
                            if (n[1].exec(e)) return i
                        }
                        return null
                    }(e),
                    p = c.exec(e);
                return p && p[1] ? new a(r, u, f, p[1]) : new s(r, u, f)
            }
        },
        64365: function(e) {
            "use strict";
            var t = {
                single_source_shortest_paths: function(e, r, n) {
                    var i, s, o, a, l, u, c, d = {},
                        h = {};
                    h[r] = 0;
                    var f = t.PriorityQueue.make();
                    for (f.push(r, 0); !f.empty();)
                        for (o in s = (i = f.pop()).value, a = i.cost, l = e[s] || {}) l.hasOwnProperty(o) && (u = a + l[o], c = h[o], (void 0 === h[o] || c > u) && (h[o] = u, f.push(o, u), d[o] = s));
                    if (void 0 !== n && void 0 === h[n]) throw Error(["Could not find a path from ", r, " to ", n, "."].join(""));
                    return d
                },
                extract_shortest_path_from_predecessor_list: function(e, t) {
                    for (var r = [], n = t; n;) r.push(n), e[n], n = e[n];
                    return r.reverse(), r
                },
                find_path: function(e, r, n) {
                    var i = t.single_source_shortest_paths(e, r, n);
                    return t.extract_shortest_path_from_predecessor_list(i, n)
                },
                PriorityQueue: {
                    make: function(e) {
                        var r, n = t.PriorityQueue,
                            i = {};
                        for (r in e = e || {}, n) n.hasOwnProperty(r) && (i[r] = n[r]);
                        return i.queue = [], i.sorter = e.sorter || n.default_sorter, i
                    },
                    default_sorter: function(e, t) {
                        return e.cost - t.cost
                    },
                    push: function(e, t) {
                        this.queue.push({
                            value: e,
                            cost: t
                        }), this.queue.sort(this.sorter)
                    },
                    pop: function() {
                        return this.queue.shift()
                    },
                    empty: function() {
                        return 0 === this.queue.length
                    }
                }
            };
            e.exports = t
        },
        27639: function(e) {
            "use strict";
            e.exports = function(e) {
                for (var t = [], r = e.length, n = 0; n < r; n++) {
                    var i = e.charCodeAt(n);
                    if (i >= 55296 && i <= 56319 && r > n + 1) {
                        var s = e.charCodeAt(n + 1);
                        s >= 56320 && s <= 57343 && (i = (i - 55296) * 1024 + s - 56320 + 65536, n += 1)
                    }
                    if (i < 128) {
                        t.push(i);
                        continue
                    }
                    if (i < 2048) {
                        t.push(i >> 6 | 192), t.push(63 & i | 128);
                        continue
                    }
                    if (i < 55296 || i >= 57344 && i < 65536) {
                        t.push(i >> 12 | 224), t.push(i >> 6 & 63 | 128), t.push(63 & i | 128);
                        continue
                    }
                    if (i >= 65536 && i <= 1114111) {
                        t.push(i >> 18 | 240), t.push(i >> 12 & 63 | 128), t.push(i >> 6 & 63 | 128), t.push(63 & i | 128);
                        continue
                    }
                    t.push(239, 191, 189)
                }
                return new Uint8Array(t).buffer
            }
        },
        72945: function(e, t) {
            "use strict";

            function r(e) {
                if (!Number.isSafeInteger(e) || e < 0) throw Error(`Wrong positive integer: ${e}`)
            }

            function n(e) {
                if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`)
            }

            function i(e, ...t) {
                if (!(e instanceof Uint8Array)) throw TypeError("Expected Uint8Array");
                if (t.length > 0 && !t.includes(e.length)) throw TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)
            }

            function s(e) {
                if ("function" != typeof e || "function" != typeof e.create) throw Error("Hash should be wrapped by utils.wrapConstructor");
                r(e.outputLen), r(e.blockLen)
            }

            function o(e, t = !0) {
                if (e.destroyed) throw Error("Hash instance has been destroyed");
                if (t && e.finished) throw Error("Hash#digest() has already been called")
            }

            function a(e, t) {
                i(e);
                let r = t.outputLen;
                if (e.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0, t.number = r, t.bool = n, t.bytes = i, t.hash = s, t.exists = o, t.output = a, t.default = {
                number: r,
                bool: n,
                bytes: i,
                hash: s,
                exists: o,
                output: a
            }
        },
        4169: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SHA2 = void 0;
            let n = r(72945),
                i = r(30537);
            class s extends i.Hash {
                constructor(e, t, r, n) {
                    super(), this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = n, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = (0, i.createView)(this.buffer)
                }
                update(e) {
                    n.default.exists(this);
                    let {
                        view: t,
                        buffer: r,
                        blockLen: s
                    } = this;
                    e = (0, i.toBytes)(e);
                    let o = e.length;
                    for (let n = 0; n < o;) {
                        let a = Math.min(s - this.pos, o - n);
                        if (a === s) {
                            let t = (0, i.createView)(e);
                            for (; s <= o - n; n += s) this.process(t, n);
                            continue
                        }
                        r.set(e.subarray(n, n + a), this.pos), this.pos += a, n += a, this.pos === s && (this.process(t, 0), this.pos = 0)
                    }
                    return this.length += e.length, this.roundClean(), this
                }
                digestInto(e) {
                    n.default.exists(this), n.default.output(e, this), this.finished = !0;
                    let {
                        buffer: t,
                        view: r,
                        blockLen: s,
                        isLE: o
                    } = this, {
                        pos: a
                    } = this;
                    t[a++] = 128, this.buffer.subarray(a).fill(0), this.padOffset > s - a && (this.process(r, 0), a = 0);
                    for (let e = a; e < s; e++) t[e] = 0;
                    ! function(e, t, r, n) {
                        if ("function" == typeof e.setBigUint64) return e.setBigUint64(t, r, n);
                        let i = BigInt(32),
                            s = BigInt(4294967295),
                            o = Number(r >> i & s),
                            a = Number(r & s),
                            l = n ? 4 : 0,
                            u = n ? 0 : 4;
                        e.setUint32(t + l, o, n), e.setUint32(t + u, a, n)
                    }(r, s - 8, BigInt(8 * this.length), o), this.process(r, 0);
                    let l = (0, i.createView)(e);
                    this.get().forEach((e, t) => l.setUint32(4 * t, e, o))
                }
                digest() {
                    let {
                        buffer: e,
                        outputLen: t
                    } = this;
                    this.digestInto(e);
                    let r = e.slice(0, t);
                    return this.destroy(), r
                }
                _cloneInto(e) {
                    e || (e = new this.constructor), e.set(...this.get());
                    let {
                        blockLen: t,
                        buffer: r,
                        length: n,
                        finished: i,
                        destroyed: s,
                        pos: o
                    } = this;
                    return e.length = n, e.pos = o, e.finished = i, e.destroyed = s, n % t && e.buffer.set(r), e
                }
            }
            t.SHA2 = s
        },
        99574: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.add = t.toBig = t.split = t.fromBig = void 0;
            let r = BigInt(4294967296 - 1),
                n = BigInt(32);

            function i(e, t = !1) {
                return t ? {
                    h: Number(e & r),
                    l: Number(e >> n & r)
                } : {
                    h: 0 | Number(e >> n & r),
                    l: 0 | Number(e & r)
                }
            }

            function s(e, t = !1) {
                let r = new Uint32Array(e.length),
                    n = new Uint32Array(e.length);
                for (let s = 0; s < e.length; s++) {
                    let {
                        h: o,
                        l: a
                    } = i(e[s], t);
                    [r[s], n[s]] = [o, a]
                }
                return [r, n]
            }

            function o(e, t, r, n) {
                let i = (t >>> 0) + (n >>> 0);
                return {
                    h: e + r + (i / 4294967296 | 0) | 0,
                    l: 0 | i
                }
            }
            t.fromBig = i, t.split = s, t.toBig = (e, t) => BigInt(e >>> 0) << n | BigInt(t >>> 0), t.add = o;
            let a = {
                fromBig: i,
                split: s,
                toBig: t.toBig,
                shrSH: (e, t, r) => e >>> r,
                shrSL: (e, t, r) => e << 32 - r | t >>> r,
                rotrSH: (e, t, r) => e >>> r | t << 32 - r,
                rotrSL: (e, t, r) => e << 32 - r | t >>> r,
                rotrBH: (e, t, r) => e << 64 - r | t >>> r - 32,
                rotrBL: (e, t, r) => e >>> r - 32 | t << 64 - r,
                rotr32H: (e, t) => t,
                rotr32L: (e, t) => e,
                rotlSH: (e, t, r) => e << r | t >>> 32 - r,
                rotlSL: (e, t, r) => t << r | e >>> 32 - r,
                rotlBH: (e, t, r) => t << r - 32 | e >>> 64 - r,
                rotlBL: (e, t, r) => e << r - 32 | t >>> 64 - r,
                add: o,
                add3L: (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0),
                add3H: (e, t, r, n) => t + r + n + (e / 4294967296 | 0) | 0,
                add4L: (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0),
                add4H: (e, t, r, n, i) => t + r + n + i + (e / 4294967296 | 0) | 0,
                add5H: (e, t, r, n, i, s) => t + r + n + i + s + (e / 4294967296 | 0) | 0,
                add5L: (e, t, r, n, i) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0)
            };
            t.default = a
        },
        48390: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.crypto = void 0, t.crypto = {
                node: void 0,
                web: "object" == typeof self && "crypto" in self ? self.crypto : void 0
            }
        },
        76987: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hmac = void 0;
            let n = r(72945),
                i = r(30537);
            class s extends i.Hash {
                constructor(e, t) {
                    super(), this.finished = !1, this.destroyed = !1, n.default.hash(e);
                    let r = (0, i.toBytes)(t);
                    if (this.iHash = e.create(), !(this.iHash instanceof i.Hash)) throw TypeError("Expected instance of class which extends utils.Hash");
                    let s = this.blockLen = this.iHash.blockLen;
                    this.outputLen = this.iHash.outputLen;
                    let o = new Uint8Array(s);
                    o.set(r.length > this.iHash.blockLen ? e.create().update(r).digest() : r);
                    for (let e = 0; e < o.length; e++) o[e] ^= 54;
                    this.iHash.update(o), this.oHash = e.create();
                    for (let e = 0; e < o.length; e++) o[e] ^= 106;
                    this.oHash.update(o), o.fill(0)
                }
                update(e) {
                    return n.default.exists(this), this.iHash.update(e), this
                }
                digestInto(e) {
                    n.default.exists(this), n.default.bytes(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy()
                }
                digest() {
                    let e = new Uint8Array(this.oHash.outputLen);
                    return this.digestInto(e), e
                }
                _cloneInto(e) {
                    e || (e = Object.create(Object.getPrototypeOf(this), {}));
                    let {
                        oHash: t,
                        iHash: r,
                        finished: n,
                        destroyed: i,
                        blockLen: s,
                        outputLen: o
                    } = this;
                    return e.finished = n, e.destroyed = i, e.blockLen = s, e.outputLen = o, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e
                }
                destroy() {
                    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy()
                }
            }
            t.hmac = (e, t, r) => new s(e, t).update(r).digest(), t.hmac.create = (e, t) => new s(e, t)
        },
        54516: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.pbkdf2Async = t.pbkdf2 = void 0;
            let n = r(72945),
                i = r(76987),
                s = r(30537);

            function o(e, t, r, o) {
                n.default.hash(e);
                let a = (0, s.checkOpts)({
                        dkLen: 32,
                        asyncTick: 10
                    }, o),
                    {
                        c: l,
                        dkLen: u,
                        asyncTick: c
                    } = a;
                if (n.default.number(l), n.default.number(u), n.default.number(c), l < 1) throw Error("PBKDF2: iterations (c) should be >= 1");
                let d = (0, s.toBytes)(t),
                    h = (0, s.toBytes)(r),
                    f = new Uint8Array(u),
                    p = i.hmac.create(e, d),
                    g = p._cloneInto().update(h);
                return {
                    c: l,
                    dkLen: u,
                    asyncTick: c,
                    DK: f,
                    PRF: p,
                    PRFSalt: g
                }
            }

            function a(e, t, r, n, i) {
                return e.destroy(), t.destroy(), n && n.destroy(), i.fill(0), r
            }
            async function l(e, t, r, n) {
                let i;
                let {
                    c: l,
                    dkLen: u,
                    asyncTick: c,
                    DK: d,
                    PRF: h,
                    PRFSalt: f
                } = o(e, t, r, n), p = new Uint8Array(4), g = (0, s.createView)(p), m = new Uint8Array(h.outputLen);
                for (let e = 1, t = 0; t < u; e++, t += h.outputLen) {
                    let r = d.subarray(t, t + h.outputLen);
                    g.setInt32(0, e, !1), (i = f._cloneInto(i)).update(p).digestInto(m), r.set(m.subarray(0, r.length)), await (0, s.asyncLoop)(l - 1, c, e => {
                        h._cloneInto(i).update(m).digestInto(m);
                        for (let e = 0; e < r.length; e++) r[e] ^= m[e]
                    })
                }
                return a(h, f, d, i, m)
            }
            t.pbkdf2 = function(e, t, r, n) {
                let i;
                let {
                    c: l,
                    dkLen: u,
                    DK: c,
                    PRF: d,
                    PRFSalt: h
                } = o(e, t, r, n), f = new Uint8Array(4), p = (0, s.createView)(f), g = new Uint8Array(d.outputLen);
                for (let e = 1, t = 0; t < u; e++, t += d.outputLen) {
                    let r = c.subarray(t, t + d.outputLen);
                    p.setInt32(0, e, !1), (i = h._cloneInto(i)).update(f).digestInto(g), r.set(g.subarray(0, r.length));
                    for (let e = 1; e < l; e++) {
                        d._cloneInto(i).update(g).digestInto(g);
                        for (let e = 0; e < r.length; e++) r[e] ^= g[e]
                    }
                }
                return a(d, h, c, i, g)
            }, t.pbkdf2Async = l
        },
        67913: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = t.RIPEMD160 = void 0;
            let n = r(4169),
                i = r(30537),
                s = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]),
                o = Uint8Array.from({
                    length: 16
                }, (e, t) => t),
                a = o.map(e => (9 * e + 5) % 16),
                l = [o],
                u = [a];
            for (let e = 0; e < 4; e++)
                for (let t of [l, u]) t.push(t[e].map(e => s[e]));
            let c = [
                    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
                    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
                    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
                    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
                    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
                ].map(e => new Uint8Array(e)),
                d = l.map((e, t) => e.map(e => c[t][e])),
                h = u.map((e, t) => e.map(e => c[t][e])),
                f = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                p = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                g = (e, t) => e << t | e >>> 32 - t;

            function m(e, t, r, n) {
                return 0 === e ? t ^ r ^ n : 1 === e ? t & r | ~t & n : 2 === e ? (t | ~r) ^ n : 3 === e ? t & n | r & ~n : t ^ (r | ~n)
            }
            let y = new Uint32Array(16);
            class b extends n.SHA2 {
                constructor() {
                    super(64, 20, 8, !0), this.h0 = 1732584193, this.h1 = -271733879, this.h2 = -1732584194, this.h3 = 271733878, this.h4 = -1009589776
                }
                get() {
                    let {
                        h0: e,
                        h1: t,
                        h2: r,
                        h3: n,
                        h4: i
                    } = this;
                    return [e, t, r, n, i]
                }
                set(e, t, r, n, i) {
                    this.h0 = 0 | e, this.h1 = 0 | t, this.h2 = 0 | r, this.h3 = 0 | n, this.h4 = 0 | i
                }
                process(e, t) {
                    for (let r = 0; r < 16; r++, t += 4) y[r] = e.getUint32(t, !0);
                    let r = 0 | this.h0,
                        n = r,
                        i = 0 | this.h1,
                        s = i,
                        o = 0 | this.h2,
                        a = o,
                        c = 0 | this.h3,
                        b = c,
                        w = 0 | this.h4,
                        A = w;
                    for (let e = 0; e < 5; e++) {
                        let t = 4 - e,
                            v = f[e],
                            E = p[e],
                            P = l[e],
                            S = u[e],
                            O = d[e],
                            k = h[e];
                        for (let t = 0; t < 16; t++) {
                            let n = g(r + m(e, i, o, c) + y[P[t]] + v, O[t]) + w | 0;
                            r = w, w = c, c = 0 | g(o, 10), o = i, i = n
                        }
                        for (let e = 0; e < 16; e++) {
                            let r = g(n + m(t, s, a, b) + y[S[e]] + E, k[e]) + A | 0;
                            n = A, A = b, b = 0 | g(a, 10), a = s, s = r
                        }
                    }
                    this.set(this.h1 + o + b | 0, this.h2 + c + A | 0, this.h3 + w + n | 0, this.h4 + r + s | 0, this.h0 + i + a | 0)
                }
                roundClean() {
                    y.fill(0)
                }
                destroy() {
                    this.destroyed = !0, this.buffer.fill(0), this.set(0, 0, 0, 0, 0)
                }
            }
            t.RIPEMD160 = b, t.ripemd160 = (0, i.wrapConstructor)(() => new b)
        },
        72427: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.scryptAsync = t.scrypt = void 0;
            let n = r(72945),
                i = r(30217),
                s = r(54516),
                o = r(30537),
                a = (e, t) => e << t | e >>> 32 - t;

            function l(e, t, r, n, i, s) {
                let o = e[t++] ^ r[n++],
                    l = e[t++] ^ r[n++],
                    u = e[t++] ^ r[n++],
                    c = e[t++] ^ r[n++],
                    d = e[t++] ^ r[n++],
                    h = e[t++] ^ r[n++],
                    f = e[t++] ^ r[n++],
                    p = e[t++] ^ r[n++],
                    g = e[t++] ^ r[n++],
                    m = e[t++] ^ r[n++],
                    y = e[t++] ^ r[n++],
                    b = e[t++] ^ r[n++],
                    w = e[t++] ^ r[n++],
                    A = e[t++] ^ r[n++],
                    v = e[t++] ^ r[n++],
                    E = e[t++] ^ r[n++],
                    P = o,
                    S = l,
                    O = u,
                    k = c,
                    C = d,
                    x = h,
                    T = f,
                    N = p,
                    _ = g,
                    B = m,
                    D = y,
                    I = b,
                    R = w,
                    M = A,
                    L = v,
                    U = E;
                for (let e = 0; e < 8; e += 2) C ^= a(P + R | 0, 7), _ ^= a(C + P | 0, 9), R ^= a(_ + C | 0, 13), P ^= a(R + _ | 0, 18), B ^= a(x + S | 0, 7), M ^= a(B + x | 0, 9), S ^= a(M + B | 0, 13), x ^= a(S + M | 0, 18), L ^= a(D + T | 0, 7), O ^= a(L + D | 0, 9), T ^= a(O + L | 0, 13), D ^= a(T + O | 0, 18), k ^= a(U + I | 0, 7), N ^= a(k + U | 0, 9), I ^= a(N + k | 0, 13), U ^= a(I + N | 0, 18), S ^= a(P + k | 0, 7), O ^= a(S + P | 0, 9), k ^= a(O + S | 0, 13), P ^= a(k + O | 0, 18), T ^= a(x + C | 0, 7), N ^= a(T + x | 0, 9), C ^= a(N + T | 0, 13), x ^= a(C + N | 0, 18), I ^= a(D + B | 0, 7), _ ^= a(I + D | 0, 9), B ^= a(_ + I | 0, 13), D ^= a(B + _ | 0, 18), R ^= a(U + L | 0, 7), M ^= a(R + U | 0, 9), L ^= a(M + R | 0, 13), U ^= a(L + M | 0, 18);
                i[s++] = o + P | 0, i[s++] = l + S | 0, i[s++] = u + O | 0, i[s++] = c + k | 0, i[s++] = d + C | 0, i[s++] = h + x | 0, i[s++] = f + T | 0, i[s++] = p + N | 0, i[s++] = g + _ | 0, i[s++] = m + B | 0, i[s++] = y + D | 0, i[s++] = b + I | 0, i[s++] = w + R | 0, i[s++] = A + M | 0, i[s++] = v + L | 0, i[s++] = E + U | 0
            }

            function u(e, t, r, n, i) {
                let s = n + 0,
                    o = n + 16 * i;
                for (let n = 0; n < 16; n++) r[o + n] = e[t + (2 * i - 1) * 16 + n];
                for (let n = 0; n < i; n++, s += 16, t += 16) l(r, o, e, t, r, s), n > 0 && (o += 16), l(r, s, e, t += 16, r, o)
            }

            function c(e, t, r) {
                let a = (0, o.checkOpts)({
                        dkLen: 32,
                        asyncTick: 10,
                        maxmem: 1073742848
                    }, r),
                    {
                        N: l,
                        r: u,
                        p: c,
                        dkLen: d,
                        asyncTick: h,
                        maxmem: f,
                        onProgress: p
                    } = a;
                if (n.default.number(l), n.default.number(u), n.default.number(c), n.default.number(d), n.default.number(h), n.default.number(f), void 0 !== p && "function" != typeof p) throw Error("progressCb should be function");
                let g = 128 * u,
                    m = g / 4;
                if (l <= 1 || (l & l - 1) != 0 || l >= 2 ** (g / 8) || l > 4294967296) throw Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");
                if (c < 0 || c > (4294967296 - 1) * 32 / g) throw Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");
                if (d < 0 || d > (4294967296 - 1) * 32) throw Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");
                let y = g * (l + c);
                if (y > f) throw Error(`Scrypt: parameters too large, ${y} (128 * r * (N + p)) > ${f} (maxmem)`);
                let b = (0, s.pbkdf2)(i.sha256, e, t, {
                        c: 1,
                        dkLen: g * c
                    }),
                    w = (0, o.u32)(b),
                    A = (0, o.u32)(new Uint8Array(g * l)),
                    v = (0, o.u32)(new Uint8Array(g)),
                    E = () => {};
                if (p) {
                    let e = 2 * l * c,
                        t = Math.max(Math.floor(e / 1e4), 1),
                        r = 0;
                    E = () => {
                        r++, p && (!(r % t) || r === e) && p(r / e)
                    }
                }
                return {
                    N: l,
                    r: u,
                    p: c,
                    dkLen: d,
                    blockSize32: m,
                    V: A,
                    B32: w,
                    B: b,
                    tmp: v,
                    blockMixCb: E,
                    asyncTick: h
                }
            }

            function d(e, t, r, n, o) {
                let a = (0, s.pbkdf2)(i.sha256, e, r, {
                    c: 1,
                    dkLen: t
                });
                return r.fill(0), n.fill(0), o.fill(0), a
            }
            async function h(e, t, r) {
                let {
                    N: n,
                    r: i,
                    p: s,
                    dkLen: a,
                    blockSize32: l,
                    V: h,
                    B32: f,
                    B: p,
                    tmp: g,
                    blockMixCb: m,
                    asyncTick: y
                } = c(e, t, r);
                for (let e = 0; e < s; e++) {
                    let t = l * e;
                    for (let e = 0; e < l; e++) h[e] = f[t + e];
                    let r = 0;
                    await (0, o.asyncLoop)(n - 1, y, e => {
                        u(h, r, h, r += l, i), m()
                    }), u(h, (n - 1) * l, f, t, i), m(), await (0, o.asyncLoop)(n, y, e => {
                        let r = f[t + l - 16] % n;
                        for (let e = 0; e < l; e++) g[e] = f[t + e] ^ h[r * l + e];
                        u(g, 0, f, t, i), m()
                    })
                }
                return d(e, a, p, h, g)
            }
            t.scrypt = function(e, t, r) {
                let {
                    N: n,
                    r: i,
                    p: s,
                    dkLen: o,
                    blockSize32: a,
                    V: l,
                    B32: h,
                    B: f,
                    tmp: p,
                    blockMixCb: g
                } = c(e, t, r);
                for (let e = 0; e < s; e++) {
                    let t = a * e;
                    for (let e = 0; e < a; e++) l[e] = h[t + e];
                    for (let e = 0, t = 0; e < n - 1; e++) u(l, t, l, t += a, i), g();
                    u(l, (n - 1) * a, h, t, i), g();
                    for (let e = 0; e < n; e++) {
                        let e = h[t + a - 16] % n;
                        for (let r = 0; r < a; r++) p[r] = h[t + r] ^ l[e * a + r];
                        u(p, 0, h, t, i), g()
                    }
                }
                return d(e, o, f, l, p)
            }, t.scryptAsync = h
        },
        30217: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha256 = void 0;
            let n = r(4169),
                i = r(30537),
                s = (e, t, r) => e & t ^ ~e & r,
                o = (e, t, r) => e & t ^ e & r ^ t & r,
                a = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
                l = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),
                u = new Uint32Array(64);
            class c extends n.SHA2 {
                constructor() {
                    super(64, 32, 8, !1), this.A = 0 | l[0], this.B = 0 | l[1], this.C = 0 | l[2], this.D = 0 | l[3], this.E = 0 | l[4], this.F = 0 | l[5], this.G = 0 | l[6], this.H = 0 | l[7]
                }
                get() {
                    let {
                        A: e,
                        B: t,
                        C: r,
                        D: n,
                        E: i,
                        F: s,
                        G: o,
                        H: a
                    } = this;
                    return [e, t, r, n, i, s, o, a]
                }
                set(e, t, r, n, i, s, o, a) {
                    this.A = 0 | e, this.B = 0 | t, this.C = 0 | r, this.D = 0 | n, this.E = 0 | i, this.F = 0 | s, this.G = 0 | o, this.H = 0 | a
                }
                process(e, t) {
                    for (let r = 0; r < 16; r++, t += 4) u[r] = e.getUint32(t, !1);
                    for (let e = 16; e < 64; e++) {
                        let t = u[e - 15],
                            r = u[e - 2],
                            n = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ t >>> 3,
                            s = (0, i.rotr)(r, 17) ^ (0, i.rotr)(r, 19) ^ r >>> 10;
                        u[e] = s + u[e - 7] + n + u[e - 16] | 0
                    }
                    let {
                        A: r,
                        B: n,
                        C: l,
                        D: c,
                        E: d,
                        F: h,
                        G: f,
                        H: p
                    } = this;
                    for (let e = 0; e < 64; e++) {
                        let t = (0, i.rotr)(d, 6) ^ (0, i.rotr)(d, 11) ^ (0, i.rotr)(d, 25),
                            g = p + t + s(d, h, f) + a[e] + u[e] | 0,
                            m = (0, i.rotr)(r, 2) ^ (0, i.rotr)(r, 13) ^ (0, i.rotr)(r, 22),
                            y = m + o(r, n, l) | 0;
                        p = f, f = h, h = d, d = c + g | 0, c = l, l = n, n = r, r = g + y | 0
                    }
                    r = r + this.A | 0, n = n + this.B | 0, l = l + this.C | 0, c = c + this.D | 0, d = d + this.E | 0, h = h + this.F | 0, f = f + this.G | 0, p = p + this.H | 0, this.set(r, n, l, c, d, h, f, p)
                }
                roundClean() {
                    u.fill(0)
                }
                destroy() {
                    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0)
                }
            }
            t.sha256 = (0, i.wrapConstructor)(() => new c)
        },
        77629: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.shake256 = t.shake128 = t.keccak_512 = t.keccak_384 = t.keccak_256 = t.keccak_224 = t.sha3_512 = t.sha3_384 = t.sha3_256 = t.sha3_224 = t.Keccak = t.keccakP = void 0;
            let n = r(72945),
                i = r(99574),
                s = r(30537),
                [o, a, l] = [
                    [],
                    [],
                    []
                ],
                u = BigInt(0),
                c = BigInt(1),
                d = BigInt(2),
                h = BigInt(7),
                f = BigInt(256),
                p = BigInt(113);
            for (let e = 0, t = c, r = 1, n = 0; e < 24; e++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], o.push(2 * (5 * n + r)), a.push((e + 1) * (e + 2) / 2 % 64);
                let i = u;
                for (let e = 0; e < 7; e++)(t = (t << c ^ (t >> h) * p) % f) & d && (i ^= c << (c << BigInt(e)) - c);
                l.push(i)
            }
            let [g, m] = i.default.split(l, !0), y = (e, t, r) => r > 32 ? i.default.rotlBH(e, t, r) : i.default.rotlSH(e, t, r), b = (e, t, r) => r > 32 ? i.default.rotlBL(e, t, r) : i.default.rotlSL(e, t, r);

            function w(e, t = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - t; n < 24; n++) {
                    for (let t = 0; t < 10; t++) r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                    for (let t = 0; t < 10; t += 2) {
                        let n = (t + 8) % 10,
                            i = (t + 2) % 10,
                            s = r[i],
                            o = r[i + 1],
                            a = y(s, o, 1) ^ r[n],
                            l = b(s, o, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) e[t + r] ^= a, e[t + r + 1] ^= l
                    }
                    let t = e[2],
                        i = e[3];
                    for (let r = 0; r < 24; r++) {
                        let n = a[r],
                            s = y(t, i, n),
                            l = b(t, i, n),
                            u = o[r];
                        t = e[u], i = e[u + 1], e[u] = s, e[u + 1] = l
                    }
                    for (let t = 0; t < 50; t += 10) {
                        for (let n = 0; n < 10; n++) r[n] = e[t + n];
                        for (let n = 0; n < 10; n++) e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    e[0] ^= g[n], e[1] ^= m[n]
                }
                r.fill(0)
            }
            t.keccakP = w;
            class A extends s.Hash {
                constructor(e, t, r, i = !1, o = 24) {
                    if (super(), this.blockLen = e, this.suffix = t, this.outputLen = r, this.enableXOF = i, this.rounds = o, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, n.default.number(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = (0, s.u32)(this.state)
                }
                keccak() {
                    w(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(e) {
                    n.default.exists(this);
                    let {
                        blockLen: t,
                        state: r
                    } = this;
                    e = (0, s.toBytes)(e);
                    let i = e.length;
                    for (let n = 0; n < i;) {
                        let s = Math.min(t - this.pos, i - n);
                        for (let t = 0; t < s; t++) r[this.pos++] ^= e[n++];
                        this.pos === t && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: e,
                        suffix: t,
                        pos: r,
                        blockLen: n
                    } = this;
                    e[r] ^= t, (128 & t) != 0 && r === n - 1 && this.keccak(), e[n - 1] ^= 128, this.keccak()
                }
                writeInto(e) {
                    n.default.exists(this, !1), n.default.bytes(e), this.finish();
                    let t = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = e.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let s = Math.min(r - this.posOut, i - n);
                        e.set(t.subarray(this.posOut, this.posOut + s), n), this.posOut += s, n += s
                    }
                    return e
                }
                xofInto(e) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(e)
                }
                xof(e) {
                    return n.default.number(e), this.xofInto(new Uint8Array(e))
                }
                digestInto(e) {
                    if (n.default.output(e, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(e), this.destroy(), e
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(e) {
                    let {
                        blockLen: t,
                        suffix: r,
                        outputLen: n,
                        rounds: i,
                        enableXOF: s
                    } = this;
                    return e || (e = new A(t, r, n, s, i)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = i, e.suffix = r, e.outputLen = n, e.enableXOF = s, e.destroyed = this.destroyed, e
                }
            }
            t.Keccak = A;
            let v = (e, t, r) => (0, s.wrapConstructor)(() => new A(t, e, r));
            t.sha3_224 = v(6, 144, 28), t.sha3_256 = v(6, 136, 32), t.sha3_384 = v(6, 104, 48), t.sha3_512 = v(6, 72, 64), t.keccak_224 = v(1, 144, 28), t.keccak_256 = v(1, 136, 32), t.keccak_384 = v(1, 104, 48), t.keccak_512 = v(1, 72, 64);
            let E = (e, t, r) => (0, s.wrapConstructorWithOpts)((n = {}) => new A(t, e, void 0 === n.dkLen ? r : n.dkLen, !0));
            t.shake128 = E(31, 168, 16), t.shake256 = E(31, 136, 32)
        },
        52645: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha384 = t.sha512_256 = t.sha512 = t.SHA512 = void 0;
            let n = r(4169),
                i = r(99574),
                s = r(30537),
                [o, a] = i.default.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map(e => BigInt(e))),
                l = new Uint32Array(80),
                u = new Uint32Array(80);
            class c extends n.SHA2 {
                constructor() {
                    super(128, 64, 16, !1), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209
                }
                get() {
                    let {
                        Ah: e,
                        Al: t,
                        Bh: r,
                        Bl: n,
                        Ch: i,
                        Cl: s,
                        Dh: o,
                        Dl: a,
                        Eh: l,
                        El: u,
                        Fh: c,
                        Fl: d,
                        Gh: h,
                        Gl: f,
                        Hh: p,
                        Hl: g
                    } = this;
                    return [e, t, r, n, i, s, o, a, l, u, c, d, h, f, p, g]
                }
                set(e, t, r, n, i, s, o, a, l, u, c, d, h, f, p, g) {
                    this.Ah = 0 | e, this.Al = 0 | t, this.Bh = 0 | r, this.Bl = 0 | n, this.Ch = 0 | i, this.Cl = 0 | s, this.Dh = 0 | o, this.Dl = 0 | a, this.Eh = 0 | l, this.El = 0 | u, this.Fh = 0 | c, this.Fl = 0 | d, this.Gh = 0 | h, this.Gl = 0 | f, this.Hh = 0 | p, this.Hl = 0 | g
                }
                process(e, t) {
                    for (let r = 0; r < 16; r++, t += 4) l[r] = e.getUint32(t), u[r] = e.getUint32(t += 4);
                    for (let e = 16; e < 80; e++) {
                        let t = 0 | l[e - 15],
                            r = 0 | u[e - 15],
                            n = i.default.rotrSH(t, r, 1) ^ i.default.rotrSH(t, r, 8) ^ i.default.shrSH(t, r, 7),
                            s = i.default.rotrSL(t, r, 1) ^ i.default.rotrSL(t, r, 8) ^ i.default.shrSL(t, r, 7),
                            o = 0 | l[e - 2],
                            a = 0 | u[e - 2],
                            c = i.default.rotrSH(o, a, 19) ^ i.default.rotrBH(o, a, 61) ^ i.default.shrSH(o, a, 6),
                            d = i.default.rotrSL(o, a, 19) ^ i.default.rotrBL(o, a, 61) ^ i.default.shrSL(o, a, 6),
                            h = i.default.add4L(s, d, u[e - 7], u[e - 16]),
                            f = i.default.add4H(h, n, c, l[e - 7], l[e - 16]);
                        l[e] = 0 | f, u[e] = 0 | h
                    }
                    let {
                        Ah: r,
                        Al: n,
                        Bh: s,
                        Bl: c,
                        Ch: d,
                        Cl: h,
                        Dh: f,
                        Dl: p,
                        Eh: g,
                        El: m,
                        Fh: y,
                        Fl: b,
                        Gh: w,
                        Gl: A,
                        Hh: v,
                        Hl: E
                    } = this;
                    for (let e = 0; e < 80; e++) {
                        let t = i.default.rotrSH(g, m, 14) ^ i.default.rotrSH(g, m, 18) ^ i.default.rotrBH(g, m, 41),
                            P = i.default.rotrSL(g, m, 14) ^ i.default.rotrSL(g, m, 18) ^ i.default.rotrBL(g, m, 41),
                            S = g & y ^ ~g & w,
                            O = m & b ^ ~m & A,
                            k = i.default.add5L(E, P, O, a[e], u[e]),
                            C = i.default.add5H(k, v, t, S, o[e], l[e]),
                            x = 0 | k,
                            T = i.default.rotrSH(r, n, 28) ^ i.default.rotrBH(r, n, 34) ^ i.default.rotrBH(r, n, 39),
                            N = i.default.rotrSL(r, n, 28) ^ i.default.rotrBL(r, n, 34) ^ i.default.rotrBL(r, n, 39),
                            _ = r & s ^ r & d ^ s & d,
                            B = n & c ^ n & h ^ c & h;
                        v = 0 | w, E = 0 | A, w = 0 | y, A = 0 | b, y = 0 | g, b = 0 | m, ({
                            h: g,
                            l: m
                        } = i.default.add(0 | f, 0 | p, 0 | C, 0 | x)), f = 0 | d, p = 0 | h, d = 0 | s, h = 0 | c, s = 0 | r, c = 0 | n;
                        let D = i.default.add3L(x, N, B);
                        r = i.default.add3H(D, C, T, _), n = 0 | D
                    }({
                        h: r,
                        l: n
                    } = i.default.add(0 | this.Ah, 0 | this.Al, 0 | r, 0 | n)), ({
                        h: s,
                        l: c
                    } = i.default.add(0 | this.Bh, 0 | this.Bl, 0 | s, 0 | c)), ({
                        h: d,
                        l: h
                    } = i.default.add(0 | this.Ch, 0 | this.Cl, 0 | d, 0 | h)), ({
                        h: f,
                        l: p
                    } = i.default.add(0 | this.Dh, 0 | this.Dl, 0 | f, 0 | p)), ({
                        h: g,
                        l: m
                    } = i.default.add(0 | this.Eh, 0 | this.El, 0 | g, 0 | m)), ({
                        h: y,
                        l: b
                    } = i.default.add(0 | this.Fh, 0 | this.Fl, 0 | y, 0 | b)), ({
                        h: w,
                        l: A
                    } = i.default.add(0 | this.Gh, 0 | this.Gl, 0 | w, 0 | A)), ({
                        h: v,
                        l: E
                    } = i.default.add(0 | this.Hh, 0 | this.Hl, 0 | v, 0 | E)), this.set(r, n, s, c, d, h, f, p, g, m, y, b, w, A, v, E)
                }
                roundClean() {
                    l.fill(0), u.fill(0)
                }
                destroy() {
                    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                }
            }
            t.SHA512 = c;
            class d extends c {
                constructor() {
                    super(), this.Ah = 573645204, this.Al = -64227540, this.Bh = -1621794909, this.Bl = -934517566, this.Ch = 596883563, this.Cl = 1867755857, this.Dh = -1774684391, this.Dl = 1497426621, this.Eh = -1775747358, this.El = -1467023389, this.Fh = -1101128155, this.Fl = 1401305490, this.Gh = 721525244, this.Gl = 746961066, this.Hh = 246885852, this.Hl = -2117784414, this.outputLen = 32
                }
            }
            class h extends c {
                constructor() {
                    super(), this.Ah = -876896931, this.Al = -1056596264, this.Bh = 1654270250, this.Bl = 914150663, this.Ch = -1856437926, this.Cl = 812702999, this.Dh = 355462360, this.Dl = -150054599, this.Eh = 1731405415, this.El = -4191439, this.Fh = -1900787065, this.Fl = 1750603025, this.Gh = -619958771, this.Gl = 1694076839, this.Hh = 1203062813, this.Hl = -1090891868, this.outputLen = 48
                }
            }
            t.sha512 = (0, s.wrapConstructor)(() => new c), t.sha512_256 = (0, s.wrapConstructor)(() => new d), t.sha384 = (0, s.wrapConstructor)(() => new h)
        },
        30537: function(e, t, r) {
            "use strict"; /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = t.wrapConstructorWithOpts = t.wrapConstructor = t.checkOpts = t.Hash = t.concatBytes = t.toBytes = t.utf8ToBytes = t.asyncLoop = t.nextTick = t.hexToBytes = t.bytesToHex = t.isLE = t.rotr = t.createView = t.u32 = t.u8 = void 0;
            let n = r(48390);
            if (t.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength), t.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)), t.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength), t.rotr = (e, t) => e << 32 - t | e >>> t, t.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0], !t.isLE) throw Error("Non little-endian hardware is not supported");
            let i = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));
            t.bytesToHex = function(e) {
                if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += i[e[r]];
                return t
            }, t.hexToBytes = function(e) {
                if ("string" != typeof e) throw TypeError("hexToBytes: expected string, got " + typeof e);
                if (e.length % 2) throw Error("hexToBytes: received invalid unpadded hex");
                let t = new Uint8Array(e.length / 2);
                for (let r = 0; r < t.length; r++) {
                    let n = 2 * r,
                        i = e.slice(n, n + 2),
                        s = Number.parseInt(i, 16);
                    if (Number.isNaN(s) || s < 0) throw Error("Invalid byte sequence");
                    t[r] = s
                }
                return t
            };
            let s = async () => {};
            async function o(e, r, n) {
                let i = Date.now();
                for (let s = 0; s < e; s++) {
                    n(s);
                    let e = Date.now() - i;
                    e >= 0 && e < r || (await (0, t.nextTick)(), i += e)
                }
            }

            function a(e) {
                if ("string" != typeof e) throw TypeError(`utf8ToBytes expected string, got ${typeof e}`);
                return new TextEncoder().encode(e)
            }

            function l(e) {
                if ("string" == typeof e && (e = a(e)), !(e instanceof Uint8Array)) throw TypeError(`Expected input type is Uint8Array (got ${typeof e})`);
                return e
            }
            t.nextTick = s, t.asyncLoop = o, t.utf8ToBytes = a, t.toBytes = l, t.concatBytes = function(...e) {
                if (!e.every(e => e instanceof Uint8Array)) throw Error("Uint8Array list expected");
                if (1 === e.length) return e[0];
                let t = e.reduce((e, t) => e + t.length, 0),
                    r = new Uint8Array(t);
                for (let t = 0, n = 0; t < e.length; t++) {
                    let i = e[t];
                    r.set(i, n), n += i.length
                }
                return r
            }, t.Hash = class {
                clone() {
                    return this._cloneInto()
                }
            };
            let u = e => "[object Object]" === Object.prototype.toString.call(e) && e.constructor === Object;
            t.checkOpts = function(e, t) {
                if (void 0 !== t && ("object" != typeof t || !u(t))) throw TypeError("Options should be object or undefined");
                let r = Object.assign(e, t);
                return r
            }, t.wrapConstructor = function(e) {
                let t = t => e().update(l(t)).digest(),
                    r = e();
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = () => e(), t
            }, t.wrapConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(l(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.randomBytes = function(e = 32) {
                if (n.crypto.web) return n.crypto.web.getRandomValues(new Uint8Array(e));
                if (n.crypto.node) return new Uint8Array(n.crypto.node.randomBytes(e).buffer);
                throw Error("The environment doesn't have randomBytes function")
            }
        },
        54604: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                __assign: function() {
                    return s
                },
                __asyncDelegator: function() {
                    return v
                },
                __asyncGenerator: function() {
                    return A
                },
                __asyncValues: function() {
                    return E
                },
                __await: function() {
                    return w
                },
                __awaiter: function() {
                    return c
                },
                __classPrivateFieldGet: function() {
                    return C
                },
                __classPrivateFieldIn: function() {
                    return T
                },
                __classPrivateFieldSet: function() {
                    return x
                },
                __createBinding: function() {
                    return h
                },
                __decorate: function() {
                    return a
                },
                __exportStar: function() {
                    return f
                },
                __extends: function() {
                    return i
                },
                __generator: function() {
                    return d
                },
                __importDefault: function() {
                    return k
                },
                __importStar: function() {
                    return O
                },
                __makeTemplateObject: function() {
                    return P
                },
                __metadata: function() {
                    return u
                },
                __param: function() {
                    return l
                },
                __read: function() {
                    return g
                },
                __rest: function() {
                    return o
                },
                __spread: function() {
                    return m
                },
                __spreadArray: function() {
                    return b
                },
                __spreadArrays: function() {
                    return y
                },
                __values: function() {
                    return p
                }
            });
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                if ("function" != typeof t && null !== t) throw TypeError("Class extends value " + String(t) + " is not a constructor or null");

                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var s = function() {
                return (s = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function o(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function a(e, t, r, n) {
                var i, s = arguments.length,
                    o = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (o = (s < 3 ? i(o) : s > 3 ? i(t, r, o) : i(t, r)) || o);
                return s > 3 && o && Object.defineProperty(t, r, o), o
            }

            function l(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function u(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function c(e, t, r, n) {
                return new(r || (r = Promise))(function(i, s) {
                    function o(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(o, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, s, o = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return s = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
                    return this
                }), s;

                function a(s) {
                    return function(a) {
                        return function(s) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; o;) try {
                                if (r = 1, n && (i = 2 & s[0] ? n.return : s[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, s[1])).done) return i;
                                switch (n = 0, i && (s = [2 & s[0], i.value]), s[0]) {
                                    case 0:
                                    case 1:
                                        i = s;
                                        break;
                                    case 4:
                                        return o.label++, {
                                            value: s[1],
                                            done: !1
                                        };
                                    case 5:
                                        o.label++, n = s[1], s = [0];
                                        continue;
                                    case 7:
                                        s = o.ops.pop(), o.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = o.trys).length > 0 && i[i.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                            o = 0;
                                            continue
                                        }
                                        if (3 === s[0] && (!i || s[1] > i[0] && s[1] < i[3])) {
                                            o.label = s[1];
                                            break
                                        }
                                        if (6 === s[0] && o.label < i[1]) {
                                            o.label = i[1], i = s;
                                            break
                                        }
                                        if (i && o.label < i[2]) {
                                            o.label = i[2], o.ops.push(s);
                                            break
                                        }
                                        i[2] && o.ops.pop(), o.trys.pop();
                                        continue
                                }
                                s = t.call(e, o)
                            } catch (e) {
                                s = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & s[0]) throw s[1];
                            return {
                                value: s[0] ? s[1] : void 0,
                                done: !0
                            }
                        }([s, a])
                    }
                }
            }
            var h = Object.create ? function(e, t, r, n) {
                void 0 === n && (n = r);
                var i = Object.getOwnPropertyDescriptor(t, r);
                (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                }), Object.defineProperty(e, n, i)
            } : function(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            };

            function f(e, t) {
                for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || h(t, e, r)
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, s = r.call(e),
                    o = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = s.next()).done;) o.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = s.return) && r.call(s)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return o
            }

            function m() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(g(arguments[t]));
                return e
            }

            function y() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var s = arguments[t], o = 0, a = s.length; o < a; o++, i++) n[i] = s[o];
                return n
            }

            function b(e, t, r) {
                if (r || 2 == arguments.length)
                    for (var n, i = 0, s = t.length; i < s; i++) !n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                return e.concat(n || Array.prototype.slice.call(t))
            }

            function w(e) {
                return this instanceof w ? (this.v = e, this) : new w(e)
            }

            function A(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    s = [];
                return n = {}, o("next"), o("throw"), o("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function o(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            s.push([e, t, r, n]) > 1 || a(e, t)
                        })
                    })
                }

                function a(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof w ? Promise.resolve(r.value.v).then(l, u) : c(s[0][2], r)
                    } catch (e) {
                        c(s[0][3], e)
                    }
                }

                function l(e) {
                    a("next", e)
                }

                function u(e) {
                    a("throw", e)
                }

                function c(e, t) {
                    e(t), s.shift(), s.length && a(s[0][0], s[0][1])
                }
            }

            function v(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: w(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function E(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function P(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }
            var S = Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            };

            function O(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && h(t, e, r);
                return S(t, e), t
            }

            function k(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function C(e, t, r, n) {
                if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
            }

            function x(e, t, r, n, i) {
                if ("m" === n) throw TypeError("Private method is not writable");
                if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
            }

            function T(e, t) {
                if (null === t || "object" != typeof t && "function" != typeof t) throw TypeError("Cannot use 'in' operator on non-object");
                return "function" == typeof e ? t === e : e.has(t)
            }
        },
        882: function(e) {
            "use strict";
            e.exports = function(e, t) {
                for (var r = {}, n = Object.keys(e), i = Array.isArray(t), s = 0; s < n.length; s++) {
                    var o = n[s],
                        a = e[o];
                    (i ? -1 !== t.indexOf(o) : t(o, a, e)) && (r[o] = a)
                }
                return r
            }
        },
        52127: function(e, t, r) {
            "use strict";
            var n = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, s) {
                        function o(e) {
                            try {
                                l(n.next(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function a(e) {
                            try {
                                l(n.throw(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function l(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(o, a)
                        }
                        l((n = n.apply(e, t || [])).next())
                    })
                },
                i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.I18n = void 0;
            let s = i(r(32639)),
                o = i(r(30270)),
                a = i(r(3691)),
                l = i(r(10764)),
                u = r(49353),
                c = r(42682),
                d = r(14573),
                h = r(34363),
                f = {
                    defaultLocale: "en",
                    availableLocales: ["en"],
                    locale: "en",
                    defaultSeparator: ".",
                    placeholder: /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm,
                    enableFallback: !1,
                    missingBehavior: "message",
                    missingTranslationPrefix: "",
                    missingPlaceholder: (e, t) => `[missing "${t}" value]`,
                    nullPlaceholder: (e, t, r, n) => e.missingPlaceholder(e, t, r, n),
                    transformKey: e => e
                };
            t.I18n = class {
                constructor(e = {}, t = {}) {
                    this._locale = f.locale, this._defaultLocale = f.defaultLocale, this._version = 0, this.onChangeHandlers = [], this.translations = {}, this.availableLocales = [], this.t = this.translate, this.p = this.pluralize, this.l = this.localize, this.distanceOfTimeInWords = this.timeAgoInWords;
                    let {
                        locale: r,
                        enableFallback: n,
                        missingBehavior: i,
                        missingTranslationPrefix: s,
                        missingPlaceholder: o,
                        nullPlaceholder: a,
                        defaultLocale: l,
                        defaultSeparator: p,
                        placeholder: g,
                        transformKey: m
                    } = Object.assign(Object.assign({}, f), t);
                    this.locale = r, this.defaultLocale = l, this.defaultSeparator = p, this.enableFallback = n, this.locale = r, this.missingBehavior = i, this.missingTranslationPrefix = s, this.missingPlaceholder = o, this.nullPlaceholder = a, this.placeholder = g, this.pluralization = new c.Pluralization(this), this.locales = new u.Locales(this), this.missingTranslation = new d.MissingTranslation(this), this.transformKey = m, this.interpolate = h.interpolate, this.store(e)
                }
                store(e) {
                    let t = (0, h.propertyFlatList)(e);
                    t.forEach(t => (0, l.default)(this.translations, t, (0, s.default)(e, t), Object)), this.hasChanged()
                }
                get locale() {
                    return this._locale || this.defaultLocale || "en"
                }
                set locale(e) {
                    if ("string" != typeof e) throw Error(`Expected newLocale to be a string; got ${(0,h.inferType)(e)}`);
                    let t = this._locale !== e;
                    this._locale = e, t && this.hasChanged()
                }
                get defaultLocale() {
                    return this._defaultLocale || "en"
                }
                set defaultLocale(e) {
                    if ("string" != typeof e) throw Error(`Expected newLocale to be a string; got ${(0,h.inferType)(e)}`);
                    let t = this._defaultLocale !== e;
                    this._defaultLocale = e, t && this.hasChanged()
                }
                translate(e, t) {
                    let r;
                    t = Object.assign({}, t);
                    let n = (0, h.createTranslationOptions)(this, e, t),
                        i = n.some(e => ((0, h.isSet)(e.scope) ? r = (0, h.lookup)(this, e.scope, t) : (0, h.isSet)(e.message) && (r = e.message), null != r));
                    return i ? ("string" == typeof r ? r = this.interpolate(this, r, t) : "object" == typeof r && r && (0, h.isSet)(t.count) && (r = (0, h.pluralize)({
                        i18n: this,
                        count: t.count || 0,
                        scope: r,
                        options: t,
                        baseScope: (0, h.getFullScope)(this, e, t)
                    })), t && r instanceof Array && (r = r.map(e => "string" == typeof e ? (0, h.interpolate)(this, e, t) : e)), r) : this.missingTranslation.get(e, t)
                }
                pluralize(e, t, r) {
                    return (0, h.pluralize)({
                        i18n: this,
                        count: e,
                        scope: t,
                        options: Object.assign({}, r),
                        baseScope: (0, h.getFullScope)(this, t, null != r ? r : {})
                    })
                }
                localize(e, t, r) {
                    if (r = Object.assign({}, r), null == t) return "";
                    switch (e) {
                        case "currency":
                            return this.numberToCurrency(t);
                        case "number":
                            return (0, h.formatNumber)(t, Object.assign({
                                delimiter: ",",
                                precision: 3,
                                separator: ".",
                                significant: !1,
                                stripInsignificantZeros: !1
                            }, (0, h.lookup)(this, "number.format")));
                        case "percentage":
                            return this.numberToPercentage(t);
                        default:
                            {
                                let n;
                                return n = e.match(/^(date|time)/) ? this.toTime(e, t) : t.toString(),
                                (0, h.interpolate)(this, n, r)
                            }
                    }
                }
                toTime(e, t) {
                    let r = (0, h.parseDate)(t),
                        n = (0, h.lookup)(this, e);
                    return r.toString().match(/invalid/i) || !n ? r.toString() : this.strftime(r, n)
                }
                numberToCurrency(e, t = {}) {
                    return (0, h.formatNumber)(e, Object.assign(Object.assign(Object.assign({
                        delimiter: ",",
                        format: "%u%n",
                        precision: 2,
                        separator: ".",
                        significant: !1,
                        stripInsignificantZeros: !1,
                        unit: "$"
                    }, (0, h.camelCaseKeys)(this.get("number.format"))), (0, h.camelCaseKeys)(this.get("number.currency.format"))), t))
                }
                numberToPercentage(e, t = {}) {
                    return (0, h.formatNumber)(e, Object.assign(Object.assign(Object.assign({
                        delimiter: "",
                        format: "%n%",
                        precision: 3,
                        stripInsignificantZeros: !1,
                        separator: ".",
                        significant: !1
                    }, (0, h.camelCaseKeys)(this.get("number.format"))), (0, h.camelCaseKeys)(this.get("number.percentage.format"))), t))
                }
                numberToHumanSize(e, t = {}) {
                    return (0, h.numberToHumanSize)(this, e, Object.assign(Object.assign(Object.assign({
                        delimiter: "",
                        precision: 3,
                        significant: !0,
                        stripInsignificantZeros: !0,
                        units: {
                            billion: "Billion",
                            million: "Million",
                            quadrillion: "Quadrillion",
                            thousand: "Thousand",
                            trillion: "Trillion",
                            unit: ""
                        }
                    }, (0, h.camelCaseKeys)(this.get("number.human.format"))), (0, h.camelCaseKeys)(this.get("number.human.storage_units"))), t))
                }
                numberToHuman(e, t = {}) {
                    return (0, h.numberToHuman)(this, e, Object.assign(Object.assign(Object.assign({
                        delimiter: "",
                        separator: ".",
                        precision: 3,
                        significant: !0,
                        stripInsignificantZeros: !0,
                        format: "%n %u",
                        roundMode: "default",
                        units: {
                            billion: "Billion",
                            million: "Million",
                            quadrillion: "Quadrillion",
                            thousand: "Thousand",
                            trillion: "Trillion",
                            unit: ""
                        }
                    }, (0, h.camelCaseKeys)(this.get("number.human.format"))), (0, h.camelCaseKeys)(this.get("number.human.decimal_units"))), t))
                }
                numberToRounded(e, t) {
                    return (0, h.formatNumber)(e, Object.assign({
                        unit: "",
                        precision: 3,
                        significant: !1,
                        separator: ".",
                        delimiter: "",
                        stripInsignificantZeros: !1
                    }, t))
                }
                numberToDelimited(e, t = {}) {
                    return (0, h.numberToDelimited)(e, Object.assign({
                        delimiterPattern: /(\d)(?=(\d\d\d)+(?!\d))/g,
                        delimiter: ",",
                        separator: "."
                    }, t))
                }
                withLocale(e, t) {
                    return n(this, void 0, void 0, function*() {
                        let r = this.locale;
                        try {
                            this.locale = e, yield t()
                        } finally {
                            this.locale = r
                        }
                    })
                }
                strftime(e, t, r = {}) {
                    return (0, h.strftime)(e, t, Object.assign(Object.assign(Object.assign({}, (0, h.camelCaseKeys)((0, h.lookup)(this, "date"))), {
                        meridian: {
                            am: (0, h.lookup)(this, "time.am") || "AM",
                            pm: (0, h.lookup)(this, "time.pm") || "PM"
                        }
                    }), r))
                }
                update(e, t, r = {
                    strict: !1
                }) {
                    let n;
                    if (r.strict && !(0, o.default)(this.translations, e)) throw Error(`The path "${e}" is not currently defined`);
                    let i = (0, s.default)(this.translations, e),
                        l = (0, h.inferType)(i),
                        u = (0, h.inferType)(t);
                    if (r.strict && l !== u) throw Error(`The current type for "${e}" is "${l}", but you're trying to override it with "${u}"`);
                    n = "object" === u ? Object.assign(Object.assign({}, i), t) : t, (0, a.default)(this.translations, e, n), this.hasChanged()
                }
                toSentence(e, t = {}) {
                    let {
                        wordsConnector: r,
                        twoWordsConnector: n,
                        lastWordConnector: i
                    } = Object.assign(Object.assign({
                        wordsConnector: ", ",
                        twoWordsConnector: " and ",
                        lastWordConnector: ", and "
                    }, (0, h.camelCaseKeys)((0, h.lookup)(this, "support.array"))), t), s = e.length;
                    switch (s) {
                        case 0:
                            return "";
                        case 1:
                            return `${e[0]}`;
                        case 2:
                            return e.join(n);
                        default:
                            return [e.slice(0, s - 1).join(r), i, e[s - 1]].join("")
                    }
                }
                timeAgoInWords(e, t, r = {}) {
                    return (0, h.timeAgoInWords)(this, e, t, r)
                }
                onChange(e) {
                    return this.onChangeHandlers.push(e), () => {
                        this.onChangeHandlers.splice(this.onChangeHandlers.indexOf(e), 1)
                    }
                }
                get version() {
                    return this._version
                }
                formatNumber(e, t) {
                    return (0, h.formatNumber)(e, t)
                }
                get(e) {
                    return (0, h.lookup)(this, e)
                }
                runCallbacks() {
                    this.onChangeHandlers.forEach(e => e(this))
                }
                hasChanged() {
                    this._version += 1, this.runCallbacks()
                }
            }
        },
        49353: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Locales = t.defaultLocaleResolver = void 0;
            let i = n(r(75048));
            t.defaultLocaleResolver = (e, t) => {
                let r = [],
                    n = [];
                return r.push(t), t || r.push(e.locale), e.enableFallback && r.push(e.defaultLocale), r.filter(Boolean).map(e => e.toString()).forEach(function(t) {
                    if (n.includes(t) || n.push(t), !e.enableFallback) return;
                    let r = t.split("-");
                    3 === r.length && n.push(`${r[0]}-${r[1]}`), n.push(r[0])
                }), (0, i.default)(n)
            }, t.Locales = class {
                constructor(e) {
                    this.i18n = e, this.registry = {}, this.register("default", t.defaultLocaleResolver)
                }
                register(e, t) {
                    if ("function" != typeof t) {
                        let e = t;
                        t = () => e
                    }
                    this.registry[e] = t
                }
                get(e) {
                    let t = this.registry[e] || this.registry[this.i18n.locale] || this.registry.default;
                    return "function" == typeof t && (t = t(this.i18n, e)), t instanceof Array || (t = [t]), t
                }
            }
        },
        14573: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MissingTranslation = t.errorStrategy = t.messageStrategy = t.guessStrategy = void 0;
            let n = r(34363);
            t.guessStrategy = function(e, t) {
                t instanceof Array && (t = t.join(e.defaultSeparator));
                let r = t.split(e.defaultSeparator).slice(-1)[0];
                return e.missingTranslationPrefix + r.replace("_", " ").replace(/([a-z])([A-Z])/g, (e, t, r) => `${t} ${r.toLowerCase()}`)
            }, t.messageStrategy = (e, t, r) => {
                let i = (0, n.getFullScope)(e, t, r),
                    s = "locale" in r ? r.locale : e.locale,
                    o = (0, n.inferType)(s),
                    a = ["string" == o ? s : o, i].join(e.defaultSeparator);
                return `[missing "${a}" translation]`
            }, t.errorStrategy = (e, t, r) => {
                let i = (0, n.getFullScope)(e, t, r),
                    s = [e.locale, i].join(e.defaultSeparator);
                throw Error(`Missing translation: ${s}`)
            }, t.MissingTranslation = class {
                constructor(e) {
                    this.i18n = e, this.registry = {}, this.register("guess", t.guessStrategy), this.register("message", t.messageStrategy), this.register("error", t.errorStrategy)
                }
                register(e, t) {
                    this.registry[e] = t
                }
                get(e, t) {
                    var r;
                    return this.registry[null !== (r = t.missingBehavior) && void 0 !== r ? r : this.i18n.missingBehavior](this.i18n, e, t)
                }
            }
        },
        42682: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Pluralization = t.defaultPluralizer = t.useMakePlural = void 0;
            let n = r(76520);

            function i({
                pluralizer: e,
                includeZero: t = !0,
                ordinal: r = !1
            }) {
                return function(n, i) {
                    return [t && 0 === i ? "zero" : "", e(i, r)].filter(Boolean)
                }
            }
            t.useMakePlural = i, t.defaultPluralizer = i({
                pluralizer: n.en,
                includeZero: !0
            }), t.Pluralization = class {
                constructor(e) {
                    this.i18n = e, this.registry = {}, this.register("default", t.defaultPluralizer)
                }
                register(e, t) {
                    this.registry[e] = t
                }
                get(e) {
                    return this.registry[e] || this.registry[this.i18n.locale] || this.registry.default
                }
            }
        },
        93154: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.camelCaseKeys = void 0;
            let i = n(r(21581));
            t.camelCaseKeys = function(e) {
                return e ? Object.keys(e).reduce((t, r) => (t[(0, i.default)(r)] = e[r], t), {}) : {}
            }
        },
        69613: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTranslationOptions = void 0;
            let n = r(2635);
            t.createTranslationOptions = function(e, t, r) {
                let i = [{
                    scope: t
                }];
                if ((0, n.isSet)(r.defaults) && (i = i.concat(r.defaults)), (0, n.isSet)(r.defaultValue)) {
                    let n = "function" == typeof r.defaultValue ? r.defaultValue(e, t, r) : r.defaultValue;
                    i.push({
                        message: n
                    }), delete r.defaultValue
                }
                return i
            }
        },
        98610: function(e, t, r) {
            "use strict";
            var n, i, s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.expandRoundMode = void 0;
            let o = s(r(93109));
            (n = i || (i = {}))[n.up = o.default.ROUND_UP] = "up", n[n.down = o.default.ROUND_DOWN] = "down", n[n.truncate = o.default.ROUND_DOWN] = "truncate", n[n.halfUp = o.default.ROUND_HALF_UP] = "halfUp", n[n.default = o.default.ROUND_HALF_UP] = "default", n[n.halfDown = o.default.ROUND_HALF_DOWN] = "halfDown", n[n.halfEven = o.default.ROUND_HALF_EVEN] = "halfEven", n[n.banker = o.default.ROUND_HALF_EVEN] = "banker", n[n.ceiling = o.default.ROUND_CEIL] = "ceiling", n[n.ceil = o.default.ROUND_CEIL] = "ceil", n[n.floor = o.default.ROUND_FLOOR] = "floor", t.expandRoundMode = function(e) {
                var t;
                return null !== (t = i[e]) && void 0 !== t ? t : i.default
            }
        },
        13149: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatNumber = void 0;
            let i = n(r(93109)),
                s = n(r(55888)),
                o = r(4417);
            t.formatNumber = function(e, t) {
                var r, n, a;
                let l;
                let u = new i.default(e);
                if (t.raise && !u.isFinite()) throw Error(`"${e}" is not a valid numeric value`);
                let c = (0, o.roundNumber)(u, t),
                    d = new i.default(c),
                    h = d.lt(0),
                    f = d.isZero(),
                    [p, g] = c.split("."),
                    m = [],
                    y = null !== (r = t.format) && void 0 !== r ? r : "%n",
                    b = null !== (n = t.negativeFormat) && void 0 !== n ? n : `-${y}`,
                    w = h && !f ? b : y;
                for (p = p.replace("-", ""); p.length > 0;) m.unshift(p.substr(Math.max(0, p.length - 3), 3)), p = p.substr(0, p.length - 3);
                return p = m.join(""), l = m.join(t.delimiter), g = t.significant ? function({
                        significand: e,
                        whole: t,
                        precision: r
                    }) {
                        if ("0" === t || null === r) return e;
                        let n = Math.max(0, r - t.length);
                        return (null != e ? e : "").substr(0, n)
                    }({
                        whole: p,
                        significand: g,
                        precision: t.precision
                    }) : null != g ? g : (0, s.default)("0", null !== (a = t.precision) && void 0 !== a ? a : 0), t.stripInsignificantZeros && g && (g = g.replace(/0+$/, "")), u.isNaN() && (l = e.toString()), g && u.isFinite() && (l += (t.separator || ".") + g),
                    function(e, {
                        formattedNumber: t,
                        unit: r
                    }) {
                        return e.replace("%n", t).replace("%u", r)
                    }(w, {
                        formattedNumber: l,
                        unit: t.unit
                    })
            }
        },
        187: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFullScope = void 0, t.getFullScope = function(e, t, r) {
                let n = "";
                return (t instanceof String || "string" == typeof t) && (n = t), t instanceof Array && (n = t.join(e.defaultSeparator)), r.scope && (n = [r.scope, n].join(e.defaultSeparator)), n
            }
        },
        34363: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.timeAgoInWords = t.strftime = t.roundNumber = t.propertyFlatList = t.pluralize = t.parseDate = t.numberToHumanSize = t.numberToHuman = t.numberToDelimited = t.lookup = t.isSet = t.interpolate = t.inferType = t.getFullScope = t.formatNumber = t.expandRoundMode = t.createTranslationOptions = t.camelCaseKeys = void 0;
            var n = r(93154);
            Object.defineProperty(t, "camelCaseKeys", {
                enumerable: !0,
                get: function() {
                    return n.camelCaseKeys
                }
            });
            var i = r(69613);
            Object.defineProperty(t, "createTranslationOptions", {
                enumerable: !0,
                get: function() {
                    return i.createTranslationOptions
                }
            });
            var s = r(98610);
            Object.defineProperty(t, "expandRoundMode", {
                enumerable: !0,
                get: function() {
                    return s.expandRoundMode
                }
            });
            var o = r(13149);
            Object.defineProperty(t, "formatNumber", {
                enumerable: !0,
                get: function() {
                    return o.formatNumber
                }
            });
            var a = r(187);
            Object.defineProperty(t, "getFullScope", {
                enumerable: !0,
                get: function() {
                    return a.getFullScope
                }
            });
            var l = r(40330);
            Object.defineProperty(t, "inferType", {
                enumerable: !0,
                get: function() {
                    return l.inferType
                }
            });
            var u = r(39206);
            Object.defineProperty(t, "interpolate", {
                enumerable: !0,
                get: function() {
                    return u.interpolate
                }
            });
            var c = r(2635);
            Object.defineProperty(t, "isSet", {
                enumerable: !0,
                get: function() {
                    return c.isSet
                }
            });
            var d = r(51039);
            Object.defineProperty(t, "lookup", {
                enumerable: !0,
                get: function() {
                    return d.lookup
                }
            });
            var h = r(24631);
            Object.defineProperty(t, "numberToDelimited", {
                enumerable: !0,
                get: function() {
                    return h.numberToDelimited
                }
            });
            var f = r(12220);
            Object.defineProperty(t, "numberToHuman", {
                enumerable: !0,
                get: function() {
                    return f.numberToHuman
                }
            });
            var p = r(85323);
            Object.defineProperty(t, "numberToHumanSize", {
                enumerable: !0,
                get: function() {
                    return p.numberToHumanSize
                }
            });
            var g = r(96668);
            Object.defineProperty(t, "parseDate", {
                enumerable: !0,
                get: function() {
                    return g.parseDate
                }
            });
            var m = r(21662);
            Object.defineProperty(t, "pluralize", {
                enumerable: !0,
                get: function() {
                    return m.pluralize
                }
            });
            var y = r(85942);
            Object.defineProperty(t, "propertyFlatList", {
                enumerable: !0,
                get: function() {
                    return y.propertyFlatList
                }
            });
            var b = r(4417);
            Object.defineProperty(t, "roundNumber", {
                enumerable: !0,
                get: function() {
                    return b.roundNumber
                }
            });
            var w = r(81210);
            Object.defineProperty(t, "strftime", {
                enumerable: !0,
                get: function() {
                    return w.strftime
                }
            });
            var A = r(79510);
            Object.defineProperty(t, "timeAgoInWords", {
                enumerable: !0,
                get: function() {
                    return A.timeAgoInWords
                }
            })
        },
        40330: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.inferType = void 0, t.inferType = function(e) {
                var t, r;
                if (null === e) return "null";
                let n = typeof e;
                return "object" !== n ? n : (null === (r = null === (t = null == e ? void 0 : e.constructor) || void 0 === t ? void 0 : t.name) || void 0 === r ? void 0 : r.toLowerCase()) || "object"
            }
        },
        39206: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.interpolate = void 0;
            let n = r(2635);
            t.interpolate = function(e, t, r) {
                r = Object.keys(r).reduce((t, n) => (t[e.transformKey(n)] = r[n], t), {});
                let i = t.match(e.placeholder);
                if (!i) return t;
                for (; i.length;) {
                    let s;
                    let o = i.shift(),
                        a = o.replace(e.placeholder, "$1");
                    s = (0, n.isSet)(r[a]) ? r[a].toString().replace(/\$/gm, "_#$#_") : a in r ? e.nullPlaceholder(e, o, t, r) : e.missingPlaceholder(e, o, t, r);
                    let l = new RegExp(o.replace(/\{/gm, "\\{").replace(/\}/gm, "\\}"));
                    t = t.replace(l, s)
                }
                return t.replace(/_#\$#_/g, "$")
            }
        },
        2635: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isSet = void 0, t.isSet = function(e) {
                return null != e
            }
        },
        51039: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.lookup = void 0;
            let i = n(r(32639)),
                s = r(2635),
                o = r(187),
                a = r(40330);
            t.lookup = function(e, t, r = {}) {
                r = Object.assign({}, r);
                let n = "locale" in r ? r.locale : e.locale,
                    l = (0, a.inferType)(n),
                    u = e.locales.get("string" === l ? n : typeof n).slice();
                t = (0, o.getFullScope)(e, t, r).split(e.defaultSeparator).map(t => e.transformKey(t)).join(".");
                let c = u.map(r => (0, i.default)(e.translations, [r, t].join(".")));
                return c.push(r.defaultValue), c.find(e => (0, s.isSet)(e))
            }
        },
        24631: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.numberToDelimited = void 0;
            let i = n(r(93109));
            t.numberToDelimited = function(e, t) {
                let r = new i.default(e);
                if (!r.isFinite()) return e.toString();
                if (!t.delimiterPattern.global) throw Error(`options.delimiterPattern must be a global regular expression; received ${t.delimiterPattern}`);
                let [n, s] = r.toString().split(".");
                return [n = n.replace(t.delimiterPattern, e => `${e}${t.delimiter}`), s].filter(Boolean).join(t.separator)
            }
        },
        12220: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.numberToHuman = void 0;
            let i = n(r(93109)),
                s = n(r(83750)),
                o = n(r(66292)),
                a = r(187),
                l = r(51039),
                u = r(4417),
                c = r(40330),
                d = {
                    0: "unit",
                    1: "ten",
                    2: "hundred",
                    3: "thousand",
                    6: "million",
                    9: "billion",
                    12: "trillion",
                    15: "quadrillion",
                    "-1": "deci",
                    "-2": "centi",
                    "-3": "mili",
                    "-6": "micro",
                    "-9": "nano",
                    "-12": "pico",
                    "-15": "femto"
                },
                h = (0, o.default)(Object.values(d), Object.keys(d).map(e => parseInt(e, 10)));
            t.numberToHuman = function(e, t, r) {
                let n;
                let o = {
                    roundMode: r.roundMode,
                    precision: r.precision,
                    significant: r.significant
                };
                if ("string" === (0, c.inferType)(r.units)) {
                    let t = r.units;
                    if (!(n = (0, l.lookup)(e, t))) throw Error(`The scope "${e.locale}${e.defaultSeparator}${(0,a.getFullScope)(e,t,{})}" couldn't be found`)
                } else n = r.units;
                let f = (0, u.roundNumber)(new i.default(t), o),
                    p = e => (0, s.default)(Object.keys(e).map(e => h[e]), e => -1 * e),
                    g = ((e, t) => {
                        let r = e.isZero() ? 0 : Math.floor(Math.log10(e.abs().toNumber()));
                        return p(t).find(e => r >= e) || 0
                    })(new i.default(f), n),
                    m = ((e, t) => {
                        let r = d[t.toString()];
                        return e[r] || ""
                    })(n, g);
                if (f = (0, u.roundNumber)(new i.default(f).div(Math.pow(10, g)), o), r.stripInsignificantZeros) {
                    let [e, t] = f.split(".");
                    t = (t || "").replace(/0+$/, ""), f = e, t && (f += `${r.separator}${t}`)
                }
                return r.format.replace("%n", f || "0").replace("%u", m).trim()
            }
        },
        85323: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.numberToHumanSize = void 0;
            let i = n(r(93109)),
                s = r(4417),
                o = r(98610),
                a = ["byte", "kb", "mb", "gb", "tb", "pb", "eb"];
            t.numberToHumanSize = function(e, t, r) {
                let n;
                let l = (0, o.expandRoundMode)(r.roundMode),
                    u = new i.default(t).abs(),
                    c = u.lt(1024),
                    d = ((e, t) => {
                        let r = t.length - 1,
                            n = new i.default(Math.log(e.toNumber())).div(Math.log(1024)).integerValue(i.default.ROUND_DOWN).toNumber();
                        return Math.min(r, n)
                    })(u, a);
                n = c ? u.integerValue() : new i.default((0, s.roundNumber)(u.div(Math.pow(1024, d)), {
                    significant: r.significant,
                    precision: r.precision,
                    roundMode: r.roundMode
                }));
                let h = e.translate("number.human.storage_units.format", {
                        defaultValue: "%n %u"
                    }),
                    f = e.translate((e => {
                        let t = c ? "byte" : e[d];
                        return `number.human.storage_units.units.${t}`
                    })(a), {
                        count: u.integerValue().toNumber()
                    }),
                    p = n.toFixed(r.precision, l);
                return r.stripInsignificantZeros && (p = p.replace(/(\..*?)0+$/, "$1").replace(/\.$/, "")), h.replace("%n", p).replace("%u", f)
            }
        },
        96668: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseDate = void 0, t.parseDate = function(e) {
                if (e instanceof Date) return e;
                if ("number" == typeof e) {
                    let t = new Date;
                    return t.setTime(e), t
                }
                let t = new String(e).match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2})(?:[.,](\d{1,3}))?)?(Z|\+00:?00)?/);
                if (t) {
                    let e = t.slice(1, 8).map(e => parseInt(e, 10) || 0);
                    e[1] -= 1;
                    let [r, n, i, s, o, a, l] = e, u = t[8];
                    return u ? new Date(Date.UTC(r, n, i, s, o, a, l)) : new Date(r, n, i, s, o, a, l)
                }
                if (e.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\d+) (\d+:\d+:\d+) ([+-]\d+) (\d+)/)) {
                    let e = new Date;
                    e.setTime(Date.parse([RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5].join(" ")))
                }
                let r = new Date;
                return r.setTime(Date.parse(e)), r
            }
        },
        21662: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.pluralize = void 0;
            let n = r(2635),
                i = r(51039);
            t.pluralize = function({
                i18n: e,
                count: t,
                scope: r,
                options: s,
                baseScope: o
            }) {
                let a, l;
                if (s = Object.assign({}, s), !(a = "object" == typeof r && r ? r : (0, i.lookup)(e, r, s))) return e.missingTranslation.get(r, s);
                let u = e.pluralization.get(s.locale),
                    c = u(e, t),
                    d = [];
                for (; c.length;) {
                    let e = c.shift();
                    if ((0, n.isSet)(a[e])) {
                        l = a[e];
                        break
                    }
                    d.push(e)
                }
                return (0, n.isSet)(l) ? (s.count = t, e.interpolate(e, l, s)) : e.missingTranslation.get(o.split(e.defaultSeparator).concat([d[0]]), s)
            }
        },
        85942: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.propertyFlatList = void 0;
            let i = n(r(20650)),
                s = n(r(26499));
            class o {
                constructor(e) {
                    this.target = e
                }
                call() {
                    let e = (0, s.default)(Object.keys(this.target).map(e => this.compute(this.target[e], e)));
                    return e.sort(), e
                }
                compute(e, t) {
                    return !Array.isArray(e) && (0, i.default)(e) ? Object.keys(e).map(r => this.compute(e[r], `${t}.${r}`)) : t
                }
            }
            t.propertyFlatList = function(e) {
                return new o(e).call()
            }
        },
        4417: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.roundNumber = void 0;
            let i = n(r(93109)),
                s = r(98610);
            t.roundNumber = function(e, t) {
                let r = function(e, {
                    precision: t,
                    significant: r
                }) {
                    return r && null !== t && t > 0 ? t - (e.isZero() ? 1 : Math.floor(Math.log10(e.abs().toNumber()) + 1)) : t
                }(e, t);
                if (null === r) return e.toString();
                let n = (0, s.expandRoundMode)(t.roundMode);
                if (r >= 0) return e.toFixed(r, n);
                let o = Math.pow(10, Math.abs(r));
                return (e = new i.default(e.div(o).toFixed(0, n)).times(o)).toString()
            }
        },
        81210: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.strftime = void 0;
            let r = {
                meridian: {
                    am: "AM",
                    pm: "PM"
                },
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                abbrDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                monthNames: [null, "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                abbrMonthNames: [null, "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
            };
            t.strftime = function(e, t, n = {}) {
                let {
                    abbrDayNames: i,
                    dayNames: s,
                    abbrMonthNames: o,
                    monthNames: a,
                    meridian: l
                } = Object.assign(Object.assign({}, r), n);
                if (isNaN(e.getTime())) throw Error("strftime() requires a valid date object, but received an invalid date.");
                let u = e.getDay(),
                    c = e.getDate(),
                    d = e.getFullYear(),
                    h = e.getMonth() + 1,
                    f = e.getHours(),
                    p = f,
                    g = f > 11 ? "pm" : "am",
                    m = e.getSeconds(),
                    y = e.getMinutes(),
                    b = e.getTimezoneOffset(),
                    w = Math.floor(Math.abs(b / 60)),
                    A = Math.abs(b) - 60 * w,
                    v = (b > 0 ? "-" : "+") + (w.toString().length < 2 ? "0" + w : w) + (A.toString().length < 2 ? "0" + A : A);
                return p > 12 ? p -= 12 : 0 === p && (p = 12), t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace("%a", i[u])).replace("%A", s[u])).replace("%b", o[h])).replace("%B", a[h])).replace("%d", c.toString().padStart(2, "0"))).replace("%e", c.toString())).replace("%-d", c.toString())).replace("%H", f.toString().padStart(2, "0"))).replace("%-H", f.toString())).replace("%k", f.toString())).replace("%I", p.toString().padStart(2, "0"))).replace("%-I", p.toString())).replace("%l", p.toString())).replace("%m", h.toString().padStart(2, "0"))).replace("%-m", h.toString())).replace("%M", y.toString().padStart(2, "0"))).replace("%-M", y.toString())).replace("%p", l[g])).replace("%P", l[g].toLowerCase())).replace("%S", m.toString().padStart(2, "0"))).replace("%-S", m.toString())).replace("%w", u.toString())).replace("%y", d.toString().padStart(2, "0").substr(-2))).replace("%-y", d.toString().padStart(2, "0").substr(-2).replace(/^0+/, ""))).replace("%Y", d.toString())).replace(/%z/i, v)
            }
        },
        79510: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.timeAgoInWords = void 0;
            let i = n(r(15537)),
                s = r(96668),
                o = (e, t, r) => r >= e && r <= t;
            t.timeAgoInWords = function(e, t, r, n = {}) {
                let a = n.scope || "datetime.distance_in_words",
                    l = (t, r = 0) => e.t(t, {
                        count: r,
                        scope: a
                    });
                t = (0, s.parseDate)(t), r = (0, s.parseDate)(r);
                let u = t.getTime() / 1e3,
                    c = r.getTime() / 1e3;
                u > c && ([t, r, u, c] = [r, t, c, u]);
                let d = Math.round(c - u),
                    h = Math.round((c - u) / 60),
                    f = h / 60,
                    p = Math.round(h / 60),
                    g = Math.round(f / 24),
                    m = Math.round(g / 30);
                if (o(0, 1, h)) return n.includeSeconds ? o(0, 4, d) ? l("less_than_x_seconds", 5) : o(5, 9, d) ? l("less_than_x_seconds", 10) : o(10, 19, d) ? l("less_than_x_seconds", 20) : o(20, 39, d) ? l("half_a_minute") : l(o(40, 59, d) ? "less_than_x_minutes" : "x_minutes", 1) : 0 === h ? l("less_than_x_minutes", 1) : l("x_minutes", h);
                if (o(2, 44, h)) return l("x_minutes", h);
                if (o(45, 89, h)) return l("about_x_hours", 1);
                if (o(90, 1439, h)) return l("about_x_hours", p);
                if (o(1440, 2519, h)) return l("x_days", 1);
                if (o(2520, 43199, h)) return l("x_days", g);
                if (o(43200, 86399, h)) return l("about_x_months", Math.round(h / 43200));
                if (o(86400, 525599, h)) return l("x_months", m);
                let y = t.getFullYear();
                t.getMonth() + 1 >= 3 && (y += 1);
                let b = r.getFullYear();
                r.getMonth() + 1 < 3 && (b -= 1);
                let w = y > b ? 0 : (0, i.default)(y, b).filter(e => 1 == new Date(e, 1, 29).getMonth()).length,
                    A = h - 1440 * w,
                    v = Math.trunc(A / 525600),
                    E = parseFloat((A / 525600 - v).toPrecision(3));
                return E < .25 ? l("about_x_years", v) : E < .75 ? l("over_x_years", v) : l("almost_x_years", v + 1)
            }
        },
        37658: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.useMakePlural = t.Pluralization = t.MissingTranslation = t.Locales = t.I18n = void 0;
            var s = r(52127);
            Object.defineProperty(t, "I18n", {
                enumerable: !0,
                get: function() {
                    return s.I18n
                }
            });
            var o = r(49353);
            Object.defineProperty(t, "Locales", {
                enumerable: !0,
                get: function() {
                    return o.Locales
                }
            });
            var a = r(14573);
            Object.defineProperty(t, "MissingTranslation", {
                enumerable: !0,
                get: function() {
                    return a.MissingTranslation
                }
            });
            var l = r(42682);
            Object.defineProperty(t, "Pluralization", {
                enumerable: !0,
                get: function() {
                    return l.Pluralization
                }
            }), Object.defineProperty(t, "useMakePlural", {
                enumerable: !0,
                get: function() {
                    return l.useMakePlural
                }
            }), i(r(25121), t)
        },
        25121: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            })
        },
        15891: function(e) {
            e.exports = function(e, t, r, n) {
                var i = -1,
                    s = null == e ? 0 : e.length;
                for (n && s && (r = e[++i]); ++i < s;) r = t(r, e[i], i, e);
                return r
            }
        },
        71788: function(e) {
            var t = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
            e.exports = function(e) {
                return e.match(t) || []
            }
        },
        89756: function(e, t, r) {
            var n = r(19638),
                i = r(84864),
                s = Object.prototype.hasOwnProperty;
            e.exports = function(e, t, r) {
                var o = e[t];
                s.call(e, t) && i(o, r) && (void 0 !== r || t in e) || n(e, t, r)
            }
        },
        68357: function(e) {
            var t = Object.prototype.hasOwnProperty;
            e.exports = function(e, r) {
                return null != e && t.call(e, r)
            }
        },
        98995: function(e) {
            e.exports = function(e) {
                return function(t) {
                    return null == e ? void 0 : e[t]
                }
            }
        },
        12957: function(e) {
            var t = Math.floor;
            e.exports = function(e, r) {
                var n = "";
                if (!e || r < 1 || r > 9007199254740991) return n;
                do r % 2 && (n += e), (r = t(r / 2)) && (e += e); while (r);
                return n
            }
        },
        82002: function(e, t, r) {
            var n = r(89756),
                i = r(94714),
                s = r(37662),
                o = r(20650),
                a = r(38026);
            e.exports = function(e, t, r, l) {
                if (!o(e)) return e;
                t = i(t, e);
                for (var u = -1, c = t.length, d = c - 1, h = e; null != h && ++u < c;) {
                    var f = a(t[u]),
                        p = r;
                    if ("__proto__" === f || "constructor" === f || "prototype" === f) break;
                    if (u != d) {
                        var g = h[f];
                        void 0 === (p = l ? l(g, f, h) : void 0) && (p = o(g) ? g : s(t[u + 1]) ? [] : {})
                    }
                    n(h, f, p), h = h[f]
                }
                return e
            }
        },
        18668: function(e) {
            e.exports = function(e, t, r) {
                for (var n = -1, i = e.length, s = t.length, o = {}; ++n < i;) {
                    var a = n < s ? t[n] : void 0;
                    r(o, e[n], a)
                }
                return o
            }
        },
        91878: function(e, t, r) {
            var n = r(15891),
                i = r(12307),
                s = r(14327),
                o = RegExp("['’]", "g");
            e.exports = function(e) {
                return function(t) {
                    return n(s(i(t).replace(o, "")), e, "")
                }
            }
        },
        29835: function(e, t, r) {
            var n = r(98995)({
                À: "A",
                Á: "A",
                Â: "A",
                Ã: "A",
                Ä: "A",
                Å: "A",
                à: "a",
                á: "a",
                â: "a",
                ã: "a",
                ä: "a",
                å: "a",
                Ç: "C",
                ç: "c",
                Ð: "D",
                ð: "d",
                È: "E",
                É: "E",
                Ê: "E",
                Ë: "E",
                è: "e",
                é: "e",
                ê: "e",
                ë: "e",
                Ì: "I",
                Í: "I",
                Î: "I",
                Ï: "I",
                ì: "i",
                í: "i",
                î: "i",
                ï: "i",
                Ñ: "N",
                ñ: "n",
                Ò: "O",
                Ó: "O",
                Ô: "O",
                Õ: "O",
                Ö: "O",
                Ø: "O",
                ò: "o",
                ó: "o",
                ô: "o",
                õ: "o",
                ö: "o",
                ø: "o",
                Ù: "U",
                Ú: "U",
                Û: "U",
                Ü: "U",
                ù: "u",
                ú: "u",
                û: "u",
                ü: "u",
                Ý: "Y",
                ý: "y",
                ÿ: "y",
                Æ: "Ae",
                æ: "ae",
                Þ: "Th",
                þ: "th",
                ß: "ss",
                Ā: "A",
                Ă: "A",
                Ą: "A",
                ā: "a",
                ă: "a",
                ą: "a",
                Ć: "C",
                Ĉ: "C",
                Ċ: "C",
                Č: "C",
                ć: "c",
                ĉ: "c",
                ċ: "c",
                č: "c",
                Ď: "D",
                Đ: "D",
                ď: "d",
                đ: "d",
                Ē: "E",
                Ĕ: "E",
                Ė: "E",
                Ę: "E",
                Ě: "E",
                ē: "e",
                ĕ: "e",
                ė: "e",
                ę: "e",
                ě: "e",
                Ĝ: "G",
                Ğ: "G",
                Ġ: "G",
                Ģ: "G",
                ĝ: "g",
                ğ: "g",
                ġ: "g",
                ģ: "g",
                Ĥ: "H",
                Ħ: "H",
                ĥ: "h",
                ħ: "h",
                Ĩ: "I",
                Ī: "I",
                Ĭ: "I",
                Į: "I",
                İ: "I",
                ĩ: "i",
                ī: "i",
                ĭ: "i",
                į: "i",
                ı: "i",
                Ĵ: "J",
                ĵ: "j",
                Ķ: "K",
                ķ: "k",
                ĸ: "k",
                Ĺ: "L",
                Ļ: "L",
                Ľ: "L",
                Ŀ: "L",
                Ł: "L",
                ĺ: "l",
                ļ: "l",
                ľ: "l",
                ŀ: "l",
                ł: "l",
                Ń: "N",
                Ņ: "N",
                Ň: "N",
                Ŋ: "N",
                ń: "n",
                ņ: "n",
                ň: "n",
                ŋ: "n",
                Ō: "O",
                Ŏ: "O",
                Ő: "O",
                ō: "o",
                ŏ: "o",
                ő: "o",
                Ŕ: "R",
                Ŗ: "R",
                Ř: "R",
                ŕ: "r",
                ŗ: "r",
                ř: "r",
                Ś: "S",
                Ŝ: "S",
                Ş: "S",
                Š: "S",
                ś: "s",
                ŝ: "s",
                ş: "s",
                š: "s",
                Ţ: "T",
                Ť: "T",
                Ŧ: "T",
                ţ: "t",
                ť: "t",
                ŧ: "t",
                Ũ: "U",
                Ū: "U",
                Ŭ: "U",
                Ů: "U",
                Ű: "U",
                Ų: "U",
                ũ: "u",
                ū: "u",
                ŭ: "u",
                ů: "u",
                ű: "u",
                ų: "u",
                Ŵ: "W",
                ŵ: "w",
                Ŷ: "Y",
                ŷ: "y",
                Ÿ: "Y",
                Ź: "Z",
                Ż: "Z",
                Ž: "Z",
                ź: "z",
                ż: "z",
                ž: "z",
                Ĳ: "IJ",
                ĳ: "ij",
                Œ: "Oe",
                œ: "oe",
                ŉ: "'n",
                ſ: "s"
            });
            e.exports = n
        },
        1715: function(e) {
            var t = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
            e.exports = function(e) {
                return t.test(e)
            }
        },
        17323: function(e) {
            var t = "\ud800-\udfff",
                r = "\\u2700-\\u27bf",
                n = "a-z\\xdf-\\xf6\\xf8-\\xff",
                i = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                s = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                o = "['’]",
                a = "[" + s + "]",
                l = "[" + n + "]",
                u = "[^" + t + s + "\\d+" + r + n + i + "]",
                c = "(?:\ud83c[\udde6-\uddff]){2}",
                d = "[\ud800-\udbff][\udc00-\udfff]",
                h = "[" + i + "]",
                f = "(?:" + l + "|" + u + ")",
                p = "(?:" + o + "(?:d|ll|m|re|s|t|ve))?",
                g = "(?:" + o + "(?:D|LL|M|RE|S|T|VE))?",
                m = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\ud83c[\udffb-\udfff])?",
                y = "[\\ufe0e\\ufe0f]?",
                b = "(?:\\u200d(?:" + ["[^" + t + "]", c, d].join("|") + ")" + y + m + ")*",
                w = "(?:" + ["[" + r + "]", c, d].join("|") + ")" + (y + m + b),
                A = RegExp([h + "?" + l + "+" + p + "(?=" + [a, h, "$"].join("|") + ")", "(?:" + h + "|" + u + ")+" + g + "(?=" + [a, h + f, "$"].join("|") + ")", h + "?" + f + "+" + p, h + "+" + g, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", "\\d+", w].join("|"), "g");
            e.exports = function(e) {
                return e.match(A) || []
            }
        },
        21581: function(e, t, r) {
            var n = r(66402),
                i = r(91878)(function(e, t, r) {
                    return t = t.toLowerCase(), e + (r ? n(t) : t)
                });
            e.exports = i
        },
        66402: function(e, t, r) {
            var n = r(39865),
                i = r(29880);
            e.exports = function(e) {
                return i(n(e).toLowerCase())
            }
        },
        12307: function(e, t, r) {
            var n = r(29835),
                i = r(39865),
                s = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                o = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]", "g");
            e.exports = function(e) {
                return (e = i(e)) && e.replace(s, n).replace(o, "")
            }
        },
        26499: function(e, t, r) {
            var n = r(76030),
                i = 1 / 0;
            e.exports = function(e) {
                return (null == e ? 0 : e.length) ? n(e, i) : []
            }
        },
        30270: function(e, t, r) {
            var n = r(68357),
                i = r(77228);
            e.exports = function(e, t) {
                return null != e && i(e, t, n)
            }
        },
        55888: function(e, t, r) {
            var n = r(12957),
                i = r(77367),
                s = r(86763),
                o = r(39865);
            e.exports = function(e, t, r) {
                return t = (r ? i(e, t, r) : void 0 === t) ? 1 : s(t), n(o(e), t)
            }
        },
        3691: function(e, t, r) {
            var n = r(82002);
            e.exports = function(e, t, r) {
                return null == e ? e : n(e, t, r)
            }
        },
        10764: function(e, t, r) {
            var n = r(82002);
            e.exports = function(e, t, r, i) {
                return i = "function" == typeof i ? i : void 0, null == e ? e : n(e, t, r, i)
            }
        },
        75048: function(e, t, r) {
            var n = r(75458);
            e.exports = function(e) {
                return e && e.length ? n(e) : []
            }
        },
        14327: function(e, t, r) {
            var n = r(71788),
                i = r(1715),
                s = r(39865),
                o = r(17323);
            e.exports = function(e, t, r) {
                return (e = s(e), void 0 === (t = r ? void 0 : t)) ? i(e) ? o(e) : n(e) : e.match(t) || []
            }
        },
        66292: function(e, t, r) {
            var n = r(89756),
                i = r(18668);
            e.exports = function(e, t) {
                return i(e || [], t || [], n)
            }
        },
        69718: function(e, t) {
            "use strict";
            let r;
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    DOMAttributeNames: function() {
                        return n
                    },
                    isEqualNode: function() {
                        return s
                    },
                    default: function() {
                        return o
                    }
                });
            let n = {
                acceptCharset: "accept-charset",
                className: "class",
                htmlFor: "for",
                httpEquiv: "http-equiv",
                noModule: "noModule"
            };

            function i(e) {
                let {
                    type: t,
                    props: r
                } = e, i = document.createElement(t);
                for (let e in r) {
                    if (!r.hasOwnProperty(e) || "children" === e || "dangerouslySetInnerHTML" === e || void 0 === r[e]) continue;
                    let s = n[e] || e.toLowerCase();
                    "script" === t && ("async" === s || "defer" === s || "noModule" === s) ? i[s] = !!r[e] : i.setAttribute(s, r[e])
                }
                let {
                    children: s,
                    dangerouslySetInnerHTML: o
                } = r;
                return o ? i.innerHTML = o.__html || "" : s && (i.textContent = "string" == typeof s ? s : Array.isArray(s) ? s.join("") : ""), i
            }

            function s(e, t) {
                if (e instanceof HTMLElement && t instanceof HTMLElement) {
                    let r = t.getAttribute("nonce");
                    if (r && !e.getAttribute("nonce")) {
                        let n = t.cloneNode(!0);
                        return n.setAttribute("nonce", ""), n.nonce = r, r === e.nonce && e.isEqualNode(n)
                    }
                }
                return e.isEqualNode(t)
            }

            function o() {
                return {
                    mountedInstances: new Set,
                    updateHead: e => {
                        let t = {};
                        e.forEach(e => {
                            if ("link" === e.type && e.props["data-optimized-fonts"]) {
                                if (document.querySelector('style[data-href="' + e.props["data-href"] + '"]')) return;
                                e.props.href = e.props["data-href"], e.props["data-href"] = void 0
                            }
                            let r = t[e.type] || [];
                            r.push(e), t[e.type] = r
                        });
                        let n = t.title ? t.title[0] : null,
                            i = "";
                        if (n) {
                            let {
                                children: e
                            } = n.props;
                            i = "string" == typeof e ? e : Array.isArray(e) ? e.join("") : ""
                        }
                        i !== document.title && (document.title = i), ["meta", "base", "link", "style", "script"].forEach(e => {
                            r(e, t[e] || [])
                        })
                    }
                }
            }
            r = (e, t) => {
                let r = document.getElementsByTagName("head")[0],
                    n = r.querySelector("meta[name=next-head-count]"),
                    o = Number(n.content),
                    a = [];
                for (let t = 0, r = n.previousElementSibling; t < o; t++, r = (null == r ? void 0 : r.previousElementSibling) || null) {
                    var l;
                    (null == r ? void 0 : null == (l = r.tagName) ? void 0 : l.toLowerCase()) === e && a.push(r)
                }
                let u = t.map(i).filter(e => {
                    for (let t = 0, r = a.length; t < r; t++) {
                        let r = a[t];
                        if (s(r, e)) return a.splice(t, 1), !1
                    }
                    return !0
                });
                a.forEach(e => {
                    var t;
                    return null == (t = e.parentNode) ? void 0 : t.removeChild(e)
                }), u.forEach(e => r.insertBefore(e, n)), n.content = (o - a.length + u.length).toString()
            }, ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        7305: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    requestIdleCallback: function() {
                        return r
                    },
                    cancelIdleCallback: function() {
                        return n
                    }
                });
            let r = "undefined" != typeof self && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(e) {
                    let t = Date.now();
                    return self.setTimeout(function() {
                        e({
                            didTimeout: !1,
                            timeRemaining: function() {
                                return Math.max(0, 50 - (Date.now() - t))
                            }
                        })
                    }, 1)
                },
                n = "undefined" != typeof self && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(e) {
                    return clearTimeout(e)
                };
            ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        99714: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e, t) {
                    for (var r in t) Object.defineProperty(e, r, {
                        enumerable: !0,
                        get: t[r]
                    })
                }(t, {
                    handleClientScriptLoad: function() {
                        return p
                    },
                    initScriptLoader: function() {
                        return g
                    },
                    default: function() {
                        return y
                    }
                });
            let n = r(91909),
                i = r(56392),
                s = n._(r(52590)),
                o = i._(r(27024)),
                a = r(66559),
                l = r(69718),
                u = r(7305),
                c = new Map,
                d = new Set,
                h = ["onLoad", "onReady", "dangerouslySetInnerHTML", "children", "onError", "strategy"],
                f = e => {
                    let {
                        src: t,
                        id: r,
                        onLoad: n = () => {},
                        onReady: i = null,
                        dangerouslySetInnerHTML: s,
                        children: o = "",
                        strategy: a = "afterInteractive",
                        onError: u
                    } = e, f = r || t;
                    if (f && d.has(f)) return;
                    if (c.has(t)) {
                        d.add(f), c.get(t).then(n, u);
                        return
                    }
                    let p = () => {
                            i && i(), d.add(f)
                        },
                        g = document.createElement("script"),
                        m = new Promise((e, t) => {
                            g.addEventListener("load", function(t) {
                                e(), n && n.call(this, t), p()
                            }), g.addEventListener("error", function(e) {
                                t(e)
                            })
                        }).catch(function(e) {
                            u && u(e)
                        });
                    for (let [r, n] of (s ? (g.innerHTML = s.__html || "", p()) : o ? (g.textContent = "string" == typeof o ? o : Array.isArray(o) ? o.join("") : "", p()) : t && (g.src = t, c.set(t, m)), Object.entries(e))) {
                        if (void 0 === n || h.includes(r)) continue;
                        let e = l.DOMAttributeNames[r] || r.toLowerCase();
                        g.setAttribute(e, n)
                    }
                    "worker" === a && g.setAttribute("type", "text/partytown"), g.setAttribute("data-nscript", a), document.body.appendChild(g)
                };

            function p(e) {
                let {
                    strategy: t = "afterInteractive"
                } = e;
                "lazyOnload" === t ? window.addEventListener("load", () => {
                    (0, u.requestIdleCallback)(() => f(e))
                }) : f(e)
            }

            function g(e) {
                e.forEach(p),
                    function() {
                        let e = [...document.querySelectorAll('[data-nscript="beforeInteractive"]'), ...document.querySelectorAll('[data-nscript="beforePageRender"]')];
                        e.forEach(e => {
                            let t = e.id || e.getAttribute("src");
                            d.add(t)
                        })
                    }()
            }

            function m(e) {
                let {
                    id: t,
                    src: r = "",
                    onLoad: n = () => {},
                    onReady: i = null,
                    strategy: l = "afterInteractive",
                    onError: c,
                    ...h
                } = e, {
                    updateScripts: p,
                    scripts: g,
                    getIsSsr: m,
                    appDir: y,
                    nonce: b
                } = (0, o.useContext)(a.HeadManagerContext), w = (0, o.useRef)(!1);
                (0, o.useEffect)(() => {
                    let e = t || r;
                    w.current || (i && e && d.has(e) && i(), w.current = !0)
                }, [i, t, r]);
                let A = (0, o.useRef)(!1);
                if ((0, o.useEffect)(() => {
                        !A.current && ("afterInteractive" === l ? f(e) : "lazyOnload" === l && ("complete" === document.readyState ? (0, u.requestIdleCallback)(() => f(e)) : window.addEventListener("load", () => {
                            (0, u.requestIdleCallback)(() => f(e))
                        })), A.current = !0)
                    }, [e, l]), ("beforeInteractive" === l || "worker" === l) && (p ? (g[l] = (g[l] || []).concat([{
                        id: t,
                        src: r,
                        onLoad: n,
                        onReady: i,
                        onError: c,
                        ...h
                    }]), p(g)) : m && m() ? d.add(t || r) : m && !m() && f(e)), y) {
                    if ("beforeInteractive" === l) return r ? (s.default.preload(r, h.integrity ? {
                        as: "script",
                        integrity: h.integrity
                    } : {
                        as: "script"
                    }), o.default.createElement("script", {
                        nonce: b,
                        dangerouslySetInnerHTML: {
                            __html: "(self.__next_s=self.__next_s||[]).push(" + JSON.stringify([r]) + ")"
                        }
                    })) : (h.dangerouslySetInnerHTML && (h.children = h.dangerouslySetInnerHTML.__html, delete h.dangerouslySetInnerHTML), o.default.createElement("script", {
                        nonce: b,
                        dangerouslySetInnerHTML: {
                            __html: "(self.__next_s=self.__next_s||[]).push(" + JSON.stringify([0, { ...h
                            }]) + ")"
                        }
                    }));
                    "afterInteractive" === l && r && s.default.preload(r, h.integrity ? {
                        as: "script",
                        integrity: h.integrity
                    } : {
                        as: "script"
                    })
                }
                return null
            }
            Object.defineProperty(m, "__nextScript", {
                value: !0
            });
            let y = m;
            ("function" == typeof t.default || "object" == typeof t.default && null !== t.default) && void 0 === t.default.__esModule && (Object.defineProperty(t.default, "__esModule", {
                value: !0
            }), Object.assign(t.default, t), e.exports = t.default)
        },
        34379: function() {},
        97969: function() {},
        61429: function() {},
        51047: function() {},
        26576: function(e) {
            e.exports = {
                style: {
                    fontFamily: "'__Roboto_ba9cb9', '__Roboto_Fallback_ba9cb9'"
                },
                className: "__className_ba9cb9"
            }
        },
        96963: function(e, t, r) {
            "use strict";
            var n = r(27024),
                i = r(45589),
                s = r.n(i);

            function o() {
                return (o = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var r = arguments[t];
                        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n])
                    }
                    return e
                }).apply(this, arguments)
            }
            var a = (0, n.forwardRef)(function(e, t) {
                var r = e.color,
                    i = e.size,
                    s = void 0 === i ? 24 : i,
                    a = function(e, t) {
                        if (null == e) return {};
                        var r, n, i = function(e, t) {
                            if (null == e) return {};
                            var r, n, i = {},
                                s = Object.keys(e);
                            for (n = 0; n < s.length; n++) r = s[n], t.indexOf(r) >= 0 || (i[r] = e[r]);
                            return i
                        }(e, t);
                        if (Object.getOwnPropertySymbols) {
                            var s = Object.getOwnPropertySymbols(e);
                            for (n = 0; n < s.length; n++) r = s[n], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (i[r] = e[r])
                        }
                        return i
                    }(e, ["color", "size"]);
                return n.createElement("svg", o({
                    ref: t,
                    xmlns: "http://www.w3.org/2000/svg",
                    width: s,
                    height: s,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    stroke: void 0 === r ? "currentColor" : r,
                    strokeWidth: "2",
                    strokeLinecap: "round",
                    strokeLinejoin: "round"
                }, a), n.createElement("rect", {
                    x: "3",
                    y: "3",
                    width: "7",
                    height: "7"
                }), n.createElement("rect", {
                    x: "14",
                    y: "3",
                    width: "7",
                    height: "7"
                }), n.createElement("rect", {
                    x: "14",
                    y: "14",
                    width: "7",
                    height: "7"
                }), n.createElement("rect", {
                    x: "3",
                    y: "14",
                    width: "7",
                    height: "7"
                }))
            });
            a.propTypes = {
                color: s().string,
                size: s().oneOfType([s().string, s().number])
            }, a.displayName = "Grid", t.Z = a
        },
        39861: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return K
                }
            });
            var n, i, s, o, a, l, u = r(70422),
                c = r(27024),
                d = "right-scroll-bar-position",
                h = "width-before-scroll-bar",
                f = (void 0 === n && (n = {}), void 0 === i && (i = function(e) {
                    return e
                }), s = [], o = !1, (a = {
                    read: function() {
                        if (o) throw Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
                        return s.length ? s[s.length - 1] : null
                    },
                    useMedium: function(e) {
                        var t = i(e, o);
                        return s.push(t),
                            function() {
                                s = s.filter(function(e) {
                                    return e !== t
                                })
                            }
                    },
                    assignSyncMedium: function(e) {
                        for (o = !0; s.length;) {
                            var t = s;
                            s = [], t.forEach(e)
                        }
                        s = {
                            push: function(t) {
                                return e(t)
                            },
                            filter: function() {
                                return s
                            }
                        }
                    },
                    assignMedium: function(e) {
                        o = !0;
                        var t = [];
                        if (s.length) {
                            var r = s;
                            s = [], r.forEach(e), t = s
                        }
                        var n = function() {
                                var r = t;
                                t = [], r.forEach(e)
                            },
                            i = function() {
                                return Promise.resolve().then(n)
                            };
                        i(), s = {
                            push: function(e) {
                                t.push(e), i()
                            },
                            filter: function(e) {
                                return t = t.filter(e), s
                            }
                        }
                    }
                }).options = (0, u.pi)({
                    async: !0,
                    ssr: !1
                }, n), a),
                p = function() {},
                g = c.forwardRef(function(e, t) {
                    var r, n, i, s = c.useRef(null),
                        o = c.useState({
                            onScrollCapture: p,
                            onWheelCapture: p,
                            onTouchMoveCapture: p
                        }),
                        a = o[0],
                        l = o[1],
                        d = e.forwardProps,
                        h = e.children,
                        g = e.className,
                        m = e.removeScrollBar,
                        y = e.enabled,
                        b = e.shards,
                        w = e.sideCar,
                        A = e.noIsolation,
                        v = e.inert,
                        E = e.allowPinchZoom,
                        P = e.as,
                        S = void 0 === P ? "div" : P,
                        O = (0, u._T)(e, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]),
                        k = (r = [s, t], n = function(e) {
                            return r.forEach(function(t) {
                                return "function" == typeof t ? t(e) : t && (t.current = e), t
                            })
                        }, (i = (0, c.useState)(function() {
                            return {
                                value: null,
                                callback: n,
                                facade: {
                                    get current() {
                                        return i.value
                                    },
                                    set current(value) {
                                        var e = i.value;
                                        e !== value && (i.value = value, i.callback(value, e))
                                    }
                                }
                            }
                        })[0]).callback = n, i.facade),
                        C = (0, u.pi)((0, u.pi)({}, O), a);
                    return c.createElement(c.Fragment, null, y && c.createElement(w, {
                        sideCar: f,
                        removeScrollBar: m,
                        shards: b,
                        noIsolation: A,
                        inert: v,
                        setCallbacks: l,
                        allowPinchZoom: !!E,
                        lockRef: s
                    }), d ? c.cloneElement(c.Children.only(h), (0, u.pi)((0, u.pi)({}, C), {
                        ref: k
                    })) : c.createElement(S, (0, u.pi)({}, C, {
                        className: g,
                        ref: k
                    }), h))
                });
            g.defaultProps = {
                enabled: !0,
                removeScrollBar: !0,
                inert: !1
            }, g.classNames = {
                fullWidth: h,
                zeroRight: d
            };
            var m = function(e) {
                var t = e.sideCar,
                    r = (0, u._T)(e, ["sideCar"]);
                if (!t) throw Error("Sidecar: please provide `sideCar` property to import the right car");
                var n = t.read();
                if (!n) throw Error("Sidecar medium not found");
                return c.createElement(n, (0, u.pi)({}, r))
            };
            m.isSideCarExport = !0;
            var y = function() {
                    var e = 0,
                        t = null;
                    return {
                        add: function(n) {
                            if (0 == e && (t = function() {
                                    if (!document) return null;
                                    var e = document.createElement("style");
                                    e.type = "text/css";
                                    var t = l || r.nc;
                                    return t && e.setAttribute("nonce", t), e
                                }())) {
                                var i, s;
                                (i = t).styleSheet ? i.styleSheet.cssText = n : i.appendChild(document.createTextNode(n)), s = t, (document.head || document.getElementsByTagName("head")[0]).appendChild(s)
                            }
                            e++
                        },
                        remove: function() {
                            --e || !t || (t.parentNode && t.parentNode.removeChild(t), t = null)
                        }
                    }
                },
                b = function() {
                    var e = y();
                    return function(t, r) {
                        c.useEffect(function() {
                            return e.add(t),
                                function() {
                                    e.remove()
                                }
                        }, [t && r])
                    }
                },
                w = function() {
                    var e = b();
                    return function(t) {
                        return e(t.styles, t.dynamic), null
                    }
                },
                A = {
                    left: 0,
                    top: 0,
                    right: 0,
                    gap: 0
                },
                v = function(e) {
                    return parseInt(e || "", 10) || 0
                },
                E = function(e) {
                    var t = window.getComputedStyle(document.body),
                        r = t["padding" === e ? "paddingLeft" : "marginLeft"],
                        n = t["padding" === e ? "paddingTop" : "marginTop"],
                        i = t["padding" === e ? "paddingRight" : "marginRight"];
                    return [v(r), v(n), v(i)]
                },
                P = function(e) {
                    if (void 0 === e && (e = "margin"), "undefined" == typeof window) return A;
                    var t = E(e),
                        r = document.documentElement.clientWidth,
                        n = window.innerWidth;
                    return {
                        left: t[0],
                        top: t[1],
                        right: t[2],
                        gap: Math.max(0, n - r + t[2] - t[0])
                    }
                },
                S = w(),
                O = function(e, t, r, n) {
                    var i = e.left,
                        s = e.top,
                        o = e.right,
                        a = e.gap;
                    return void 0 === r && (r = "margin"), "\n  .".concat("with-scroll-bars-hidden", " {\n   overflow: hidden ").concat(n, ";\n   padding-right: ").concat(a, "px ").concat(n, ";\n  }\n  body {\n    overflow: hidden ").concat(n, ";\n    overscroll-behavior: contain;\n    ").concat([t && "position: relative ".concat(n, ";"), "margin" === r && "\n    padding-left: ".concat(i, "px;\n    padding-top: ").concat(s, "px;\n    padding-right: ").concat(o, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(a, "px ").concat(n, ";\n    "), "padding" === r && "padding-right: ".concat(a, "px ").concat(n, ";")].filter(Boolean).join(""), "\n  }\n  \n  .").concat(d, " {\n    right: ").concat(a, "px ").concat(n, ";\n  }\n  \n  .").concat(h, " {\n    margin-right: ").concat(a, "px ").concat(n, ";\n  }\n  \n  .").concat(d, " .").concat(d, " {\n    right: 0 ").concat(n, ";\n  }\n  \n  .").concat(h, " .").concat(h, " {\n    margin-right: 0 ").concat(n, ";\n  }\n  \n  body {\n    ").concat("--removed-body-scroll-bar-size", ": ").concat(a, "px;\n  }\n")
                },
                k = function(e) {
                    var t = e.noRelative,
                        r = e.noImportant,
                        n = e.gapMode,
                        i = void 0 === n ? "margin" : n,
                        s = c.useMemo(function() {
                            return P(i)
                        }, [i]);
                    return c.createElement(S, {
                        styles: O(s, !t, i, r ? "" : "!important")
                    })
                },
                C = !1;
            if ("undefined" != typeof window) try {
                var x = Object.defineProperty({}, "passive", {
                    get: function() {
                        return C = !0, !0
                    }
                });
                window.addEventListener("test", x, x), window.removeEventListener("test", x, x)
            } catch (e) {
                C = !1
            }
            var T = !!C && {
                    passive: !1
                },
                N = function(e) {
                    var t = window.getComputedStyle(e);
                    return "hidden" !== t.overflowY && !(t.overflowY === t.overflowX && "visible" === t.overflowY)
                },
                _ = function(e) {
                    var t = window.getComputedStyle(e);
                    return "hidden" !== t.overflowX && !(t.overflowY === t.overflowX && "visible" === t.overflowX)
                },
                B = function(e, t) {
                    var r = t;
                    do {
                        if ("undefined" != typeof ShadowRoot && r instanceof ShadowRoot && (r = r.host), D(e, r)) {
                            var n = I(e, r);
                            if (n[1] > n[2]) return !0
                        }
                        r = r.parentNode
                    } while (r && r !== document.body);
                    return !1
                },
                D = function(e, t) {
                    return "v" === e ? N(t) : _(t)
                },
                I = function(e, t) {
                    return "v" === e ? [t.scrollTop, t.scrollHeight, t.clientHeight] : [t.scrollLeft, t.scrollWidth, t.clientWidth]
                },
                R = function(e, t, r, n, i) {
                    var s, o = (s = window.getComputedStyle(t).direction, "h" === e && "rtl" === s ? -1 : 1),
                        a = o * n,
                        l = r.target,
                        u = t.contains(l),
                        c = !1,
                        d = a > 0,
                        h = 0,
                        f = 0;
                    do {
                        var p = I(e, l),
                            g = p[0],
                            m = p[1] - p[2] - o * g;
                        (g || m) && D(e, l) && (h += m, f += g), l = l.parentNode
                    } while (!u && l !== document.body || u && (t.contains(l) || t === l));
                    return d && (i && 0 === h || !i && a > h) ? c = !0 : !d && (i && 0 === f || !i && -a > f) && (c = !0), c
                },
                M = function(e) {
                    return "changedTouches" in e ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY] : [0, 0]
                },
                L = function(e) {
                    return [e.deltaX, e.deltaY]
                },
                U = function(e) {
                    return e && "current" in e ? e.current : e
                },
                j = 0,
                F = [],
                H = (f.useMedium(function(e) {
                    var t = c.useRef([]),
                        r = c.useRef([0, 0]),
                        n = c.useRef(),
                        i = c.useState(j++)[0],
                        s = c.useState(function() {
                            return w()
                        })[0],
                        o = c.useRef(e);
                    c.useEffect(function() {
                        o.current = e
                    }, [e]), c.useEffect(function() {
                        if (e.inert) {
                            document.body.classList.add("block-interactivity-".concat(i));
                            var t = (0, u.ev)([e.lockRef.current], (e.shards || []).map(U), !0).filter(Boolean);
                            return t.forEach(function(e) {
                                    return e.classList.add("allow-interactivity-".concat(i))
                                }),
                                function() {
                                    document.body.classList.remove("block-interactivity-".concat(i)), t.forEach(function(e) {
                                        return e.classList.remove("allow-interactivity-".concat(i))
                                    })
                                }
                        }
                    }, [e.inert, e.lockRef.current, e.shards]);
                    var a = c.useCallback(function(e, t) {
                            if ("touches" in e && 2 === e.touches.length) return !o.current.allowPinchZoom;
                            var i, s = M(e),
                                a = r.current,
                                l = "deltaX" in e ? e.deltaX : a[0] - s[0],
                                u = "deltaY" in e ? e.deltaY : a[1] - s[1],
                                c = e.target,
                                d = Math.abs(l) > Math.abs(u) ? "h" : "v";
                            if ("touches" in e && "h" === d && "range" === c.type) return !1;
                            var h = B(d, c);
                            if (!h) return !0;
                            if (h ? i = d : (i = "v" === d ? "h" : "v", h = B(d, c)), !h) return !1;
                            if (!n.current && "changedTouches" in e && (l || u) && (n.current = i), !i) return !0;
                            var f = n.current || i;
                            return R(f, t, e, "h" === f ? l : u, !0)
                        }, []),
                        l = c.useCallback(function(e) {
                            if (F.length && F[F.length - 1] === s) {
                                var r = "deltaY" in e ? L(e) : M(e),
                                    n = t.current.filter(function(t) {
                                        var n;
                                        return t.name === e.type && t.target === e.target && (n = t.delta)[0] === r[0] && n[1] === r[1]
                                    })[0];
                                if (n && n.should) {
                                    e.preventDefault();
                                    return
                                }
                                if (!n) {
                                    var i = (o.current.shards || []).map(U).filter(Boolean).filter(function(t) {
                                        return t.contains(e.target)
                                    });
                                    (i.length > 0 ? a(e, i[0]) : !o.current.noIsolation) && e.preventDefault()
                                }
                            }
                        }, []),
                        d = c.useCallback(function(e, r, n, i) {
                            var s = {
                                name: e,
                                delta: r,
                                target: n,
                                should: i
                            };
                            t.current.push(s), setTimeout(function() {
                                t.current = t.current.filter(function(e) {
                                    return e !== s
                                })
                            }, 1)
                        }, []),
                        h = c.useCallback(function(e) {
                            r.current = M(e), n.current = void 0
                        }, []),
                        f = c.useCallback(function(t) {
                            d(t.type, L(t), t.target, a(t, e.lockRef.current))
                        }, []),
                        p = c.useCallback(function(t) {
                            d(t.type, M(t), t.target, a(t, e.lockRef.current))
                        }, []);
                    c.useEffect(function() {
                        return F.push(s), e.setCallbacks({
                                onScrollCapture: f,
                                onWheelCapture: f,
                                onTouchMoveCapture: p
                            }), document.addEventListener("wheel", l, T), document.addEventListener("touchmove", l, T), document.addEventListener("touchstart", h, T),
                            function() {
                                F = F.filter(function(e) {
                                    return e !== s
                                }), document.removeEventListener("wheel", l, T), document.removeEventListener("touchmove", l, T), document.removeEventListener("touchstart", h, T)
                            }
                    }, []);
                    var g = e.removeScrollBar,
                        m = e.inert;
                    return c.createElement(c.Fragment, null, m ? c.createElement(s, {
                        styles: "\n  .block-interactivity-".concat(i, " {pointer-events: none;}\n  .allow-interactivity-").concat(i, " {pointer-events: all;}\n")
                    }) : null, g ? c.createElement(k, {
                        gapMode: "margin"
                    }) : null)
                }), m),
                $ = c.forwardRef(function(e, t) {
                    return c.createElement(g, (0, u.pi)({}, e, {
                        ref: t,
                        sideCar: H
                    }))
                });
            $.classNames = g.classNames;
            var K = $
        },
        70518: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                s = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                o = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, s) {
                        function o(e) {
                            try {
                                l(n.next(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function a(e) {
                            try {
                                l(n.throw(e))
                            } catch (e) {
                                s(e)
                            }
                        }

                        function l(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(o, a)
                        }
                        l((n = n.apply(e, t || [])).next())
                    })
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SiweMessage = void 0;
            let a = r(41316),
                l = s(r(69904)),
                u = r(13530),
                c = r(99002),
                d = r(91785);
            t.SiweMessage = class {
                constructor(e) {
                    if ("string" == typeof e) {
                        let t = new a.ParsedMessage(e);
                        this.domain = t.domain, this.address = t.address, this.statement = t.statement, this.uri = t.uri, this.version = t.version, this.nonce = t.nonce, this.issuedAt = t.issuedAt, this.expirationTime = t.expirationTime, this.notBefore = t.notBefore, this.requestId = t.requestId, this.chainId = t.chainId, this.resources = t.resources
                    } else Object.assign(this, e), "string" == typeof this.chainId && (this.chainId = (0, a.parseIntegerNumber)(this.chainId));
                    this.nonce = this.nonce || (0, d.generateNonce)(), this.validateMessage()
                }
                toMessage() {
                    this.validateMessage();
                    let e = `${this.domain} wants you to sign in with your Ethereum account:`,
                        t = `URI: ${this.uri}`,
                        r = [e, this.address].join("\n"),
                        n = `Version: ${this.version}`;
                    this.nonce || (this.nonce = (0, d.generateNonce)());
                    let i = "Chain ID: " + this.chainId,
                        s = `Nonce: ${this.nonce}`,
                        o = [t, n, i, s];
                    if (this.issuedAt = this.issuedAt || new Date().toISOString(), o.push(`Issued At: ${this.issuedAt}`), this.expirationTime) {
                        let e = `Expiration Time: ${this.expirationTime}`;
                        o.push(e)
                    }
                    this.notBefore && o.push(`Not Before: ${this.notBefore}`), this.requestId && o.push(`Request ID: ${this.requestId}`), this.resources && o.push(["Resources:", ...this.resources.map(e => `- ${e}`)].join("\n"));
                    let a = o.join("\n");
                    return r = [r, this.statement].join("\n\n"), this.statement && (r += "\n"), [r, a].join("\n")
                }
                prepareMessage() {
                    let e;
                    return this.version, this.toMessage()
                }
                validate(e, t) {
                    return o(this, void 0, void 0, function*() {
                        return console.warn("validate() has been deprecated, please update your code to use verify(). validate() may be removed in future versions."), this.verify({
                            signature: e
                        }, {
                            provider: t,
                            suppressExceptions: !1
                        }).then(({
                            data: e
                        }) => e).catch(({
                            error: e
                        }) => {
                            throw e
                        })
                    })
                }
                verify(e, t = {
                    suppressExceptions: !1
                }) {
                    return o(this, void 0, void 0, function*() {
                        return new Promise((r, n) => {
                            var i, s, o;
                            let a, l;
                            let h = e => t.suppressExceptions ? r(e) : n(e),
                                f = (0, d.checkInvalidKeys)(e, c.VerifyParamsKeys);
                            f.length > 0 && h({
                                success: !1,
                                data: this,
                                error: Error(`${f.join(", ")} is/are not valid key(s) for VerifyParams.`)
                            });
                            let p = (0, d.checkInvalidKeys)(t, c.VerifyOptsKeys);
                            f.length > 0 && h({
                                success: !1,
                                data: this,
                                error: Error(`${p.join(", ")} is/are not valid key(s) for VerifyOpts.`)
                            });
                            let {
                                signature: g,
                                domain: m,
                                nonce: y,
                                time: b
                            } = e;
                            m && m !== this.domain && h({
                                success: !1,
                                data: this,
                                error: new c.SiweError(c.SiweErrorType.DOMAIN_MISMATCH, m, this.domain)
                            }), y && y !== this.nonce && h({
                                success: !1,
                                data: this,
                                error: new c.SiweError(c.SiweErrorType.NONCE_MISMATCH, y, this.nonce)
                            });
                            let w = new Date(b || new Date);
                            if (this.expirationTime) {
                                let e = new Date(this.expirationTime);
                                w.getTime() >= e.getTime() && h({
                                    success: !1,
                                    data: this,
                                    error: new c.SiweError(c.SiweErrorType.EXPIRED_MESSAGE, `${w.toISOString()} < ${e.toISOString()}`, `${w.toISOString()} >= ${e.toISOString()}`)
                                })
                            }
                            if (this.notBefore) {
                                let e = new Date(this.notBefore);
                                w.getTime() < e.getTime() && h({
                                    success: !1,
                                    data: this,
                                    error: new c.SiweError(c.SiweErrorType.NOT_YET_VALID_MESSAGE, `${w.toISOString()} >= ${e.toISOString()}`, `${w.toISOString()} < ${e.toISOString()}`)
                                })
                            }
                            try {
                                a = this.prepareMessage()
                            } catch (e) {
                                h({
                                    success: !1,
                                    data: this,
                                    error: e
                                })
                            }
                            try {
                                l = (0, u.verifyMessage)(a, g)
                            } catch (e) {
                                console.error(e)
                            }
                            if (l === this.address) return r({
                                success: !0,
                                data: this
                            }); {
                                let n = (0, d.checkContractWalletSignature)(this, g, t.provider).then(e => e ? {
                                    success: !0,
                                    data: this
                                } : {
                                    success: !1,
                                    data: this,
                                    error: new c.SiweError(c.SiweErrorType.INVALID_SIGNATURE, l, `Resolved address to be ${this.address}`)
                                }).catch(e => ({
                                    success: !1,
                                    data: this,
                                    error: e
                                }));
                                Promise.all([n, null === (o = null === (s = null === (i = null == t ? void 0 : t.verificationFallback) || void 0 === i ? void 0 : i.call(t, e, t, this, n)) || void 0 === s ? void 0 : s.then(e => e)) || void 0 === o ? void 0 : o.catch(e => e)]).then(([e, t]) => {
                                    if (t) {
                                        if (t.success) return r(t);
                                        h(t)
                                    } else {
                                        if (e.success) return r(e);
                                        h(e)
                                    }
                                })
                            }
                        })
                    })
                }
                validateMessage(...e) {
                    var t;
                    if (e.length > 0) throw new c.SiweError(c.SiweErrorType.UNABLE_TO_PARSE, "Unexpected argument in the validateMessage function.");
                    if (!this.domain || 0 === this.domain.length || !/[^#?]*/.test(this.domain)) throw new c.SiweError(c.SiweErrorType.INVALID_DOMAIN, `${this.domain} to be a valid domain.`);
                    if (!(0, a.isEIP55Address)(this.address)) throw new c.SiweError(c.SiweErrorType.INVALID_ADDRESS, (0, u.getAddress)(this.address), this.address);
                    if (!l.isUri(this.uri)) throw new c.SiweError(c.SiweErrorType.INVALID_URI, `${this.uri} to be a valid uri.`);
                    if ("1" !== this.version) throw new c.SiweError(c.SiweErrorType.INVALID_MESSAGE_VERSION, "1", this.version);
                    let r = null === (t = this === null || void 0 === this ? void 0 : this.nonce) || void 0 === t ? void 0 : t.match(/[a-zA-Z0-9]{8,}/);
                    if (!r || this.nonce.length < 8 || r[0] !== this.nonce) throw new c.SiweError(c.SiweErrorType.INVALID_NONCE, `Length > 8 (${r.length}). Alphanumeric.`, this.nonce);
                    if (this.issuedAt && !(0, d.isValidISO8601Date)(this.issuedAt) || this.expirationTime && !(0, d.isValidISO8601Date)(this.expirationTime) || this.notBefore && !(0, d.isValidISO8601Date)(this.notBefore)) throw Error(c.SiweErrorType.INVALID_TIME_FORMAT)
                }
            }
        },
        13530: function(e, t, r) {
            "use strict";
            var n, i, s;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddress = t.hashMessage = t.verifyMessage = void 0;
            let o = r(55232);
            t.verifyMessage = null !== (n = null === o.utils || void 0 === o.utils ? void 0 : o.utils.verifyMessage) && void 0 !== n ? n : o.verifyMessage, t.hashMessage = null !== (i = null === o.utils || void 0 === o.utils ? void 0 : o.utils.hashMessage) && void 0 !== i ? i : o.hashMessage, t.getAddress = null !== (s = null === o.utils || void 0 === o.utils ? void 0 : o.utils.getAddress) && void 0 !== s ? s : o.getAddress
        },
        63307: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), i(r(70518), t), i(r(99002), t), i(r(91785), t)
        },
        99002: function(e, t) {
            "use strict";
            var r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SiweErrorType = t.SiweError = t.VerifyOptsKeys = t.VerifyParamsKeys = void 0, t.VerifyParamsKeys = ["signature", "domain", "nonce", "time"], t.VerifyOptsKeys = ["provider", "suppressExceptions", "verificationFallback"], t.SiweError = class {
                constructor(e, t, r) {
                    this.type = e, this.expected = t, this.received = r
                }
            }, (r = t.SiweErrorType || (t.SiweErrorType = {})).EXPIRED_MESSAGE = "Expired message.", r.INVALID_DOMAIN = "Invalid domain.", r.DOMAIN_MISMATCH = "Domain does not match provided domain for verification.", r.NONCE_MISMATCH = "Nonce does not match provided nonce for verification.", r.INVALID_ADDRESS = "Invalid address.", r.INVALID_URI = "URI does not conform to RFC 3986.", r.INVALID_NONCE = "Nonce size smaller then 8 characters or is not alphanumeric.", r.NOT_YET_VALID_MESSAGE = "Message is not valid yet.", r.INVALID_SIGNATURE = "Signature does not match address of the message.", r.INVALID_TIME_FORMAT = "Invalid time format.", r.INVALID_MESSAGE_VERSION = "Invalid message version.", r.UNABLE_TO_PARSE = "Unable to parse the message."
        },
        91785: function(e, t, r) {
            "use strict";
            var n = this && this.__awaiter || function(e, t, r, n) {
                return new(r || (r = Promise))(function(i, s) {
                    function o(e) {
                        try {
                            l(n.next(e))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function a(e) {
                        try {
                            l(n.throw(e))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function l(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(o, a)
                    }
                    l((n = n.apply(e, t || [])).next())
                })
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.checkInvalidKeys = t.isValidISO8601Date = t.generateNonce = t.checkContractWalletSignature = void 0;
            let i = r(18608),
                s = r(55232),
                o = r(13530),
                a = ["function isValidSignature(bytes32 _message, bytes _signature) public view returns (bytes4)"],
                l = /^(?<date>[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(.[0-9]+)?(([Zz])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/;
            t.checkContractWalletSignature = (e, t, r) => n(void 0, void 0, void 0, function*() {
                if (!r) return !1;
                let n = new s.Contract(e.address, a, r),
                    i = (0, o.hashMessage)(e.prepareMessage()),
                    l = yield n.isValidSignature(i, t);
                return "0x1626ba7e" == l
            }), t.generateNonce = () => {
                let e = (0, i.randomStringForEntropy)(96);
                if (!e || e.length < 8) throw Error("Error during nonce creation.");
                return e
            }, t.isValidISO8601Date = e => {
                let t = l.exec(e);
                if (!e) return !1;
                let r = new Date(t.groups.date).toISOString(),
                    n = l.exec(r);
                return t.groups.date === n.groups.date
            }, t.checkInvalidKeys = (e, t) => {
                let r = [];
                return Object.keys(e).forEach(e => {
                    t.includes(e) || r.push(e)
                }), r
            }
        },
        14642: function(e) {
            "use strict";
            e.exports = (e, t) => {
                if (!("string" == typeof e && "string" == typeof t)) throw TypeError("Expected the arguments to be of type `string`");
                if ("" === t) return [e];
                let r = e.indexOf(t);
                return -1 === r ? [e] : [e.slice(0, r), e.slice(r + t.length)]
            }
        },
        35270: function(e) {
            "use strict";
            e.exports = e => encodeURIComponent(e).replace(/[!'()*]/g, e => `%${e.charCodeAt(0).toString(16).toUpperCase()}`)
        },
        69904: function(e, t, r) {
            ! function(e) {
                "use strict";
                e.exports.is_uri = r, e.exports.is_http_uri = n, e.exports.is_https_uri = i, e.exports.is_web_uri = s, e.exports.isUri = r, e.exports.isHttpUri = n, e.exports.isHttpsUri = i, e.exports.isWebUri = s;
                var t = function(e) {
                    return e.match(/(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/)
                };

                function r(e) {
                    if (!(!e || /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(e) || /%[^0-9a-f]/i.test(e) || /%[0-9a-f](:?[^0-9a-f]|$)/i.test(e))) {
                        var r = [],
                            n = "",
                            i = "",
                            s = "",
                            o = "",
                            a = "",
                            l = "";
                        if (n = (r = t(e))[1], i = r[2], s = r[3], o = r[4], a = r[5], n && n.length && s.length >= 0) {
                            if (i && i.length) {
                                if (!(0 === s.length || /^\//.test(s))) return
                            } else if (/^\/\//.test(s)) return;
                            if (/^[a-z][a-z0-9\+\-\.]*$/.test(n.toLowerCase())) return l += n + ":", i && i.length && (l += "//" + i), l += s, o && o.length && (l += "?" + o), a && a.length && (l += "#" + a), l
                        }
                    }
                }

                function n(e, n) {
                    if (r(e)) {
                        var i = [],
                            s = "",
                            o = "",
                            a = "",
                            l = "",
                            u = "",
                            c = "",
                            d = "";
                        if (s = (i = t(e))[1], o = i[2], a = i[3], u = i[4], c = i[5], s) {
                            if (n) {
                                if ("https" != s.toLowerCase()) return
                            } else if ("http" != s.toLowerCase()) return;
                            if (!o) return;
                            return /:(\d+)$/.test(o) && (l = o.match(/:(\d+)$/)[0], o = o.replace(/:\d+$/, "")), d += s + "://" + o, l && (d += l), d += a, u && u.length && (d += "?" + u), c && c.length && (d += "#" + c), d
                        }
                    }
                }

                function i(e) {
                    return n(e, !0)
                }

                function s(e) {
                    return n(e) || i(e)
                }
            }(e = r.nmd(e))
        },
        93958: function(e, t) {
            "use strict";

            function r(e) {
                var t;
                let r;
                return t = function(e) {
                    let t = 0;

                    function r() {
                        return e[t++] << 8 | e[t++]
                    }
                    let n = r(),
                        i = 1,
                        s = [0, 1];
                    for (let e = 1; e < n; e++) s.push(i += r());
                    let o = r(),
                        a = t;
                    t += o;
                    let l = 0,
                        u = 0;

                    function c() {
                        return 0 == l && (u = u << 8 | e[t++], l = 8), u >> --l & 1
                    }
                    let d = 2147483648 - 1,
                        h = 0;
                    for (let e = 0; e < 31; e++) h = h << 1 | c();
                    let f = [],
                        p = 0,
                        g = 2147483648;
                    for (;;) {
                        let e = Math.floor(((h - p + 1) * i - 1) / g),
                            t = 0,
                            r = n;
                        for (; r - t > 1;) {
                            let n = t + r >>> 1;
                            e < s[n] ? r = n : t = n
                        }
                        if (0 == t) break;
                        f.push(t);
                        let o = p + Math.floor(g * s[t] / i),
                            a = p + Math.floor(g * s[t + 1] / i) - 1;
                        for (;
                            ((o ^ a) & 1073741824) == 0;) h = h << 1 & d | c(), o = o << 1 & d, a = a << 1 & d | 1;
                        for (; o & ~a & 536870912;) h = 1073741824 & h | h << 1 & d >>> 1 | c(), o = o << 1 ^ 1073741824, a = (1073741824 ^ a) << 1 | 1073741825;
                        p = o, g = 1 + a - o
                    }
                    let m = n - 4;
                    return f.map(t => {
                        switch (t - m) {
                            case 3:
                                return m + 65792 + (e[a++] << 16 | e[a++] << 8 | e[a++]);
                            case 2:
                                return m + 256 + (e[a++] << 8 | e[a++]);
                            case 1:
                                return m + e[a++];
                            default:
                                return t - 1
                        }
                    })
                }(function(e) {
                    let t = [];
                    [..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach((e, r) => t[e.charCodeAt(0)] = r);
                    let r = e.length,
                        n = new Uint8Array(6 * r >> 3);
                    for (let i = 0, s = 0, o = 0, a = 0; i < r; i++) a = a << 6 | t[e.charCodeAt(i)], (o += 6) >= 8 && (n[s++] = a >> (o -= 8));
                    return n
                }(e)), r = 0, () => t[r++]
            }

            function n(e, t = 0) {
                let r = [];
                for (;;) {
                    let n = e(),
                        i = e();
                    if (!i) break;
                    t += n;
                    for (let e = 0; e < i; e++) r.push(t + e);
                    t += i + 1
                }
                return r
            }

            function i(e) {
                return o(() => {
                    let t = n(e);
                    if (t.length) return t
                })
            }

            function s(e) {
                let t = [];
                for (;;) {
                    let r = e();
                    if (0 == r) break;
                    t.push(function(e, t) {
                        let r = 1 + t(),
                            n = t(),
                            i = o(t);
                        return a(i.length, 1 + e, t).flatMap((e, t) => {
                            let [s, ...o] = e;
                            return Array(i[t]).fill().map((e, t) => {
                                let i = t * n;
                                return [s + t * r, o.map(e => e + i)]
                            })
                        })
                    }(r, e))
                }
                for (;;) {
                    let r = e() - 1;
                    if (r < 0) break;
                    t.push(a(1 + e(), 1 + r, e).map(e => [e[0], e.slice(1)]))
                }
                return t.flat()
            }

            function o(e) {
                let t = [];
                for (;;) {
                    let r = e(t.length);
                    if (!r) break;
                    t.push(r)
                }
                return t
            }

            function a(e, t, r) {
                let n = Array(e).fill().map(() => []);
                for (let i = 0; i < t; i++)(function(e, t) {
                    let r = Array(e);
                    for (let i = 0, s = 0; i < e; i++) {
                        var n;
                        r[i] = s += 1 & (n = t()) ? ~n >> 1 : n >> 1
                    }
                    return r
                })(e, r).forEach((e, t) => n[t].push(e));
                return n
            }
            var l = r("");
            let u = new Map([
                [8217, "apostrophe"],
                [8260, "fraction slash"],
                [12539, "middle dot"]
            ]);

            function c(e) {
                return `{${e.toString(16).toUpperCase().padStart(2,"0")}}`
            }

            function d(e) {
                let t = [];
                for (let r = 0, n = e.length; r < n;) {
                    let n = e.codePointAt(r);
                    r += n < 65536 ? 1 : 2, t.push(n)
                }
                return t
            }

            function h(e) {
                let t = e.length;
                if (t < 4096) return String.fromCodePoint(...e);
                let r = [];
                for (let n = 0; n < t;) r.push(String.fromCodePoint(...e.slice(n, n += 4096)));
                return r.join("")
            }

            function f(e, t) {
                let r = e.length,
                    n = r - t.length;
                for (let i = 0; 0 == n && i < r; i++) n = e[i] - t[i];
                return n
            }
            var p = r("AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g");

            function g(e) {
                return e >> 24 & 255
            }

            function m(e) {
                return 16777215 & e
            }
            let y = new Map(i(p).flatMap((e, t) => e.map(e => [e, t + 1 << 24]))),
                b = new Set(n(p)),
                w = new Map,
                A = new Map;
            for (let [e, t] of s(p)) {
                if (!b.has(e) && 2 == t.length) {
                    let [r, n] = t, i = A.get(r);
                    i || (i = new Map, A.set(r, i)), i.set(n, e)
                }
                w.set(e, t.reverse())
            }

            function v(e) {
                return e >= 44032 && e < 55204
            }

            function E(e) {
                let t = [],
                    r = [],
                    n = !1;

                function i(e) {
                    let r = y.get(e);
                    r && (n = !0, e |= r), t.push(e)
                }
                for (let n of e)
                    for (;;) {
                        if (n < 128) t.push(n);
                        else if (v(n)) {
                            let e = n - 44032,
                                t = e / 588 | 0,
                                r = e % 588 / 28 | 0,
                                s = e % 28;
                            i(4352 + t), i(4449 + r), s > 0 && i(4519 + s)
                        } else {
                            let e = w.get(n);
                            e ? r.push(...e) : i(n)
                        }
                        if (!r.length) break;
                        n = r.pop()
                    }
                if (n && t.length > 1) {
                    let e = g(t[0]);
                    for (let r = 1; r < t.length; r++) {
                        let n = g(t[r]);
                        if (0 == n || e <= n) {
                            e = n;
                            continue
                        }
                        let i = r - 1;
                        for (;;) {
                            let r = t[i + 1];
                            if (t[i + 1] = t[i], t[i] = r, !i || (e = g(t[--i])) <= n) break
                        }
                        e = g(t[r])
                    }
                }
                return t
            }

            function P(e) {
                return E(e).map(m)
            }

            function S(e) {
                return function(e) {
                    let t = [],
                        r = [],
                        n = -1,
                        i = 0;
                    for (let s of e) {
                        let e = g(s),
                            o = m(s);
                        if (-1 == n) 0 == e ? n = o : t.push(o);
                        else if (i > 0 && i >= e) 0 == e ? (t.push(n, ...r), r.length = 0, n = o) : r.push(o), i = e;
                        else {
                            let s = function(e, t) {
                                if (e >= 4352 && e < 4371 && t >= 4449 && t < 4470) return 44032 + (e - 4352) * 588 + (t - 4449) * 28;
                                if (v(e) && t > 4519 && t < 4547 && (e - 44032) % 28 == 0) return e + (t - 4519); {
                                    let r = A.get(e);
                                    return r && (r = r.get(t)) ? r : -1
                                }
                            }(n, o);
                            s >= 0 ? n = s : 0 == i && 0 == e ? (t.push(n), n = o) : (r.push(o), i = e)
                        }
                    }
                    return n >= 0 && t.push(n, ...r), t
                }(E(e))
            }

            function O() {
                return new Set(n(l))
            }
            let k = new Map(s(l)),
                C = O(),
                x = O(),
                T = new Set(n(l).map(function(e) {
                    return this[e]
                }, [...x])),
                N = O(),
                _ = O(),
                B = i(l);

            function D() {
                return new Set([n(l).map(e => B[e]), n(l)].flat(2))
            }
            let I = l(),
                R = o(e => {
                    let t = o(l).map(e => e + 96);
                    if (t.length) {
                        let r = e >= I;
                        t[0] -= 32, t = h(t), r && (t = `Restricted[${t}]`);
                        let n = D(),
                            i = [...n, ...D()].sort((e, t) => e - t);
                        return {
                            N: t,
                            P: n,
                            M: !l(),
                            R: r,
                            V: new Set(i)
                        }
                    }
                }),
                M = O(),
                L = new Map;
            for (let {
                    V: e,
                    M: t
                } of ([...M, ...O()].sort((e, t) => e - t).map((e, t, r) => {
                    let n = l(),
                        i = r[t] = n ? r[t - n] : {
                            V: [],
                            M: new Map
                        };
                    i.V.push(e), M.has(e) || L.set(e, i)
                }), new Set(L.values()))) {
                let r = [];
                for (let t of e) {
                    let e = R.filter(e => e.V.has(t)),
                        n = r.find(({
                            G: t
                        }) => e.some(e => t.has(e)));
                    n || (n = {
                        G: new Set,
                        V: []
                    }, r.push(n)), n.V.push(t), e.forEach(e => n.G.add(e))
                }
                let n = r.flatMap(({
                    G: e
                }) => [...e]);
                for (let {
                        G: e,
                        V: i
                    } of r) {
                    let r = new Set(n.filter(t => !e.has(t)));
                    for (let e of i) t.set(e, r)
                }
            }
            let U = new Set,
                j = new Set;
            for (let e of R)
                for (let t of e.V)(U.has(t) ? j : U).add(t);
            for (let e of U) L.has(e) || j.has(e) || L.set(e, 1);
            let F = new Set([...U, ...P(U)]),
                H = n(l),
                $ = function e(t) {
                    let r = o(() => {
                            let t = n(l).map(e => H[e]);
                            if (t.length) return e(t)
                        }).sort((e, t) => t.Q.size - e.Q.size),
                        i = l();
                    return {
                        B: r,
                        V: i % 3,
                        F: 1 & (i = i / 3 | 0),
                        S: 1 & (i >>= 1),
                        C: 2 & i,
                        Q: new Set(t)
                    }
                }([]);
            class K extends Array {
                get is_emoji() {
                    return !0
                }
            }

            function z(e, t = c) {
                let r = [];
                J(e[0]) && r.push("◌");
                let n = 0,
                    i = e.length;
                for (let s = 0; s < i; s++) {
                    let i = e[s];
                    q(i) && (r.push(h(e.slice(n, s))), r.push(t(i)), n = s + 1)
                }
                return r.push(h(e.slice(n, i))), r.join("")
            }

            function V(e) {
                return (q(e) ? "" : `${G(z([e]))} `) + c(e)
            }

            function G(e) {
                return `"${e}"\u200E`
            }

            function W(e) {
                for (let t = e.lastIndexOf(95); t > 0;)
                    if (95 !== e[--t]) throw Error("underscore allowed only at start")
            }

            function J(e) {
                return x.has(e)
            }

            function q(e) {
                return N.has(e)
            }

            function Q(e, t) {
                let r = 0;
                return e.split(".").map(e => {
                    let n, i = d(e),
                        s = {
                            input: i,
                            offset: r
                        };
                    r += i.length + 1;
                    try {
                        let e, r = s.tokens = et(i, S),
                            o = r.length;
                        if (o) {
                            let i = r[0],
                                a = o > 1 || i.is_emoji;
                            if (!a && i.every(e => e < 128)) n = i, W(n),
                                function(e) {
                                    if (e.length >= 4 && 45 == e[2] && 45 == e[3]) throw Error("invalid label extension")
                                }(n), e = "ASCII";
                            else if (a && (s.emoji = !0, i = r.flatMap(e => e.is_emoji ? [] : e)), n = r.flatMap(e => !t && e.is_emoji ? er(e) : e), W(n), i.length) {
                                if (x.has(n[0])) throw ee("leading combining mark");
                                for (let e = 1; e < o; e++) {
                                    let t = r[e];
                                    if (!t.is_emoji && x.has(t[0])) throw ee(`emoji + combining mark: "${h(r[e-1])} + ${z([t[0]])}"`)
                                }! function(e) {
                                    let t = e[0],
                                        r = u.get(t);
                                    if (r) throw ee(`leading ${r}`);
                                    let n = e.length,
                                        i = -1;
                                    for (let s = 1; s < n; s++) {
                                        t = e[s];
                                        let n = u.get(t);
                                        if (n) {
                                            if (i == s) throw ee(`${r} + ${n}`);
                                            i = s + 1, r = n
                                        }
                                    }
                                    if (i == n) throw ee(`trailing ${r}`)
                                }(n);
                                let t = [...new Set(i)],
                                    [s] = function(e) {
                                        let t = R;
                                        for (let r of e) {
                                            let e = t.filter(e => e.V.has(r));
                                            if (!e.length) {
                                                if (t === R) throw Z(r);
                                                throw X(t[0], r)
                                            }
                                            if (t = e, 1 == e.length) break
                                        }
                                        return t
                                    }(t);
                                (function(e, t) {
                                    let {
                                        V: r,
                                        M: n
                                    } = e;
                                    for (let n of t)
                                        if (!r.has(n)) throw X(e, n);
                                    if (n) {
                                        let e = P(t);
                                        for (let t = 1, r = e.length; t < r; t++)
                                            if (T.has(e[t])) {
                                                let n = t + 1;
                                                for (let i; n < r && T.has(i = e[n]); n++)
                                                    for (let r = t; r < n; r++)
                                                        if (e[r] == i) throw Error(`non-spacing marks: repeated ${V(i)}`);
                                                if (n - t > 4) throw Error(`non-spacing marks: too many ${G(z(e.slice(t-1,n)))} (${n-t}/4)`);
                                                t = n
                                            }
                                    }
                                })(s, i),
                                function(e, t) {
                                    let r;
                                    let n = [];
                                    for (let e of t) {
                                        let t = L.get(e);
                                        if (1 === t) return;
                                        if (t) {
                                            let n = t.M.get(e);
                                            if (!(r = r ? r.filter(e => n.has(e)) : [...n]).length) return
                                        } else n.push(e)
                                    }
                                    if (r) {
                                        for (let t of r)
                                            if (n.every(e => t.V.has(e))) throw Error(`whole-script confusable: ${e.N}/${t.N}`)
                                    }
                                }(s, t), e = s.N
                            } else e = "Emoji"
                        } else throw Error("empty label");
                        s.type = e
                    } catch (e) {
                        s.error = e
                    }
                    return s.output = n, s
                })
            }

            function Y(e) {
                return e.map(({
                    input: t,
                    error: r,
                    output: n
                }) => {
                    if (r) {
                        let n = r.message;
                        throw Error(1 == e.length ? n : `Invalid label ${G(z(t))}: ${n}`)
                    }
                    return h(n)
                }).join(".")
            }

            function Z(e) {
                return Error(`disallowed character: ${V(e)}`)
            }

            function X(e, t) {
                let r = V(t),
                    n = R.find(e => e.P.has(t));
                return n && (r = `${n.N} ${r}`), Error(`illegal mixture: ${e.N} + ${r}`)
            }

            function ee(e) {
                return Error(`illegal placement: ${e}`)
            }

            function et(e, t) {
                let r = [],
                    n = [];
                for (e = e.slice().reverse(); e.length;) {
                    let i = en(e);
                    if (i) n.length && (r.push(t(n)), n = []), r.push(i);
                    else {
                        let t = e.pop();
                        if (F.has(t)) n.push(t);
                        else {
                            let e = k.get(t);
                            if (e) n.push(...e);
                            else if (!C.has(t)) throw Z(t)
                        }
                    }
                }
                return n.length && r.push(t(n)), r
            }

            function er(e) {
                return e.filter(e => 65039 != e)
            }

            function en(e, t) {
                let r, n, i = $,
                    s = [],
                    o = e.length;
                for (t && (t.length = 0); o;) {
                    let a = e[--o];
                    if (!(i = i.B.find(e => e.Q.has(a)))) break;
                    if (i.S) n = a;
                    else if (i.C && a === n) break;
                    s.push(a), i.F && (s.push(65039), o > 0 && 65039 == e[o - 1] && o--), i.V && (r = ei(s, i), t && t.push(...e.slice(o).reverse()), e.length = o)
                }
                return r
            }

            function ei(e, t) {
                let r = K.from(e);
                return 2 == t.V && r.splice(1, 1), r
            }
            let es = "valid",
                eo = "mapped",
                ea = "ignored";

            function el(e) {
                return e == es || e == eo
            }

            function eu(e) {
                return e.some(e => _.has(e))
            }

            function ec(e) {
                for (let t = 0; t < e.length; t++)
                    if (e[t].type == es) {
                        let r = t + 1;
                        for (; r < e.length && e[r].type == es;) r++;
                        e.splice(t, r - t, {
                            type: es,
                            cps: e.slice(t, r).flatMap(e => e.cps)
                        })
                    }
                return e
            }
            t.ens_beautify = function(e) {
                let t = Q(e, !0);
                for (let {
                        type: e,
                        output: r,
                        error: n
                    } of t)
                    if (!n && "Greek" !== e) {
                        let e = 0;
                        for (;;) {
                            let t = r.indexOf(958, e);
                            if (t < 0) break;
                            r[t] = 926, e = t + 1
                        }
                    }
                return Y(t)
            }, t.ens_emoji = function() {
                let e = [];
                return function t(r, n, i) {
                    if (r.S) i = n[n.length - 1];
                    else if (r.C && i === n[n.length - 1]) return;
                    for (let s of (r.F && n.push(65039), r.V && e.push(ei(n, r)), r.B))
                        for (let e of s.Q) t(s, [...n, e], i)
                }($, []), e.sort(f)
            }, t.ens_normalize = function(e) {
                return Y(Q(e))
            }, t.ens_normalize_fragment = function(e, t) {
                let r = t ? P : S;
                return e.split(".").map(e => h(et(d(e), r).flatMap(e => e.is_emoji ? er(e) : e))).join(".")
            }, t.ens_split = Q, t.ens_tokenize = function e(t, {
                nf: r = !0
            } = {}) {
                let n = d(t).reverse(),
                    i = [],
                    s = [];
                for (; n.length;) {
                    let e = en(n, i);
                    if (e) s.push({
                        type: "emoji",
                        emoji: e,
                        input: i.slice(),
                        cps: er(e)
                    });
                    else {
                        let e = n.pop();
                        if (46 == e) s.push({
                            type: "stop",
                            cp: e
                        });
                        else if (F.has(e)) s.push({
                            type: es,
                            cps: [e]
                        });
                        else if (C.has(e)) s.push({
                            type: ea,
                            cp: e
                        });
                        else {
                            let t = k.get(e);
                            t ? s.push({
                                type: eo,
                                cp: e,
                                cps: t.slice()
                            }) : s.push({
                                type: "disallowed",
                                cp: e
                            })
                        }
                    }
                }
                if (r)
                    for (let t = 0, r = -1; t < s.length; t++) {
                        let n = s[t];
                        if (el(n.type)) {
                            if (eu(n.cps)) {
                                let n = t + 1;
                                for (let e = n; e < s.length; e++) {
                                    let {
                                        type: t,
                                        cps: r
                                    } = s[e];
                                    if (el(t)) {
                                        if (!eu(r)) break;
                                        n = e + 1
                                    } else if (t !== ea) break
                                }
                                r < 0 && (r = t);
                                let i = s.slice(r, n),
                                    o = i.flatMap(e => el(e.type) ? e.cps : []),
                                    a = S(o);
                                f(a, o) ? (s.splice(r, n - r, {
                                    type: "nfc",
                                    input: o,
                                    cps: a,
                                    tokens0: ec(i),
                                    tokens: e(h(a), {
                                        nf: !1
                                    })
                                }), t = r) : t = n - 1, r = -1
                            } else r = t
                        } else n.type !== ea && (r = -1)
                    }
                return ec(s)
            }, t.is_combining_mark = J, t.nfc = S, t.nfd = P, t.safe_str_from_cps = z, t.should_escape = q
        },
        85275: function(e, t) {
            "use strict"; /*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */
            var r, n, i, s = this && this.__classPrivateFieldGet || function(e, t, r, n) {
                    if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                    if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                    return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
                },
                o = this && this.__classPrivateFieldSet || function(e, t, r, n, i) {
                    if ("m" === n) throw TypeError("Private method is not writable");
                    if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                    if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                    return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AES = void 0;
            let a = {
                    16: 10,
                    24: 12,
                    32: 14
                },
                l = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
                u = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22],
                c = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125],
                d = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986],
                h = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766],
                f = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126],
                p = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436],
                g = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890],
                m = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935],
                y = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600],
                b = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480],
                w = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795],
                A = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855],
                v = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150],
                E = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];

            function P(e) {
                let t = [];
                for (let r = 0; r < e.length; r += 4) t.push(e[r] << 24 | e[r + 1] << 16 | e[r + 2] << 8 | e[r + 3]);
                return t
            }
            class S {
                get key() {
                    return s(this, r, "f").slice()
                }
                constructor(e) {
                    let t;
                    if (r.set(this, void 0), n.set(this, void 0), i.set(this, void 0), !(this instanceof S)) throw Error("AES must be instanitated with `new`");
                    o(this, r, new Uint8Array(e), "f");
                    let c = a[this.key.length];
                    if (null == c) throw TypeError("invalid key size (must be 16, 24 or 32 bytes)");
                    o(this, i, [], "f"), o(this, n, [], "f");
                    for (let e = 0; e <= c; e++) s(this, i, "f").push([0, 0, 0, 0]), s(this, n, "f").push([0, 0, 0, 0]);
                    let d = (c + 1) * 4,
                        h = this.key.length / 4,
                        f = P(this.key);
                    for (let e = 0; e < h; e++) t = e >> 2, s(this, i, "f")[t][e % 4] = f[e], s(this, n, "f")[c - t][e % 4] = f[e];
                    let p = 0,
                        g = h,
                        m;
                    for (; g < d;) {
                        if (m = f[h - 1], f[0] ^= u[m >> 16 & 255] << 24 ^ u[m >> 8 & 255] << 16 ^ u[255 & m] << 8 ^ u[m >> 24 & 255] ^ l[p] << 24, p += 1, 8 != h)
                            for (let e = 1; e < h; e++) f[e] ^= f[e - 1];
                        else {
                            for (let e = 1; e < h / 2; e++) f[e] ^= f[e - 1];
                            m = f[h / 2 - 1], f[h / 2] ^= u[255 & m] ^ u[m >> 8 & 255] << 8 ^ u[m >> 16 & 255] << 16 ^ u[m >> 24 & 255] << 24;
                            for (let e = h / 2 + 1; e < h; e++) f[e] ^= f[e - 1]
                        }
                        let e = 0,
                            t, r;
                        for (; e < h && g < d;) t = g >> 2, r = g % 4, s(this, i, "f")[t][r] = f[e], s(this, n, "f")[c - t][r] = f[e++], g++
                    }
                    for (let e = 1; e < c; e++)
                        for (let t = 0; t < 4; t++) m = s(this, n, "f")[e][t], s(this, n, "f")[e][t] = w[m >> 24 & 255] ^ A[m >> 16 & 255] ^ v[m >> 8 & 255] ^ E[255 & m]
                }
                encrypt(e) {
                    if (16 != e.length) throw TypeError("invalid plaintext size (must be 16 bytes)");
                    let t = s(this, i, "f").length - 1,
                        r = [0, 0, 0, 0],
                        n = P(e);
                    for (let e = 0; e < 4; e++) n[e] ^= s(this, i, "f")[0][e];
                    for (let e = 1; e < t; e++) {
                        for (let t = 0; t < 4; t++) r[t] = d[n[t] >> 24 & 255] ^ h[n[(t + 1) % 4] >> 16 & 255] ^ f[n[(t + 2) % 4] >> 8 & 255] ^ p[255 & n[(t + 3) % 4]] ^ s(this, i, "f")[e][t];
                        n = r.slice()
                    }
                    let o = new Uint8Array(16),
                        a = 0;
                    for (let e = 0; e < 4; e++) a = s(this, i, "f")[t][e], o[4 * e] = (u[n[e] >> 24 & 255] ^ a >> 24) & 255, o[4 * e + 1] = (u[n[(e + 1) % 4] >> 16 & 255] ^ a >> 16) & 255, o[4 * e + 2] = (u[n[(e + 2) % 4] >> 8 & 255] ^ a >> 8) & 255, o[4 * e + 3] = (u[255 & n[(e + 3) % 4]] ^ a) & 255;
                    return o
                }
                decrypt(e) {
                    if (16 != e.length) throw TypeError("invalid ciphertext size (must be 16 bytes)");
                    let t = s(this, n, "f").length - 1,
                        r = [0, 0, 0, 0],
                        i = P(e);
                    for (let e = 0; e < 4; e++) i[e] ^= s(this, n, "f")[0][e];
                    for (let e = 1; e < t; e++) {
                        for (let t = 0; t < 4; t++) r[t] = g[i[t] >> 24 & 255] ^ m[i[(t + 3) % 4] >> 16 & 255] ^ y[i[(t + 2) % 4] >> 8 & 255] ^ b[255 & i[(t + 1) % 4]] ^ s(this, n, "f")[e][t];
                        i = r.slice()
                    }
                    let o = new Uint8Array(16),
                        a = 0;
                    for (let e = 0; e < 4; e++) a = s(this, n, "f")[t][e], o[4 * e] = (c[i[e] >> 24 & 255] ^ a >> 24) & 255, o[4 * e + 1] = (c[i[(e + 3) % 4] >> 16 & 255] ^ a >> 16) & 255, o[4 * e + 2] = (c[i[(e + 2) % 4] >> 8 & 255] ^ a >> 8) & 255, o[4 * e + 3] = (c[255 & i[(e + 1) % 4]] ^ a) & 255;
                    return o
                }
            }
            t.AES = S, r = new WeakMap, n = new WeakMap, i = new WeakMap
        },
        90659: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.pkcs7Strip = t.pkcs7Pad = t.OFB = t.ECB = t.CTR = t.CFB = t.CBC = t.ModeOfOperation = t.AES = void 0;
            var n = r(85275);
            Object.defineProperty(t, "AES", {
                enumerable: !0,
                get: function() {
                    return n.AES
                }
            });
            var i = r(66416);
            Object.defineProperty(t, "ModeOfOperation", {
                enumerable: !0,
                get: function() {
                    return i.ModeOfOperation
                }
            });
            var s = r(20891);
            Object.defineProperty(t, "CBC", {
                enumerable: !0,
                get: function() {
                    return s.CBC
                }
            });
            var o = r(27528);
            Object.defineProperty(t, "CFB", {
                enumerable: !0,
                get: function() {
                    return o.CFB
                }
            });
            var a = r(87918);
            Object.defineProperty(t, "CTR", {
                enumerable: !0,
                get: function() {
                    return a.CTR
                }
            });
            var l = r(44581);
            Object.defineProperty(t, "ECB", {
                enumerable: !0,
                get: function() {
                    return l.ECB
                }
            });
            var u = r(67236);
            Object.defineProperty(t, "OFB", {
                enumerable: !0,
                get: function() {
                    return u.OFB
                }
            });
            var c = r(98734);
            Object.defineProperty(t, "pkcs7Pad", {
                enumerable: !0,
                get: function() {
                    return c.pkcs7Pad
                }
            }), Object.defineProperty(t, "pkcs7Strip", {
                enumerable: !0,
                get: function() {
                    return c.pkcs7Strip
                }
            })
        },
        20891: function(e, t, r) {
            "use strict";
            var n, i, s = this && this.__classPrivateFieldSet || function(e, t, r, n, i) {
                    if ("m" === n) throw TypeError("Private method is not writable");
                    if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                    if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                    return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
                },
                o = this && this.__classPrivateFieldGet || function(e, t, r, n) {
                    if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                    if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                    return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CBC = void 0;
            let a = r(66416);
            class l extends a.ModeOfOperation {
                constructor(e, t) {
                    if (super("ECC", e, l), n.set(this, void 0), i.set(this, void 0), t) {
                        if (t.length % 16) throw TypeError("invalid iv size (must be 16 bytes)");
                        s(this, n, new Uint8Array(t), "f")
                    } else s(this, n, new Uint8Array(16), "f");
                    s(this, i, this.iv, "f")
                }
                get iv() {
                    return new Uint8Array(o(this, n, "f"))
                }
                encrypt(e) {
                    if (e.length % 16) throw TypeError("invalid plaintext size (must be multiple of 16 bytes)");
                    let t = new Uint8Array(e.length);
                    for (let r = 0; r < e.length; r += 16) {
                        for (let t = 0; t < 16; t++) o(this, i, "f")[t] ^= e[r + t];
                        s(this, i, this.aes.encrypt(o(this, i, "f")), "f"), t.set(o(this, i, "f"), r)
                    }
                    return t
                }
                decrypt(e) {
                    if (e.length % 16) throw TypeError("invalid ciphertext size (must be multiple of 16 bytes)");
                    let t = new Uint8Array(e.length);
                    for (let r = 0; r < e.length; r += 16) {
                        let n = this.aes.decrypt(e.subarray(r, r + 16));
                        for (let s = 0; s < 16; s++) t[r + s] = n[s] ^ o(this, i, "f")[s], o(this, i, "f")[s] = e[r + s]
                    }
                    return t
                }
            }
            t.CBC = l, n = new WeakMap, i = new WeakMap
        },
        27528: function(e, t, r) {
            "use strict";
            var n, i, s, o, a = this && this.__classPrivateFieldSet || function(e, t, r, n, i) {
                    if ("m" === n) throw TypeError("Private method is not writable");
                    if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                    if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                    return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
                },
                l = this && this.__classPrivateFieldGet || function(e, t, r, n) {
                    if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                    if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                    return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CFB = void 0;
            let u = r(66416);
            class c extends u.ModeOfOperation {
                constructor(e, t, r = 8) {
                    if (super("CFB", e, c), n.add(this), i.set(this, void 0), s.set(this, void 0), !Number.isInteger(r) || r % 8) throw TypeError("invalid segmentSize");
                    if (Object.defineProperties(this, {
                            segmentSize: {
                                enumerable: !0,
                                value: r
                            }
                        }), t) {
                        if (t.length % 16) throw TypeError("invalid iv size (must be 16 bytes)");
                        a(this, i, new Uint8Array(t), "f")
                    } else a(this, i, new Uint8Array(16), "f");
                    a(this, s, this.iv, "f")
                }
                get iv() {
                    return new Uint8Array(l(this, i, "f"))
                }
                encrypt(e) {
                    if (8 * e.length % this.segmentSize) throw TypeError("invalid plaintext size (must be multiple of segmentSize bytes)");
                    let t = this.segmentSize / 8,
                        r = new Uint8Array(e);
                    for (let e = 0; e < r.length; e += t) {
                        let i = this.aes.encrypt(l(this, s, "f"));
                        for (let n = 0; n < t; n++) r[e + n] ^= i[n];
                        l(this, n, "m", o).call(this, r.subarray(e))
                    }
                    return r
                }
                decrypt(e) {
                    if (8 * e.length % this.segmentSize) throw TypeError("invalid ciphertext size (must be multiple of segmentSize bytes)");
                    let t = this.segmentSize / 8,
                        r = new Uint8Array(e);
                    for (let i = 0; i < r.length; i += t) {
                        let a = this.aes.encrypt(l(this, s, "f"));
                        for (let e = 0; e < t; e++) r[i + e] ^= a[e];
                        l(this, n, "m", o).call(this, e.subarray(i))
                    }
                    return r
                }
            }
            t.CFB = c, i = new WeakMap, s = new WeakMap, n = new WeakSet, o = function(e) {
                let t = this.segmentSize / 8;
                l(this, s, "f").set(l(this, s, "f").subarray(t)), l(this, s, "f").set(e.subarray(0, t), 16 - t)
            }
        },
        87918: function(e, t, r) {
            "use strict";
            var n, i, s, o = this && this.__classPrivateFieldSet || function(e, t, r, n, i) {
                    if ("m" === n) throw TypeError("Private method is not writable");
                    if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                    if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                    return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
                },
                a = this && this.__classPrivateFieldGet || function(e, t, r, n) {
                    if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                    if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                    return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CTR = void 0;
            let l = r(66416);
            class u extends l.ModeOfOperation {
                constructor(e, t) {
                    super("CTR", e, u), n.set(this, void 0), i.set(this, void 0), s.set(this, void 0), o(this, s, new Uint8Array(16), "f"), a(this, s, "f").fill(0), o(this, n, a(this, s, "f"), "f"), o(this, i, 16, "f"), null == t && (t = 1), "number" == typeof t ? this.setCounterValue(t) : this.setCounterBytes(t)
                }
                get counter() {
                    return new Uint8Array(a(this, s, "f"))
                }
                setCounterValue(e) {
                    if (!Number.isInteger(e) || e < 0 || e > Number.MAX_SAFE_INTEGER) throw TypeError("invalid counter initial integer value");
                    for (let t = 15; t >= 0; --t) a(this, s, "f")[t] = e % 256, e = Math.floor(e / 256)
                }
                setCounterBytes(e) {
                    if (16 !== e.length) throw TypeError("invalid counter initial Uint8Array value length");
                    a(this, s, "f").set(e)
                }
                increment() {
                    for (let e = 15; e >= 0; e--)
                        if (255 === a(this, s, "f")[e]) a(this, s, "f")[e] = 0;
                        else {
                            a(this, s, "f")[e]++;
                            break
                        }
                }
                encrypt(e) {
                    var t, r;
                    let l = new Uint8Array(e);
                    for (let e = 0; e < l.length; e++) 16 === a(this, i, "f") && (o(this, n, this.aes.encrypt(a(this, s, "f")), "f"), o(this, i, 0, "f"), this.increment()), l[e] ^= a(this, n, "f")[o(this, i, (r = a(this, i, "f"), t = r++, r), "f"), t];
                    return l
                }
                decrypt(e) {
                    return this.encrypt(e)
                }
            }
            t.CTR = u, n = new WeakMap, i = new WeakMap, s = new WeakMap
        },
        44581: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ECB = void 0;
            let n = r(66416);
            class i extends n.ModeOfOperation {
                constructor(e) {
                    super("ECB", e, i)
                }
                encrypt(e) {
                    if (e.length % 16) throw TypeError("invalid plaintext size (must be multiple of 16 bytes)");
                    let t = new Uint8Array(e.length);
                    for (let r = 0; r < e.length; r += 16) t.set(this.aes.encrypt(e.subarray(r, r + 16)), r);
                    return t
                }
                decrypt(e) {
                    if (e.length % 16) throw TypeError("invalid ciphertext size (must be multiple of 16 bytes)");
                    let t = new Uint8Array(e.length);
                    for (let r = 0; r < e.length; r += 16) t.set(this.aes.decrypt(e.subarray(r, r + 16)), r);
                    return t
                }
            }
            t.ECB = i
        },
        67236: function(e, t, r) {
            "use strict";
            var n, i, s, o = this && this.__classPrivateFieldSet || function(e, t, r, n, i) {
                    if ("m" === n) throw TypeError("Private method is not writable");
                    if ("a" === n && !i) throw TypeError("Private accessor was defined without a setter");
                    if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it");
                    return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r
                },
                a = this && this.__classPrivateFieldGet || function(e, t, r, n) {
                    if ("a" === r && !n) throw TypeError("Private accessor was defined without a getter");
                    if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it");
                    return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OFB = void 0;
            let l = r(66416);
            class u extends l.ModeOfOperation {
                constructor(e, t) {
                    if (super("OFB", e, u), n.set(this, void 0), i.set(this, void 0), s.set(this, void 0), t) {
                        if (t.length % 16) throw TypeError("invalid iv size (must be 16 bytes)");
                        o(this, n, new Uint8Array(t), "f")
                    } else o(this, n, new Uint8Array(16), "f");
                    o(this, i, this.iv, "f"), o(this, s, 16, "f")
                }
                get iv() {
                    return new Uint8Array(a(this, n, "f"))
                }
                encrypt(e) {
                    var t, r;
                    if (e.length % 16) throw TypeError("invalid plaintext size (must be multiple of 16 bytes)");
                    let n = new Uint8Array(e);
                    for (let e = 0; e < n.length; e++) 16 === a(this, s, "f") && (o(this, i, this.aes.encrypt(a(this, i, "f")), "f"), o(this, s, 0, "f")), n[e] ^= a(this, i, "f")[o(this, s, (r = a(this, s, "f"), t = r++, r), "f"), t];
                    return n
                }
                decrypt(e) {
                    if (e.length % 16) throw TypeError("invalid ciphertext size (must be multiple of 16 bytes)");
                    return this.encrypt(e)
                }
            }
            t.OFB = u, n = new WeakMap, i = new WeakMap, s = new WeakMap
        },
        66416: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ModeOfOperation = void 0;
            let n = r(85275);
            t.ModeOfOperation = class {
                constructor(e, t, r) {
                    if (r && !(this instanceof r)) throw Error(`${e} must be instantiated with "new"`);
                    Object.defineProperties(this, {
                        aes: {
                            enumerable: !0,
                            value: new n.AES(t)
                        },
                        name: {
                            enumerable: !0,
                            value: e
                        }
                    })
                }
            }
        },
        98734: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.pkcs7Strip = t.pkcs7Pad = void 0, t.pkcs7Pad = function(e) {
                let t = 16 - e.length % 16,
                    r = new Uint8Array(e.length + t);
                r.set(e);
                for (let n = e.length; n < r.length; n++) r[n] = t;
                return r
            }, t.pkcs7Strip = function(e) {
                if (e.length < 16) throw TypeError("PKCS#7 invalid length");
                let t = e[e.length - 1];
                if (t > 16) throw TypeError("PKCS#7 padding byte out of range");
                let r = e.length - t;
                for (let n = 0; n < t; n++)
                    if (e[r + n] !== t) throw TypeError("PKCS#7 invalid padding byte");
                return new Uint8Array(e.subarray(0, r))
            }
        },
        20617: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "6.7.1"
        },
        47501: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AbiCoder = void 0;
            let n = r(82678),
                i = r(97573),
                s = r(36642),
                o = r(27327),
                a = r(22271),
                l = r(40879),
                u = r(36668),
                c = r(29967),
                d = r(97413),
                h = r(44179),
                f = r(13457),
                p = r(50169),
                g = r(29527),
                m = r(82678),
                y = new Map;
            y.set(0, "GENERIC_PANIC"), y.set(1, "ASSERT_FALSE"), y.set(17, "OVERFLOW"), y.set(18, "DIVIDE_BY_ZERO"), y.set(33, "ENUM_RANGE_ERROR"), y.set(34, "BAD_STORAGE_DATA"), y.set(49, "STACK_UNDERFLOW"), y.set(50, "ARRAY_RANGE_ERROR"), y.set(65, "OUT_OF_MEMORY"), y.set(81, "UNINITIALIZED_FUNCTION_CALL");
            let b = new RegExp(/^bytes([0-9]*)$/),
                w = new RegExp(/^(u?int)([0-9]*)$/),
                A = null;
            class v {#
                e(e) {
                    if (e.isArray()) return new o.ArrayCoder(this.#e(e.arrayChildren), e.arrayLength, e.name);
                    if (e.isTuple()) return new f.TupleCoder(e.components.map(e => this.#e(e)), e.name);
                    switch (e.baseType) {
                        case "address":
                            return new s.AddressCoder(e.name);
                        case "bool":
                            return new a.BooleanCoder(e.name);
                        case "string":
                            return new h.StringCoder(e.name);
                        case "bytes":
                            return new l.BytesCoder(e.name);
                        case "":
                            return new c.NullCoder(e.name)
                    }
                    let t = e.type.match(w);
                    if (t) {
                        let r = parseInt(t[2] || "256");
                        return (0, n.assertArgument)(0 !== r && r <= 256 && r % 8 == 0, "invalid " + t[1] + " bit length", "param", e), new d.NumberCoder(r / 8, "int" === t[1], e.name)
                    }
                    if (t = e.type.match(b)) {
                        let r = parseInt(t[1]);
                        return (0, n.assertArgument)(0 !== r && r <= 32, "invalid bytes length", "param", e), new u.FixedBytesCoder(r, e.name)
                    }(0, n.assertArgument)(!1, "invalid type", "type", e.type)
                }
                getDefaultValue(e) {
                    let t = e.map(e => this.#e(p.ParamType.from(e))),
                        r = new f.TupleCoder(t, "_");
                    return r.defaultValue()
                }
                encode(e, t) {
                    (0, n.assertArgumentCount)(t.length, e.length, "types/values length mismatch");
                    let r = e.map(e => this.#e(p.ParamType.from(e))),
                        s = new f.TupleCoder(r, "_"),
                        o = new i.Writer;
                    return s.encode(o, t), o.data
                }
                decode(e, t, r) {
                    let n = e.map(e => this.#e(p.ParamType.from(e))),
                        s = new f.TupleCoder(n, "_");
                    return s.decode(new i.Reader(t, r))
                }
                static defaultAbiCoder() {
                    return null == A && (A = new v), A
                }
                static getBuiltinCallException(e, t, r) {
                    return function(e, t, r, n) {
                        let i = "missing revert data",
                            s = null,
                            o = null;
                        if (r) {
                            i = "execution reverted";
                            let e = (0, m.getBytes)(r);
                            if (r = (0, m.hexlify)(r), 0 === e.length) i += " (no data present; likely require(false) occurred", s = "require(false)";
                            else if (e.length % 32 != 4) i += " (could not decode reason; invalid data length)";
                            else if ("0x08c379a0" === (0, m.hexlify)(e.slice(0, 4))) try {
                                s = n.decode(["string"], e.slice(4))[0], o = {
                                    signature: "Error(string)",
                                    name: "Error",
                                    args: [s]
                                }, i += `: ${JSON.stringify(s)}`
                            } catch (e) {
                                i += " (could not decode reason; invalid string data)"
                            } else if ("0x4e487b71" === (0, m.hexlify)(e.slice(0, 4))) try {
                                let t = Number(n.decode(["uint256"], e.slice(4))[0]);
                                o = {
                                    signature: "Panic(uint256)",
                                    name: "Panic",
                                    args: [t]
                                }, s = `Panic due to ${y.get(t)||"UNKNOWN"}(${t})`, i += `: ${s}`
                            } catch (e) {
                                i += " (could not decode panic code)"
                            } else i += " (unknown custom error)"
                        }
                        let a = {
                            to: t.to ? (0, g.getAddress)(t.to) : null,
                            data: t.data || "0x"
                        };
                        return t.from && (a.from = (0, g.getAddress)(t.from)), (0, m.makeError)(i, "CALL_EXCEPTION", {
                            action: e,
                            data: r,
                            reason: s,
                            transaction: a,
                            invocation: null,
                            revert: o
                        })
                    }(e, t, r, v.defaultAbiCoder())
                }
            }
            t.AbiCoder = v
        },
        8759: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeBytes32String = t.encodeBytes32String = void 0;
            let n = r(82678);
            t.encodeBytes32String = function(e) {
                let t = (0, n.toUtf8Bytes)(e);
                if (t.length > 31) throw Error("bytes32 string must be less than 32 bytes");
                return (0, n.zeroPadBytes)(t, 32)
            }, t.decodeBytes32String = function(e) {
                let t = (0, n.getBytes)(e, "bytes");
                if (32 !== t.length) throw Error("invalid bytes32 - not 32 bytes long");
                if (0 !== t[31]) throw Error("invalid bytes32 string - no null terminator");
                let r = 31;
                for (; 0 === t[r - 1];) r--;
                return (0, n.toUtf8String)(t.slice(0, r))
            }
        },
        97573: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Reader = t.Writer = t.Coder = t.checkResultErrors = t.Result = t.WordSize = void 0;
            let n = r(82678);
            t.WordSize = 32;
            let i = new Uint8Array(t.WordSize),
                s = ["then"],
                o = {};

            function a(e, t) {
                let r = Error(`deferred error during ABI decoding triggered accessing ${e}`);
                throw r.error = t, r
            }
            class l extends Array {#
                t;
                constructor(...e) {
                    let t = e[0],
                        r = e[1],
                        i = (e[2] || []).slice(),
                        l = !0;
                    t !== o && (r = e, i = [], l = !1), super(r.length), r.forEach((e, t) => {
                        this[t] = e
                    });
                    let u = i.reduce((e, t) => ("string" == typeof t && e.set(t, (e.get(t) || 0) + 1), e), new Map);
                    if (this.#t = Object.freeze(r.map((e, t) => {
                            let r = i[t];
                            return null != r && 1 === u.get(r) ? r : null
                        })), !l) return;
                    return Object.freeze(this), new Proxy(this, {
                        get: (e, t, r) => {
                            if ("string" == typeof t) {
                                if (t.match(/^[0-9]+$/)) {
                                    let r = (0, n.getNumber)(t, "%index");
                                    if (r < 0 || r >= this.length) throw RangeError("out of result range");
                                    let i = e[r];
                                    return i instanceof Error && a(`index ${r}`, i), i
                                }
                                if (s.indexOf(t) >= 0) return Reflect.get(e, t, r);
                                let i = e[t];
                                if (i instanceof Function) return function(...t) {
                                    return i.apply(this === r ? e : this, t)
                                };
                                if (!(t in e)) return e.getValue.apply(this === r ? e : this, [t])
                            }
                            return Reflect.get(e, t, r)
                        }
                    })
                }
                toArray() {
                    let e = [];
                    return this.forEach((t, r) => {
                        t instanceof Error && a(`index ${r}`, t), e.push(t)
                    }), e
                }
                toObject() {
                    return this.#t.reduce((e, t, r) => ((0, n.assert)(null != t, "value at index ${ index } unnamed", "UNSUPPORTED_OPERATION", {
                        operation: "toObject()"
                    }), t in e || (e[t] = this.getValue(t)), e), {})
                }
                slice(e, t) {
                    null == e && (e = 0), e < 0 && (e += this.length) < 0 && (e = 0), null == t && (t = this.length), t < 0 && (t += this.length) < 0 && (t = 0), t > this.length && (t = this.length);
                    let r = [],
                        n = [];
                    for (let i = e; i < t; i++) r.push(this[i]), n.push(this.#t[i]);
                    return new l(o, r, n)
                }
                filter(e, t) {
                    let r = [],
                        n = [];
                    for (let i = 0; i < this.length; i++) {
                        let s = this[i];
                        s instanceof Error && a(`index ${i}`, s), e.call(t, s, i, this) && (r.push(s), n.push(this.#t[i]))
                    }
                    return new l(o, r, n)
                }
                map(e, t) {
                    let r = [];
                    for (let n = 0; n < this.length; n++) {
                        let i = this[n];
                        i instanceof Error && a(`index ${n}`, i), r.push(e.call(t, i, n, this))
                    }
                    return r
                }
                getValue(e) {
                    let t = this.#t.indexOf(e);
                    if (-1 === t) return;
                    let r = this[t];
                    return r instanceof Error && a(`property ${JSON.stringify(e)}`, r.error), r
                }
                static fromItems(e, t) {
                    return new l(o, e, t)
                }
            }

            function u(e) {
                let r = (0, n.toBeArray)(e);
                return (0, n.assert)(r.length <= t.WordSize, "value out-of-bounds", "BUFFER_OVERRUN", {
                    buffer: r,
                    length: t.WordSize,
                    offset: r.length
                }), r.length !== t.WordSize && (r = (0, n.getBytesCopy)((0, n.concat)([i.slice(r.length % t.WordSize), r]))), r
            }
            t.Result = l, t.checkResultErrors = function(e) {
                let t = [],
                    r = function(e, n) {
                        if (Array.isArray(n))
                            for (let i in n) {
                                let s = e.slice();
                                s.push(i);
                                try {
                                    r(s, n[i])
                                } catch (e) {
                                    t.push({
                                        path: s,
                                        error: e
                                    })
                                }
                            }
                    };
                return r([], e), t
            }, t.Coder = class {
                name;
                type;
                localName;
                dynamic;
                constructor(e, t, r, i) {
                    (0, n.defineProperties)(this, {
                        name: e,
                        type: t,
                        localName: r,
                        dynamic: i
                    }, {
                        name: "string",
                        type: "string",
                        localName: "string",
                        dynamic: "boolean"
                    })
                }
                _throwError(e, t) {
                    (0, n.assertArgument)(!1, e, this.localName, t)
                }
            }, t.Writer = class {#
                r;#
                n;
                constructor() {
                    this.#r = [], this.#n = 0
                }
                get data() {
                    return (0, n.concat)(this.#r)
                }
                get length() {
                    return this.#n
                }#
                i(e) {
                    return this.#r.push(e), this.#n += e.length, e.length
                }
                appendWriter(e) {
                    return this.#i((0, n.getBytesCopy)(e.data))
                }
                writeBytes(e) {
                    let r = (0, n.getBytesCopy)(e),
                        s = r.length % t.WordSize;
                    return s && (r = (0, n.getBytesCopy)((0, n.concat)([r, i.slice(s)]))), this.#i(r)
                }
                writeValue(e) {
                    return this.#i(u(e))
                }
                writeUpdatableValue() {
                    let e = this.#r.length;
                    return this.#r.push(i), this.#n += t.WordSize, t => {
                        this.#r[e] = u(t)
                    }
                }
            };
            class c {
                allowLoose;#
                r;#
                s;
                constructor(e, t) {
                    (0, n.defineProperties)(this, {
                        allowLoose: !!t
                    }), this.#r = (0, n.getBytesCopy)(e), this.#s = 0
                }
                get data() {
                    return (0, n.hexlify)(this.#r)
                }
                get dataLength() {
                    return this.#r.length
                }
                get consumed() {
                    return this.#s
                }
                get bytes() {
                    return new Uint8Array(this.#r)
                }#
                o(e, r, i) {
                    let s = Math.ceil(r / t.WordSize) * t.WordSize;
                    return this.#s + s > this.#r.length && (this.allowLoose && i && this.#s + r <= this.#r.length ? s = r : (0, n.assert)(!1, "data out-of-bounds", "BUFFER_OVERRUN", {
                        buffer: (0, n.getBytesCopy)(this.#r),
                        length: this.#r.length,
                        offset: this.#s + s
                    })), this.#r.slice(this.#s, this.#s + s)
                }
                subReader(e) {
                    return new c(this.#r.slice(this.#s + e), this.allowLoose)
                }
                readBytes(e, t) {
                    let r = this.#o(0, e, !!t);
                    return this.#s += r.length, r.slice(0, e)
                }
                readValue() {
                    return (0, n.toBigInt)(this.readBytes(t.WordSize))
                }
                readIndex() {
                    return (0, n.toNumber)(this.readBytes(t.WordSize))
                }
            }
            t.Reader = c
        },
        36642: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AddressCoder = void 0;
            let n = r(29527),
                i = r(80306),
                s = r(52301),
                o = r(97573);
            class a extends o.Coder {
                constructor(e) {
                    super("address", "address", e, !1)
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000"
                }
                encode(e, t) {
                    let r = s.Typed.dereference(t, "string");
                    try {
                        r = (0, n.getAddress)(r)
                    } catch (e) {
                        return this._throwError(e.message, t)
                    }
                    return e.writeValue(r)
                }
                decode(e) {
                    return (0, n.getAddress)((0, i.toBeHex)(e.readValue(), 20))
                }
            }
            t.AddressCoder = a
        },
        33358: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AnonymousCoder = void 0;
            let n = r(97573);
            class i extends n.Coder {
                coder;
                constructor(e) {
                    super(e.name, e.type, "_", e.dynamic), this.coder = e
                }
                defaultValue() {
                    return this.coder.defaultValue()
                }
                encode(e, t) {
                    return this.coder.encode(e, t)
                }
                decode(e) {
                    return this.coder.decode(e)
                }
            }
            t.AnonymousCoder = i
        },
        27327: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ArrayCoder = t.unpack = t.pack = void 0;
            let n = r(82678),
                i = r(52301),
                s = r(97573),
                o = r(33358);

            function a(e, t, r) {
                let i = [];
                if (Array.isArray(r)) i = r;
                else if (r && "object" == typeof r) {
                    let e = {};
                    i = t.map(t => {
                        let i = t.localName;
                        return (0, n.assert)(i, "cannot encode object for signature with missing names", "INVALID_ARGUMENT", {
                            argument: "values",
                            info: {
                                coder: t
                            },
                            value: r
                        }), (0, n.assert)(!e[i], "cannot encode object for signature with duplicate names", "INVALID_ARGUMENT", {
                            argument: "values",
                            info: {
                                coder: t
                            },
                            value: r
                        }), e[i] = !0, r[i]
                    })
                } else(0, n.assertArgument)(!1, "invalid tuple value", "tuple", r);
                (0, n.assertArgument)(t.length === i.length, "types/value length mismatch", "tuple", r);
                let o = new s.Writer,
                    a = new s.Writer,
                    l = [];
                return t.forEach((e, t) => {
                    let r = i[t];
                    if (e.dynamic) {
                        let t = a.length;
                        e.encode(a, r);
                        let n = o.writeUpdatableValue();
                        l.push(e => {
                            n(e + t)
                        })
                    } else e.encode(o, r)
                }), l.forEach(e => {
                    e(o.length)
                }), e.appendWriter(o) + e.appendWriter(a)
            }

            function l(e, t) {
                let r = [],
                    i = [],
                    o = e.subReader(0);
                return t.forEach(t => {
                    let s = null;
                    if (t.dynamic) {
                        let r = e.readIndex(),
                            i = o.subReader(r);
                        try {
                            s = t.decode(i)
                        } catch (e) {
                            if ((0, n.isError)(e, "BUFFER_OVERRUN")) throw e;
                            (s = e).baseType = t.name, s.name = t.localName, s.type = t.type
                        }
                    } else try {
                        s = t.decode(e)
                    } catch (e) {
                        if ((0, n.isError)(e, "BUFFER_OVERRUN")) throw e;
                        (s = e).baseType = t.name, s.name = t.localName, s.type = t.type
                    }
                    if (void 0 == s) throw Error("investigate");
                    r.push(s), i.push(t.localName || null)
                }), s.Result.fromItems(r, i)
            }
            t.pack = a, t.unpack = l;
            class u extends s.Coder {
                coder;
                length;
                constructor(e, t, r) {
                    let i = e.type + "[" + (t >= 0 ? t : "") + "]",
                        s = -1 === t || e.dynamic;
                    super("array", i, r, s), (0, n.defineProperties)(this, {
                        coder: e,
                        length: t
                    })
                }
                defaultValue() {
                    let e = this.coder.defaultValue(),
                        t = [];
                    for (let r = 0; r < this.length; r++) t.push(e);
                    return t
                }
                encode(e, t) {
                    let r = i.Typed.dereference(t, "array");
                    Array.isArray(r) || this._throwError("expected array value", r);
                    let s = this.length; - 1 === s && (s = r.length, e.writeValue(r.length)), (0, n.assertArgumentCount)(r.length, s, "coder array" + (this.localName ? " " + this.localName : ""));
                    let o = [];
                    for (let e = 0; e < r.length; e++) o.push(this.coder);
                    return a(e, o, r)
                }
                decode(e) {
                    let t = this.length; - 1 === t && (t = e.readIndex(), (0, n.assert)(t * s.WordSize <= e.dataLength, "insufficient data length", "BUFFER_OVERRUN", {
                        buffer: e.bytes,
                        offset: t * s.WordSize,
                        length: e.dataLength
                    }));
                    let r = [];
                    for (let e = 0; e < t; e++) r.push(new o.AnonymousCoder(this.coder));
                    return l(e, r)
                }
            }
            t.ArrayCoder = u
        },
        22271: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BooleanCoder = void 0;
            let n = r(52301),
                i = r(97573);
            class s extends i.Coder {
                constructor(e) {
                    super("bool", "bool", e, !1)
                }
                defaultValue() {
                    return !1
                }
                encode(e, t) {
                    let r = n.Typed.dereference(t, "bool");
                    return e.writeValue(r ? 1 : 0)
                }
                decode(e) {
                    return !!e.readValue()
                }
            }
            t.BooleanCoder = s
        },
        40879: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BytesCoder = t.DynamicBytesCoder = void 0;
            let n = r(82678),
                i = r(97573);
            class s extends i.Coder {
                constructor(e, t) {
                    super(e, e, t, !0)
                }
                defaultValue() {
                    return "0x"
                }
                encode(e, t) {
                    return t = (0, n.getBytesCopy)(t), e.writeValue(t.length) + e.writeBytes(t)
                }
                decode(e) {
                    return e.readBytes(e.readIndex(), !0)
                }
            }
            t.DynamicBytesCoder = s, t.BytesCoder = class extends s {
                constructor(e) {
                    super("bytes", e)
                }
                decode(e) {
                    return (0, n.hexlify)(super.decode(e))
                }
            }
        },
        36668: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FixedBytesCoder = void 0;
            let n = r(82678),
                i = r(52301),
                s = r(97573);
            class o extends s.Coder {
                size;
                constructor(e, t) {
                    let r = "bytes" + String(e);
                    super(r, r, t, !1), (0, n.defineProperties)(this, {
                        size: e
                    }, {
                        size: "number"
                    })
                }
                defaultValue() {
                    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size)
                }
                encode(e, t) {
                    let r = (0, n.getBytesCopy)(i.Typed.dereference(t, this.type));
                    return r.length !== this.size && this._throwError("incorrect data length", t), e.writeBytes(r)
                }
                decode(e) {
                    return (0, n.hexlify)(e.readBytes(this.size))
                }
            }
            t.FixedBytesCoder = o
        },
        29967: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NullCoder = void 0;
            let n = r(97573),
                i = new Uint8Array([]);
            class s extends n.Coder {
                constructor(e) {
                    super("null", "", e, !1)
                }
                defaultValue() {
                    return null
                }
                encode(e, t) {
                    return null != t && this._throwError("not null", t), e.writeBytes(i)
                }
                decode(e) {
                    return e.readBytes(0), null
                }
            }
            t.NullCoder = s
        },
        97413: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NumberCoder = void 0;
            let n = r(82678),
                i = r(52301),
                s = r(97573),
                o = BigInt(0),
                a = BigInt(1),
                l = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
            class u extends s.Coder {
                size;
                signed;
                constructor(e, t, r) {
                    let i = (t ? "int" : "uint") + 8 * e;
                    super(i, i, r, !1), (0, n.defineProperties)(this, {
                        size: e,
                        signed: t
                    }, {
                        size: "number",
                        signed: "boolean"
                    })
                }
                defaultValue() {
                    return 0
                }
                encode(e, t) {
                    let r = (0, n.getBigInt)(i.Typed.dereference(t, this.type)),
                        u = (0, n.mask)(l, 8 * s.WordSize);
                    if (this.signed) {
                        let e = (0, n.mask)(u, 8 * this.size - 1);
                        (r > e || r < -(e + a)) && this._throwError("value out-of-bounds", t), r = (0, n.toTwos)(r, 8 * s.WordSize)
                    } else(r < o || r > (0, n.mask)(u, 8 * this.size)) && this._throwError("value out-of-bounds", t);
                    return e.writeValue(r)
                }
                decode(e) {
                    let t = (0, n.mask)(e.readValue(), 8 * this.size);
                    return this.signed && (t = (0, n.fromTwos)(t, 8 * this.size)), t
                }
            }
            t.NumberCoder = u
        },
        44179: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.StringCoder = void 0;
            let n = r(76482),
                i = r(52301),
                s = r(40879);
            class o extends s.DynamicBytesCoder {
                constructor(e) {
                    super("string", e)
                }
                defaultValue() {
                    return ""
                }
                encode(e, t) {
                    return super.encode(e, (0, n.toUtf8Bytes)(i.Typed.dereference(t, "string")))
                }
                decode(e) {
                    return (0, n.toUtf8String)(super.decode(e))
                }
            }
            t.StringCoder = o
        },
        13457: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TupleCoder = void 0;
            let n = r(17693),
                i = r(52301),
                s = r(97573),
                o = r(27327);
            class a extends s.Coder {
                coders;
                constructor(e, t) {
                    let r = !1,
                        i = [];
                    e.forEach(e => {
                        e.dynamic && (r = !0), i.push(e.type)
                    });
                    let s = "tuple(" + i.join(",") + ")";
                    super("tuple", s, t, r), (0, n.defineProperties)(this, {
                        coders: Object.freeze(e.slice())
                    })
                }
                defaultValue() {
                    let e = [];
                    this.coders.forEach(t => {
                        e.push(t.defaultValue())
                    });
                    let t = this.coders.reduce((e, t) => {
                        let r = t.localName;
                        return r && (e[r] || (e[r] = 0), e[r]++), e
                    }, {});
                    return this.coders.forEach((r, n) => {
                        let i = r.localName;
                        i && 1 === t[i] && ("length" === i && (i = "_length"), null == e[i] && (e[i] = e[n]))
                    }), Object.freeze(e)
                }
                encode(e, t) {
                    let r = i.Typed.dereference(t, "tuple");
                    return (0, o.pack)(e, this.coders, r)
                }
                decode(e) {
                    return (0, o.unpack)(e, this.coders)
                }
            }
            t.TupleCoder = a
        },
        50169: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.StructFragment = t.FunctionFragment = t.FallbackFragment = t.ConstructorFragment = t.EventFragment = t.ErrorFragment = t.NamedFragment = t.Fragment = t.ParamType = void 0;
            let n = r(82678),
                i = r(94194);

            function s(e) {
                let t = new Set;
                return e.forEach(e => t.add(e)), Object.freeze(t)
            }
            let o = s("external public payable".split(" ")),
                a = "constant external internal payable private public pure view",
                l = s(a.split(" ")),
                u = "constructor error event fallback function receive struct",
                c = s(u.split(" ")),
                d = "calldata memory storage payable indexed",
                h = s(d.split(" ")),
                f = [u, d, "tuple returns", a].join(" "),
                p = s(f.split(" ")),
                g = {
                    "(": "OPEN_PAREN",
                    ")": "CLOSE_PAREN",
                    "[": "OPEN_BRACKET",
                    "]": "CLOSE_BRACKET",
                    ",": "COMMA",
                    "@": "AT"
                },
                m = RegExp("^(\\s*)"),
                y = RegExp("^([0-9]+)"),
                b = RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)"),
                w = RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$"),
                A = RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");
            class v {#
                s;#
                a;
                get offset() {
                    return this.#s
                }
                get length() {
                    return this.#a.length - this.#s
                }
                constructor(e) {
                    this.#s = 0, this.#a = e.slice()
                }
                clone() {
                    return new v(this.#a)
                }
                reset() {
                    this.#s = 0
                }#
                l(e = 0, t = 0) {
                    return new v(this.#a.slice(e, t).map(t => Object.freeze(Object.assign({}, t, {
                        match: t.match - e,
                        linkBack: t.linkBack - e,
                        linkNext: t.linkNext - e
                    }))))
                }
                popKeyword(e) {
                    let t = this.peek();
                    if ("KEYWORD" !== t.type || !e.has(t.text)) throw Error(`expected keyword ${t.text}`);
                    return this.pop().text
                }
                popType(e) {
                    if (this.peek().type !== e) throw Error(`expected ${e}; got ${JSON.stringify(this.peek())}`);
                    return this.pop().text
                }
                popParen() {
                    let e = this.peek();
                    if ("OPEN_PAREN" !== e.type) throw Error("bad start");
                    let t = this.#l(this.#s + 1, e.match + 1);
                    return this.#s = e.match + 1, t
                }
                popParams() {
                    let e = this.peek();
                    if ("OPEN_PAREN" !== e.type) throw Error("bad start");
                    let t = [];
                    for (; this.#s < e.match - 1;) {
                        let e = this.peek().linkNext;
                        t.push(this.#l(this.#s + 1, e)), this.#s = e
                    }
                    return this.#s = e.match + 1, t
                }
                peek() {
                    if (this.#s >= this.#a.length) throw Error("out-of-bounds");
                    return this.#a[this.#s]
                }
                peekKeyword(e) {
                    let t = this.peekType("KEYWORD");
                    return null != t && e.has(t) ? t : null
                }
                peekType(e) {
                    if (0 === this.length) return null;
                    let t = this.peek();
                    return t.type === e ? t.text : null
                }
                pop() {
                    let e = this.peek();
                    return this.#s++, e
                }
                toString() {
                    let e = [];
                    for (let t = this.#s; t < this.#a.length; t++) {
                        let r = this.#a[t];
                        e.push(`${r.type}:${r.text}`)
                    }
                    return `<TokenString ${e.join(" ")}>`
                }
            }

            function E(e) {
                let t = [],
                    r = t => {
                        let r = o < e.length ? JSON.stringify(e[o]) : "$EOI";
                        throw Error(`invalid token ${r} at ${o}: ${t}`)
                    },
                    i = [],
                    s = [],
                    o = 0;
                for (; o < e.length;) {
                    let a = e.substring(o),
                        l = a.match(m);
                    l && (o += l[1].length, a = e.substring(o));
                    let u = {
                        depth: i.length,
                        linkBack: -1,
                        linkNext: -1,
                        match: -1,
                        type: "",
                        text: "",
                        offset: o,
                        value: -1
                    };
                    t.push(u);
                    let c = g[a[0]] || "";
                    if (c) {
                        if (u.type = c, u.text = a[0], o++, "OPEN_PAREN" === c) i.push(t.length - 1), s.push(t.length - 1);
                        else if ("CLOSE_PAREN" == c) 0 === i.length && r("no matching open bracket"), u.match = i.pop(), t[u.match].match = t.length - 1, u.depth--, u.linkBack = s.pop(), t[u.linkBack].linkNext = t.length - 1;
                        else if ("COMMA" === c) u.linkBack = s.pop(), t[u.linkBack].linkNext = t.length - 1, s.push(t.length - 1);
                        else if ("OPEN_BRACKET" === c) u.type = "BRACKET";
                        else if ("CLOSE_BRACKET" === c) {
                            let e = t.pop().text;
                            if (t.length > 0 && "NUMBER" === t[t.length - 1].type) {
                                let r = t.pop().text;
                                e = r + e, t[t.length - 1].value = (0, n.getNumber)(r)
                            }
                            if (0 === t.length || "BRACKET" !== t[t.length - 1].type) throw Error("missing opening bracket");
                            t[t.length - 1].text += e
                        }
                        continue
                    }
                    if (l = a.match(b)) {
                        if (u.text = l[1], o += u.text.length, p.has(u.text)) {
                            u.type = "KEYWORD";
                            continue
                        }
                        if (u.text.match(A)) {
                            u.type = "TYPE";
                            continue
                        }
                        u.type = "ID";
                        continue
                    }
                    if (l = a.match(y)) {
                        u.text = l[1], u.type = "NUMBER", o += u.text.length;
                        continue
                    }
                    throw Error(`unexpected token ${JSON.stringify(a[0])} at position ${o}`)
                }
                return new v(t.map(e => Object.freeze(e)))
            }

            function P(e, t) {
                let r = [];
                for (let n in t.keys()) e.has(n) && r.push(n);
                if (r.length > 1) throw Error(`conflicting types: ${r.join(", ")}`)
            }

            function S(e, t) {
                if (t.peekKeyword(c)) {
                    let r = t.pop().text;
                    if (r !== e) throw Error(`expected ${e}, got ${r}`)
                }
                return t.popType("ID")
            }

            function O(e, t) {
                let r = new Set;
                for (;;) {
                    let n = e.peekType("KEYWORD");
                    if (null == n || t && !t.has(n)) break;
                    if (e.pop(), r.has(n)) throw Error(`duplicate keywords: ${JSON.stringify(n)}`);
                    r.add(n)
                }
                return Object.freeze(r)
            }

            function k(e) {
                let t = O(e, l);
                return (P(t, s("constant payable nonpayable".split(" "))), P(t, s("pure view payable nonpayable".split(" "))), t.has("view")) ? "view" : t.has("pure") ? "pure" : t.has("payable") ? "payable" : t.has("nonpayable") ? "nonpayable" : t.has("constant") ? "view" : "nonpayable"
            }

            function C(e, t) {
                return e.popParams().map(e => H.from(e, t))
            }

            function x(e) {
                if (e.peekType("AT")) {
                    if (e.pop(), e.peekType("NUMBER")) return (0, n.getBigInt)(e.pop().text);
                    throw Error("invalid gas")
                }
                return null
            }

            function T(e) {
                if (e.length) throw Error(`unexpected tokens: ${e.toString()}`)
            }
            let N = new RegExp(/^(.*)\[([0-9]*)\]$/);

            function _(e) {
                let t = e.match(A);
                if ((0, n.assertArgument)(t, "invalid type", "type", e), "uint" === e) return "uint256";
                if ("int" === e) return "int256";
                if (t[2]) {
                    let r = parseInt(t[2]);
                    (0, n.assertArgument)(0 !== r && r <= 32, "invalid bytes length", "type", e)
                } else if (t[3]) {
                    let r = parseInt(t[3]);
                    (0, n.assertArgument)(0 !== r && r <= 256 && r % 8 == 0, "invalid numeric width", "type", e)
                }
                return e
            }
            let B = {},
                D = Symbol.for("_ethers_internal"),
                I = "_ParamTypeInternal",
                R = "_ErrorInternal",
                M = "_EventInternal",
                L = "_ConstructorInternal",
                U = "_FallbackInternal",
                j = "_FunctionInternal",
                F = "_StructInternal";
            class H {
                name;
                type;
                baseType;
                indexed;
                components;
                arrayLength;
                arrayChildren;
                constructor(e, t, r, i, s, o, a, l) {
                    if ((0, n.assertPrivate)(e, B, "ParamType"), Object.defineProperty(this, D, {
                            value: I
                        }), o && (o = Object.freeze(o.slice())), "array" === i) {
                        if (null == a || null == l) throw Error("")
                    } else if (null != a || null != l) throw Error("");
                    if ("tuple" === i) {
                        if (null == o) throw Error("")
                    } else if (null != o) throw Error("");
                    (0, n.defineProperties)(this, {
                        name: t,
                        type: r,
                        baseType: i,
                        indexed: s,
                        components: o,
                        arrayLength: a,
                        arrayChildren: l
                    })
                }
                format(e) {
                    if (null == e && (e = "sighash"), "json" === e) {
                        let t = this.name || "";
                        if (this.isArray()) {
                            let e = JSON.parse(this.arrayChildren.format("json"));
                            return e.name = t, e.type += `[${this.arrayLength<0?"":String(this.arrayLength)}]`, JSON.stringify(e)
                        }
                        let r = {
                            type: "tuple" === this.baseType ? "tuple" : this.type,
                            name: t
                        };
                        return "boolean" == typeof this.indexed && (r.indexed = this.indexed), this.isTuple() && (r.components = this.components.map(t => JSON.parse(t.format(e)))), JSON.stringify(r)
                    }
                    let t = "";
                    return this.isArray() ? t += this.arrayChildren.format(e) + `[${this.arrayLength<0?"":String(this.arrayLength)}]` : this.isTuple() ? ("sighash" !== e && (t += this.type), t += "(" + this.components.map(t => t.format(e)).join("full" === e ? ", " : ",") + ")") : t += this.type, "sighash" !== e && (!0 === this.indexed && (t += " indexed"), "full" === e && this.name && (t += " " + this.name)), t
                }
                isArray() {
                    return "array" === this.baseType
                }
                isTuple() {
                    return "tuple" === this.baseType
                }
                isIndexable() {
                    return null != this.indexed
                }
                walk(e, t) {
                    if (this.isArray()) {
                        if (!Array.isArray(e)) throw Error("invalid array value");
                        if (-1 !== this.arrayLength && e.length !== this.arrayLength) throw Error("array is wrong length");
                        let r = this;
                        return e.map(e => r.arrayChildren.walk(e, t))
                    }
                    if (this.isTuple()) {
                        if (!Array.isArray(e)) throw Error("invalid tuple value");
                        if (e.length !== this.components.length) throw Error("array is wrong length");
                        let r = this;
                        return e.map((e, n) => r.components[n].walk(e, t))
                    }
                    return t(this.type, e)
                }#
                u(e, t, r, n) {
                    if (this.isArray()) {
                        if (!Array.isArray(t)) throw Error("invalid array value");
                        if (-1 !== this.arrayLength && t.length !== this.arrayLength) throw Error("array is wrong length");
                        let i = this.arrayChildren,
                            s = t.slice();
                        s.forEach((t, n) => {
                            i.#u(e, t, r, e => {
                                s[n] = e
                            })
                        }), n(s);
                        return
                    }
                    if (this.isTuple()) {
                        let i;
                        let s = this.components;
                        if (Array.isArray(t)) i = t.slice();
                        else {
                            if (null == t || "object" != typeof t) throw Error("invalid tuple value");
                            i = s.map(e => {
                                if (!e.name) throw Error("cannot use object value with unnamed components");
                                if (!(e.name in t)) throw Error(`missing value for component ${e.name}`);
                                return t[e.name]
                            })
                        }
                        if (i.length !== this.components.length) throw Error("array is wrong length");
                        i.forEach((t, n) => {
                            s[n].#u(e, t, r, e => {
                                i[n] = e
                            })
                        }), n(i);
                        return
                    }
                    let i = r(this.type, t);
                    i.then ? e.push(async function() {
                        n(await i)
                    }()) : n(i)
                }
                async walkAsync(e, t) {
                    let r = [],
                        n = [e];
                    return this.#u(r, e, t, e => {
                        n[0] = e
                    }), r.length && await Promise.all(r), n[0]
                }
                static from(e, t) {
                    if (H.isParamType(e)) return e;
                    if ("string" == typeof e) try {
                        return H.from(E(e), t)
                    } catch (t) {
                        (0, n.assertArgument)(!1, "invalid param type", "obj", e)
                    } else if (e instanceof v) {
                        let r = "",
                            n = "",
                            i = null;
                        O(e, s(["tuple"])).has("tuple") || e.peekType("OPEN_PAREN") ? (n = "tuple", r = `tuple(${(i=e.popParams().map(e=>H.from(e))).map(e=>e.format()).join(",")})`) : n = r = _(e.popType("TYPE"));
                        let o = null,
                            a = null;
                        for (; e.length && e.peekType("BRACKET");) {
                            let t = e.pop();
                            o = new H(B, "", r, n, null, i, a, o), a = t.value, r += t.text, n = "array", i = null
                        }
                        let l = null,
                            u = O(e, h);
                        if (u.has("indexed")) {
                            if (!t) throw Error("");
                            l = !0
                        }
                        let c = e.peekType("ID") ? e.pop().text : "";
                        if (e.length) throw Error("leftover tokens");
                        return new H(B, c, r, n, l, i, a, o)
                    }
                    let r = e.name;
                    (0, n.assertArgument)(!r || "string" == typeof r && r.match(w), "invalid name", "obj.name", r);
                    let i = e.indexed;
                    null != i && ((0, n.assertArgument)(t, "parameter cannot be indexed", "obj.indexed", e.indexed), i = !!i);
                    let o = e.type,
                        a = o.match(N);
                    if (a) {
                        let t = parseInt(a[2] || "-1"),
                            n = H.from({
                                type: a[1],
                                components: e.components
                            });
                        return new H(B, r || "", o, "array", i, null, t, n)
                    }
                    if ("tuple" === o || o.startsWith("tuple(") || o.startsWith("(")) {
                        let t = null != e.components ? e.components.map(e => H.from(e)) : null,
                            n = new H(B, r || "", o, "tuple", i, t, null, null);
                        return n
                    }
                    return o = _(e.type), new H(B, r || "", o, o, i, null, null, null)
                }
                static isParamType(e) {
                    return e && e[D] === I
                }
            }
            t.ParamType = H;
            class $ {
                type;
                inputs;
                constructor(e, t, r) {
                    (0, n.assertPrivate)(e, B, "Fragment"), r = Object.freeze(r.slice()), (0, n.defineProperties)(this, {
                        type: t,
                        inputs: r
                    })
                }
                static from(e) {
                    if ("string" == typeof e) {
                        try {
                            $.from(JSON.parse(e))
                        } catch (e) {}
                        return $.from(E(e))
                    }
                    if (e instanceof v) {
                        let t = e.peekKeyword(c);
                        switch (t) {
                            case "constructor":
                                return W.from(e);
                            case "error":
                                return V.from(e);
                            case "event":
                                return G.from(e);
                            case "fallback":
                            case "receive":
                                return J.from(e);
                            case "function":
                                return q.from(e);
                            case "struct":
                                return Q.from(e)
                        }
                    } else if ("object" == typeof e) {
                        switch (e.type) {
                            case "constructor":
                                return W.from(e);
                            case "error":
                                return V.from(e);
                            case "event":
                                return G.from(e);
                            case "fallback":
                            case "receive":
                                return J.from(e);
                            case "function":
                                return q.from(e);
                            case "struct":
                                return Q.from(e)
                        }(0, n.assert)(!1, `unsupported type: ${e.type}`, "UNSUPPORTED_OPERATION", {
                            operation: "Fragment.from"
                        })
                    }(0, n.assertArgument)(!1, "unsupported frgament object", "obj", e)
                }
                static isConstructor(e) {
                    return W.isFragment(e)
                }
                static isError(e) {
                    return V.isFragment(e)
                }
                static isEvent(e) {
                    return G.isFragment(e)
                }
                static isFunction(e) {
                    return q.isFragment(e)
                }
                static isStruct(e) {
                    return Q.isFragment(e)
                }
            }
            t.Fragment = $;
            class K extends $ {
                name;
                constructor(e, t, r, i) {
                    super(e, t, i), (0, n.assertArgument)("string" == typeof r && r.match(w), "invalid identifier", "name", r), i = Object.freeze(i.slice()), (0, n.defineProperties)(this, {
                        name: r
                    })
                }
            }

            function z(e, t) {
                return "(" + t.map(t => t.format(e)).join("full" === e ? ", " : ",") + ")"
            }
            t.NamedFragment = K;
            class V extends K {
                constructor(e, t, r) {
                    super(e, "error", t, r), Object.defineProperty(this, D, {
                        value: R
                    })
                }
                get selector() {
                    return (0, i.id)(this.format("sighash")).substring(0, 10)
                }
                format(e) {
                    if (null == e && (e = "sighash"), "json" === e) return JSON.stringify({
                        type: "error",
                        name: this.name,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = [];
                    return "sighash" !== e && t.push("error"), t.push(this.name + z(e, this.inputs)), t.join(" ")
                }
                static from(e) {
                    if (V.isFragment(e)) return e;
                    if ("string" == typeof e) return V.from(E(e));
                    if (e instanceof v) {
                        let t = S("error", e),
                            r = C(e);
                        return T(e), new V(B, t, r)
                    }
                    return new V(B, e.name, e.inputs ? e.inputs.map(H.from) : [])
                }
                static isFragment(e) {
                    return e && e[D] === R
                }
            }
            t.ErrorFragment = V;
            class G extends K {
                anonymous;
                constructor(e, t, r, i) {
                    super(e, "event", t, r), Object.defineProperty(this, D, {
                        value: M
                    }), (0, n.defineProperties)(this, {
                        anonymous: i
                    })
                }
                get topicHash() {
                    return (0, i.id)(this.format("sighash"))
                }
                format(e) {
                    if (null == e && (e = "sighash"), "json" === e) return JSON.stringify({
                        type: "event",
                        anonymous: this.anonymous,
                        name: this.name,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = [];
                    return "sighash" !== e && t.push("event"), t.push(this.name + z(e, this.inputs)), "sighash" !== e && this.anonymous && t.push("anonymous"), t.join(" ")
                }
                static getTopicHash(e, t) {
                    t = (t || []).map(e => H.from(e));
                    let r = new G(B, e, t, !1);
                    return r.topicHash
                }
                static from(e) {
                    if (G.isFragment(e)) return e;
                    if ("string" == typeof e) try {
                        return G.from(E(e))
                    } catch (t) {
                        (0, n.assertArgument)(!1, "invalid event fragment", "obj", e)
                    } else if (e instanceof v) {
                        let t = S("event", e),
                            r = C(e, !0),
                            n = !!O(e, s(["anonymous"])).has("anonymous");
                        return T(e), new G(B, t, r, n)
                    }
                    return new G(B, e.name, e.inputs ? e.inputs.map(e => H.from(e, !0)) : [], !!e.anonymous)
                }
                static isFragment(e) {
                    return e && e[D] === M
                }
            }
            t.EventFragment = G;
            class W extends $ {
                payable;
                gas;
                constructor(e, t, r, i, s) {
                    super(e, t, r), Object.defineProperty(this, D, {
                        value: L
                    }), (0, n.defineProperties)(this, {
                        payable: i,
                        gas: s
                    })
                }
                format(e) {
                    if ((0, n.assert)(null != e && "sighash" !== e, "cannot format a constructor for sighash", "UNSUPPORTED_OPERATION", {
                            operation: "format(sighash)"
                        }), "json" === e) return JSON.stringify({
                        type: "constructor",
                        stateMutability: this.payable ? "payable" : "undefined",
                        payable: this.payable,
                        gas: null != this.gas ? this.gas : void 0,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = [`constructor${z(e,this.inputs)}`];
                    return t.push(this.payable ? "payable" : "nonpayable"), null != this.gas && t.push(`@${this.gas.toString()}`), t.join(" ")
                }
                static from(e) {
                    if (W.isFragment(e)) return e;
                    if ("string" == typeof e) try {
                        return W.from(E(e))
                    } catch (t) {
                        (0, n.assertArgument)(!1, "invalid constuctor fragment", "obj", e)
                    } else if (e instanceof v) {
                        O(e, s(["constructor"]));
                        let t = C(e),
                            r = !!O(e, o).has("payable"),
                            n = x(e);
                        return T(e), new W(B, "constructor", t, r, n)
                    }
                    return new W(B, "constructor", e.inputs ? e.inputs.map(H.from) : [], !!e.payable, null != e.gas ? e.gas : null)
                }
                static isFragment(e) {
                    return e && e[D] === L
                }
            }
            t.ConstructorFragment = W;
            class J extends $ {
                payable;
                constructor(e, t, r) {
                    super(e, "fallback", t), Object.defineProperty(this, D, {
                        value: U
                    }), (0, n.defineProperties)(this, {
                        payable: r
                    })
                }
                format(e) {
                    let t = 0 === this.inputs.length ? "receive" : "fallback";
                    if ("json" === e) {
                        let e = this.payable ? "payable" : "nonpayable";
                        return JSON.stringify({
                            type: t,
                            stateMutability: e
                        })
                    }
                    return `${t}()${this.payable?" payable":""}`
                }
                static from(e) {
                    if (J.isFragment(e)) return e;
                    if ("string" == typeof e) try {
                        return J.from(E(e))
                    } catch (t) {
                        (0, n.assertArgument)(!1, "invalid fallback fragment", "obj", e)
                    } else if (e instanceof v) {
                        let t = e.toString(),
                            r = e.peekKeyword(s(["fallback", "receive"]));
                        (0, n.assertArgument)(r, "type must be fallback or receive", "obj", t);
                        let i = e.popKeyword(s(["fallback", "receive"]));
                        if ("receive" === i) {
                            let t = C(e);
                            return (0, n.assertArgument)(0 === t.length, "receive cannot have arguments", "obj.inputs", t), O(e, s(["payable"])), T(e), new J(B, [], !0)
                        }
                        let o = C(e);
                        o.length ? (0, n.assertArgument)(1 === o.length && "bytes" === o[0].type, "invalid fallback inputs", "obj.inputs", o.map(e => e.format("minimal")).join(", ")) : o = [H.from("bytes")];
                        let a = k(e);
                        if ((0, n.assertArgument)("nonpayable" === a || "payable" === a, "fallback cannot be constants", "obj.stateMutability", a), O(e, s(["returns"])).has("returns")) {
                            let t = C(e);
                            (0, n.assertArgument)(1 === t.length && "bytes" === t[0].type, "invalid fallback outputs", "obj.outputs", t.map(e => e.format("minimal")).join(", "))
                        }
                        return T(e), new J(B, o, "payable" === a)
                    }
                    if ("receive" === e.type) return new J(B, [], !0);
                    if ("fallback" === e.type) {
                        let t = [H.from("bytes")],
                            r = "payable" === e.stateMutability;
                        return new J(B, t, r)
                    }(0, n.assertArgument)(!1, "invalid fallback description", "obj", e)
                }
                static isFragment(e) {
                    return e && e[D] === U
                }
            }
            t.FallbackFragment = J;
            class q extends K {
                constant;
                outputs;
                stateMutability;
                payable;
                gas;
                constructor(e, t, r, i, s, o) {
                    super(e, "function", t, i), Object.defineProperty(this, D, {
                        value: j
                    }), s = Object.freeze(s.slice());
                    let a = "view" === r || "pure" === r,
                        l = "payable" === r;
                    (0, n.defineProperties)(this, {
                        constant: a,
                        gas: o,
                        outputs: s,
                        payable: l,
                        stateMutability: r
                    })
                }
                get selector() {
                    return (0, i.id)(this.format("sighash")).substring(0, 10)
                }
                format(e) {
                    if (null == e && (e = "sighash"), "json" === e) return JSON.stringify({
                        type: "function",
                        name: this.name,
                        constant: this.constant,
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: null != this.gas ? this.gas : void 0,
                        inputs: this.inputs.map(t => JSON.parse(t.format(e))),
                        outputs: this.outputs.map(t => JSON.parse(t.format(e)))
                    });
                    let t = [];
                    return "sighash" !== e && t.push("function"), t.push(this.name + z(e, this.inputs)), "sighash" !== e && ("nonpayable" !== this.stateMutability && t.push(this.stateMutability), this.outputs && this.outputs.length && (t.push("returns"), t.push(z(e, this.outputs))), null != this.gas && t.push(`@${this.gas.toString()}`)), t.join(" ")
                }
                static getSelector(e, t) {
                    t = (t || []).map(e => H.from(e));
                    let r = new q(B, e, "view", t, [], null);
                    return r.selector
                }
                static from(e) {
                    if (q.isFragment(e)) return e;
                    if ("string" == typeof e) try {
                        return q.from(E(e))
                    } catch (t) {
                        (0, n.assertArgument)(!1, "invalid function fragment", "obj", e)
                    } else if (e instanceof v) {
                        let t = S("function", e),
                            r = C(e),
                            n = k(e),
                            i = [];
                        O(e, s(["returns"])).has("returns") && (i = C(e));
                        let o = x(e);
                        return T(e), new q(B, t, n, r, i, o)
                    }
                    let t = e.stateMutability;
                    return null != t || (t = "payable", "boolean" == typeof e.constant ? (t = "view", e.constant || (t = "payable", "boolean" != typeof e.payable || e.payable || (t = "nonpayable"))) : "boolean" != typeof e.payable || e.payable || (t = "nonpayable")), new q(B, e.name, t, e.inputs ? e.inputs.map(H.from) : [], e.outputs ? e.outputs.map(H.from) : [], null != e.gas ? e.gas : null)
                }
                static isFragment(e) {
                    return e && e[D] === j
                }
            }
            t.FunctionFragment = q;
            class Q extends K {
                constructor(e, t, r) {
                    super(e, "struct", t, r), Object.defineProperty(this, D, {
                        value: F
                    })
                }
                format() {
                    throw Error("@TODO")
                }
                static from(e) {
                    if ("string" == typeof e) try {
                        return Q.from(E(e))
                    } catch (t) {
                        (0, n.assertArgument)(!1, "invalid struct fragment", "obj", e)
                    } else if (e instanceof v) {
                        let t = S("struct", e),
                            r = C(e);
                        return T(e), new Q(B, t, r)
                    }
                    return new Q(B, e.name, e.inputs ? e.inputs.map(H.from) : [])
                }
                static isFragment(e) {
                    return e && e[D] === F
                }
            }
            t.StructFragment = Q
        },
        14403: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Typed = t.Result = t.TransactionDescription = t.LogDescription = t.ErrorDescription = t.Interface = t.Indexed = t.checkResultErrors = t.StructFragment = t.ParamType = t.NamedFragment = t.FunctionFragment = t.Fragment = t.FallbackFragment = t.EventFragment = t.ErrorFragment = t.ConstructorFragment = t.encodeBytes32String = t.decodeBytes32String = t.AbiCoder = void 0;
            var n = r(47501);
            Object.defineProperty(t, "AbiCoder", {
                enumerable: !0,
                get: function() {
                    return n.AbiCoder
                }
            });
            var i = r(8759);
            Object.defineProperty(t, "decodeBytes32String", {
                enumerable: !0,
                get: function() {
                    return i.decodeBytes32String
                }
            }), Object.defineProperty(t, "encodeBytes32String", {
                enumerable: !0,
                get: function() {
                    return i.encodeBytes32String
                }
            });
            var s = r(50169);
            Object.defineProperty(t, "ConstructorFragment", {
                enumerable: !0,
                get: function() {
                    return s.ConstructorFragment
                }
            }), Object.defineProperty(t, "ErrorFragment", {
                enumerable: !0,
                get: function() {
                    return s.ErrorFragment
                }
            }), Object.defineProperty(t, "EventFragment", {
                enumerable: !0,
                get: function() {
                    return s.EventFragment
                }
            }), Object.defineProperty(t, "FallbackFragment", {
                enumerable: !0,
                get: function() {
                    return s.FallbackFragment
                }
            }), Object.defineProperty(t, "Fragment", {
                enumerable: !0,
                get: function() {
                    return s.Fragment
                }
            }), Object.defineProperty(t, "FunctionFragment", {
                enumerable: !0,
                get: function() {
                    return s.FunctionFragment
                }
            }), Object.defineProperty(t, "NamedFragment", {
                enumerable: !0,
                get: function() {
                    return s.NamedFragment
                }
            }), Object.defineProperty(t, "ParamType", {
                enumerable: !0,
                get: function() {
                    return s.ParamType
                }
            }), Object.defineProperty(t, "StructFragment", {
                enumerable: !0,
                get: function() {
                    return s.StructFragment
                }
            });
            var o = r(57364);
            Object.defineProperty(t, "checkResultErrors", {
                enumerable: !0,
                get: function() {
                    return o.checkResultErrors
                }
            }), Object.defineProperty(t, "Indexed", {
                enumerable: !0,
                get: function() {
                    return o.Indexed
                }
            }), Object.defineProperty(t, "Interface", {
                enumerable: !0,
                get: function() {
                    return o.Interface
                }
            }), Object.defineProperty(t, "ErrorDescription", {
                enumerable: !0,
                get: function() {
                    return o.ErrorDescription
                }
            }), Object.defineProperty(t, "LogDescription", {
                enumerable: !0,
                get: function() {
                    return o.LogDescription
                }
            }), Object.defineProperty(t, "TransactionDescription", {
                enumerable: !0,
                get: function() {
                    return o.TransactionDescription
                }
            }), Object.defineProperty(t, "Result", {
                enumerable: !0,
                get: function() {
                    return o.Result
                }
            });
            var a = r(52301);
            Object.defineProperty(t, "Typed", {
                enumerable: !0,
                get: function() {
                    return a.Typed
                }
            })
        },
        57364: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Interface = t.Indexed = t.ErrorDescription = t.TransactionDescription = t.LogDescription = t.Result = t.checkResultErrors = void 0;
            let n = r(20021),
                i = r(94194),
                s = r(82678),
                o = r(47501),
                a = r(97573);
            Object.defineProperty(t, "checkResultErrors", {
                enumerable: !0,
                get: function() {
                    return a.checkResultErrors
                }
            }), Object.defineProperty(t, "Result", {
                enumerable: !0,
                get: function() {
                    return a.Result
                }
            });
            let l = r(50169),
                u = r(52301);
            class c {
                fragment;
                name;
                signature;
                topic;
                args;
                constructor(e, t, r) {
                    let n = e.name,
                        i = e.format();
                    (0, s.defineProperties)(this, {
                        fragment: e,
                        name: n,
                        signature: i,
                        topic: t,
                        args: r
                    })
                }
            }
            t.LogDescription = c;
            class d {
                fragment;
                name;
                args;
                signature;
                selector;
                value;
                constructor(e, t, r, n) {
                    let i = e.name,
                        o = e.format();
                    (0, s.defineProperties)(this, {
                        fragment: e,
                        name: i,
                        args: r,
                        signature: o,
                        selector: t,
                        value: n
                    })
                }
            }
            t.TransactionDescription = d;
            class h {
                fragment;
                name;
                args;
                signature;
                selector;
                constructor(e, t, r) {
                    let n = e.name,
                        i = e.format();
                    (0, s.defineProperties)(this, {
                        fragment: e,
                        name: n,
                        args: r,
                        signature: i,
                        selector: t
                    })
                }
            }
            t.ErrorDescription = h;
            class f {
                hash;
                _isIndexed;
                static isIndexed(e) {
                    return !!(e && e._isIndexed)
                }
                constructor(e) {
                    (0, s.defineProperties)(this, {
                        hash: e,
                        _isIndexed: !0
                    })
                }
            }
            t.Indexed = f;
            let p = {
                    0: "generic panic",
                    1: "assert(false)",
                    17: "arithmetic overflow",
                    18: "division or modulo by zero",
                    33: "enum overflow",
                    34: "invalid encoded storage byte array accessed",
                    49: "out-of-bounds array access; popping on an empty array",
                    50: "out-of-bounds access of an array or bytesN",
                    65: "out of memory",
                    81: "uninitialized function"
                },
                g = {
                    "0x08c379a0": {
                        signature: "Error(string)",
                        name: "Error",
                        inputs: ["string"],
                        reason: e => `reverted with reason string ${JSON.stringify(e)}`
                    },
                    "0x4e487b71": {
                        signature: "Panic(uint256)",
                        name: "Panic",
                        inputs: ["uint256"],
                        reason: e => {
                            let t = "unknown panic code";
                            return e >= 0 && e <= 255 && p[e.toString()] && (t = p[e.toString()]), `reverted with panic code 0x${e.toString(16)} (${t})`
                        }
                    }
                };
            class m {
                fragments;
                deploy;
                fallback;
                receive;#
                c;#
                d;#
                h;#
                f;
                constructor(e) {
                    let t = [];
                    t = "string" == typeof e ? JSON.parse(e) : e, this.#h = new Map, this.#c = new Map, this.#d = new Map;
                    let r = [];
                    for (let e of t) try {
                        r.push(l.Fragment.from(e))
                    } catch (e) {
                        console.log("EE", e)
                    }(0, s.defineProperties)(this, {
                        fragments: Object.freeze(r)
                    });
                    let n = null,
                        i = !1;
                    this.#f = this.getAbiCoder(), this.fragments.forEach((e, t) => {
                        let r;
                        switch (e.type) {
                            case "constructor":
                                if (this.deploy) {
                                    console.log("duplicate definition - constructor");
                                    return
                                }(0, s.defineProperties)(this, {
                                    deploy: e
                                });
                                return;
                            case "fallback":
                                0 === e.inputs.length ? i = !0 : ((0, s.assertArgument)(!n || e.payable !== n.payable, "conflicting fallback fragments", `fragments[${t}]`, e), i = (n = e).payable);
                                return;
                            case "function":
                                r = this.#h;
                                break;
                            case "event":
                                r = this.#d;
                                break;
                            case "error":
                                r = this.#c;
                                break;
                            default:
                                return
                        }
                        let o = e.format();
                        r.has(o) || r.set(o, e)
                    }), this.deploy || (0, s.defineProperties)(this, {
                        deploy: l.ConstructorFragment.from("constructor()")
                    }), (0, s.defineProperties)(this, {
                        fallback: n,
                        receive: i
                    })
                }
                format(e) {
                    let t = e ? "minimal" : "full",
                        r = this.fragments.map(e => e.format(t));
                    return r
                }
                formatJson() {
                    let e = this.fragments.map(e => e.format("json"));
                    return JSON.stringify(e.map(e => JSON.parse(e)))
                }
                getAbiCoder() {
                    return o.AbiCoder.defaultAbiCoder()
                }#
                p(e, t, r) {
                    if ((0, s.isHexString)(e)) {
                        let t = e.toLowerCase();
                        for (let e of this.#h.values())
                            if (t === e.selector) return e;
                        return null
                    }
                    if (-1 === e.indexOf("(")) {
                        let n = [];
                        for (let [t, r] of this.#h) t.split("(")[0] === e && n.push(r);
                        if (t) {
                            let e = t.length > 0 ? t[t.length - 1] : null,
                                r = t.length,
                                i = !0;
                            u.Typed.isTyped(e) && "overrides" === e.type && (i = !1, r--);
                            for (let e = n.length - 1; e >= 0; e--) {
                                let t = n[e].inputs.length;
                                t === r || i && t === r - 1 || n.splice(e, 1)
                            }
                            for (let e = n.length - 1; e >= 0; e--) {
                                let r = n[e].inputs;
                                for (let i = 0; i < t.length; i++)
                                    if (u.Typed.isTyped(t[i])) {
                                        if (i >= r.length) {
                                            if ("overrides" === t[i].type) continue;
                                            n.splice(e, 1);
                                            break
                                        }
                                        if (t[i].type !== r[i].baseType) {
                                            n.splice(e, 1);
                                            break
                                        }
                                    }
                            }
                        }
                        if (1 === n.length && t && t.length !== n[0].inputs.length) {
                            let e = t[t.length - 1];
                            (null == e || Array.isArray(e) || "object" != typeof e) && n.splice(0, 1)
                        }
                        if (0 === n.length) return null;
                        if (n.length > 1 && r) {
                            let t = n.map(e => JSON.stringify(e.format())).join(", ");
                            (0, s.assertArgument)(!1, `ambiguous function description (i.e. matches ${t})`, "key", e)
                        }
                        return n[0]
                    }
                    let n = this.#h.get(l.FunctionFragment.from(e).format());
                    return n || null
                }
                getFunctionName(e) {
                    let t = this.#p(e, null, !1);
                    return (0, s.assertArgument)(t, "no matching function", "key", e), t.name
                }
                hasFunction(e) {
                    return !!this.#p(e, null, !1)
                }
                getFunction(e, t) {
                    return this.#p(e, t || null, !0)
                }
                forEachFunction(e) {
                    let t = Array.from(this.#h.keys());
                    t.sort((e, t) => e.localeCompare(t));
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e(this.#h.get(n), r)
                    }
                }#
                g(e, t, r) {
                    if ((0, s.isHexString)(e)) {
                        let t = e.toLowerCase();
                        for (let e of this.#d.values())
                            if (t === e.topicHash) return e;
                        return null
                    }
                    if (-1 === e.indexOf("(")) {
                        let n = [];
                        for (let [t, r] of this.#d) t.split("(")[0] === e && n.push(r);
                        if (t) {
                            for (let e = n.length - 1; e >= 0; e--) n[e].inputs.length < t.length && n.splice(e, 1);
                            for (let e = n.length - 1; e >= 0; e--) {
                                let r = n[e].inputs;
                                for (let i = 0; i < t.length; i++)
                                    if (u.Typed.isTyped(t[i]) && t[i].type !== r[i].baseType) {
                                        n.splice(e, 1);
                                        break
                                    }
                            }
                        }
                        if (0 === n.length) return null;
                        if (n.length > 1 && r) {
                            let t = n.map(e => JSON.stringify(e.format())).join(", ");
                            (0, s.assertArgument)(!1, `ambiguous event description (i.e. matches ${t})`, "key", e)
                        }
                        return n[0]
                    }
                    let n = this.#d.get(l.EventFragment.from(e).format());
                    return n || null
                }
                getEventName(e) {
                    let t = this.#g(e, null, !1);
                    return (0, s.assertArgument)(t, "no matching event", "key", e), t.name
                }
                hasEvent(e) {
                    return !!this.#g(e, null, !1)
                }
                getEvent(e, t) {
                    return this.#g(e, t || null, !0)
                }
                forEachEvent(e) {
                    let t = Array.from(this.#d.keys());
                    t.sort((e, t) => e.localeCompare(t));
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e(this.#d.get(n), r)
                    }
                }
                getError(e, t) {
                    if ((0, s.isHexString)(e)) {
                        let t = e.toLowerCase();
                        if (g[t]) return l.ErrorFragment.from(g[t].signature);
                        for (let e of this.#c.values())
                            if (t === e.selector) return e;
                        return null
                    }
                    if (-1 === e.indexOf("(")) {
                        let t = [];
                        for (let [r, n] of this.#c) r.split("(")[0] === e && t.push(n);
                        if (0 === t.length) return "Error" === e ? l.ErrorFragment.from("error Error(string)") : "Panic" === e ? l.ErrorFragment.from("error Panic(uint256)") : null;
                        if (t.length > 1) {
                            let r = t.map(e => JSON.stringify(e.format())).join(", ");
                            (0, s.assertArgument)(!1, `ambiguous error description (i.e. ${r})`, "name", e)
                        }
                        return t[0]
                    }
                    if ("Error(string)" === (e = l.ErrorFragment.from(e).format())) return l.ErrorFragment.from("error Error(string)");
                    if ("Panic(uint256)" === e) return l.ErrorFragment.from("error Panic(uint256)");
                    let r = this.#c.get(e);
                    return r || null
                }
                forEachError(e) {
                    let t = Array.from(this.#c.keys());
                    t.sort((e, t) => e.localeCompare(t));
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e(this.#c.get(n), r)
                    }
                }
                _decodeParams(e, t) {
                    return this.#f.decode(e, t)
                }
                _encodeParams(e, t) {
                    return this.#f.encode(e, t)
                }
                encodeDeploy(e) {
                    return this._encodeParams(this.deploy.inputs, e || [])
                }
                decodeErrorResult(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getError(e);
                        (0, s.assertArgument)(t, "unknown error", "fragment", e), e = t
                    }
                    return (0, s.assertArgument)((0, s.dataSlice)(t, 0, 4) === e.selector, `data signature does not match error ${e.name}.`, "data", t), this._decodeParams(e.inputs, (0, s.dataSlice)(t, 4))
                }
                encodeErrorResult(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getError(e);
                        (0, s.assertArgument)(t, "unknown error", "fragment", e), e = t
                    }
                    return (0, s.concat)([e.selector, this._encodeParams(e.inputs, t || [])])
                }
                decodeFunctionData(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getFunction(e);
                        (0, s.assertArgument)(t, "unknown function", "fragment", e), e = t
                    }
                    return (0, s.assertArgument)((0, s.dataSlice)(t, 0, 4) === e.selector, `data signature does not match function ${e.name}.`, "data", t), this._decodeParams(e.inputs, (0, s.dataSlice)(t, 4))
                }
                encodeFunctionData(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getFunction(e);
                        (0, s.assertArgument)(t, "unknown function", "fragment", e), e = t
                    }
                    return (0, s.concat)([e.selector, this._encodeParams(e.inputs, t || [])])
                }
                decodeFunctionResult(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getFunction(e);
                        (0, s.assertArgument)(t, "unknown function", "fragment", e), e = t
                    }
                    let r = "invalid length for result data",
                        n = (0, s.getBytesCopy)(t);
                    if (n.length % 32 == 0) try {
                        return this.#f.decode(e.outputs, n)
                    } catch (e) {
                        r = "could not decode result data"
                    }(0, s.assert)(!1, r, "BAD_DATA", {
                        value: (0, s.hexlify)(n),
                        info: {
                            method: e.name,
                            signature: e.format()
                        }
                    })
                }
                makeError(e, t) {
                    let r = (0, s.getBytes)(e, "data"),
                        n = o.AbiCoder.getBuiltinCallException("call", t, r);
                    if (n.message.startsWith("execution reverted (unknown custom error)")) {
                        let e = (0, s.hexlify)(r.slice(0, 4)),
                            t = this.getError(e);
                        if (t) try {
                            let e = this.#f.decode(t.inputs, r.slice(4));
                            n.revert = {
                                name: t.name,
                                signature: t.format(),
                                args: e
                            }, n.reason = n.revert.signature, n.message = `execution reverted: ${n.reason}`
                        } catch (e) {
                            n.message = "execution reverted (coult not decode custom error)"
                        }
                    }
                    let i = this.parseTransaction(t);
                    return i && (n.invocation = {
                        method: i.name,
                        signature: i.signature,
                        args: i.args
                    }), n
                }
                encodeFunctionResult(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getFunction(e);
                        (0, s.assertArgument)(t, "unknown function", "fragment", e), e = t
                    }
                    return (0, s.hexlify)(this.#f.encode(e.outputs, t || []))
                }
                encodeFilterTopics(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getEvent(e);
                        (0, s.assertArgument)(t, "unknown event", "eventFragment", e), e = t
                    }(0, s.assert)(t.length <= e.inputs.length, `too many arguments for ${e.format()}`, "UNEXPECTED_ARGUMENT", {
                        count: t.length,
                        expectedCount: e.inputs.length
                    });
                    let r = [];
                    e.anonymous || r.push(e.topicHash);
                    let o = (e, t) => "string" === e.type ? (0, i.id)(t) : "bytes" === e.type ? (0, n.keccak256)((0, s.hexlify)(t)) : ("bool" === e.type && "boolean" == typeof t ? t = t ? "0x01" : "0x00" : e.type.match(/^u?int/) ? t = (0, s.toBeHex)(t) : e.type.match(/^bytes/) ? t = (0, s.zeroPadBytes)(t, 32) : "address" === e.type && this.#f.encode(["address"], [t]), (0, s.zeroPadValue)((0, s.hexlify)(t), 32));
                    for (t.forEach((t, n) => {
                            let i = e.inputs[n];
                            if (!i.indexed) {
                                (0, s.assertArgument)(null == t, "cannot filter non-indexed parameters; must be null", "contract." + i.name, t);
                                return
                            }
                            null == t ? r.push(null) : "array" === i.baseType || "tuple" === i.baseType ? (0, s.assertArgument)(!1, "filtering with tuples or arrays not supported", "contract." + i.name, t) : Array.isArray(t) ? r.push(t.map(e => o(i, e))) : r.push(o(i, t))
                        }); r.length && null === r[r.length - 1];) r.pop();
                    return r
                }
                encodeEventLog(e, t) {
                    if ("string" == typeof e) {
                        let t = this.getEvent(e);
                        (0, s.assertArgument)(t, "unknown event", "eventFragment", e), e = t
                    }
                    let r = [],
                        o = [],
                        a = [];
                    return e.anonymous || r.push(e.topicHash), (0, s.assertArgument)(t.length === e.inputs.length, "event arguments/values mismatch", "values", t), e.inputs.forEach((e, s) => {
                        let l = t[s];
                        if (e.indexed) {
                            if ("string" === e.type) r.push((0, i.id)(l));
                            else if ("bytes" === e.type) r.push((0, n.keccak256)(l));
                            else if ("tuple" === e.baseType || "array" === e.baseType) throw Error("not implemented");
                            else r.push(this.#f.encode([e.type], [l]))
                        } else o.push(e), a.push(l)
                    }), {
                        data: this.#f.encode(o, a),
                        topics: r
                    }
                }
                decodeEventLog(e, t, r) {
                    if ("string" == typeof e) {
                        let t = this.getEvent(e);
                        (0, s.assertArgument)(t, "unknown event", "eventFragment", e), e = t
                    }
                    if (null != r && !e.anonymous) {
                        let t = e.topicHash;
                        (0, s.assertArgument)((0, s.isHexString)(r[0], 32) && r[0].toLowerCase() === t, "fragment/topic mismatch", "topics[0]", r[0]), r = r.slice(1)
                    }
                    let n = [],
                        i = [],
                        o = [];
                    e.inputs.forEach((e, t) => {
                        e.indexed ? "string" === e.type || "bytes" === e.type || "tuple" === e.baseType || "array" === e.baseType ? (n.push(l.ParamType.from({
                            type: "bytes32",
                            name: e.name
                        })), o.push(!0)) : (n.push(e), o.push(!1)) : (i.push(e), o.push(!1))
                    });
                    let u = null != r ? this.#f.decode(n, (0, s.concat)(r)) : null,
                        c = this.#f.decode(i, t, !0),
                        d = [],
                        h = [],
                        p = 0,
                        g = 0;
                    return e.inputs.forEach((e, t) => {
                        let r = null;
                        if (e.indexed) {
                            if (null == u) r = new f(null);
                            else if (o[t]) r = new f(u[g++]);
                            else try {
                                r = u[g++]
                            } catch (e) {
                                r = e
                            }
                        } else try {
                            r = c[p++]
                        } catch (e) {
                            r = e
                        }
                        d.push(r), h.push(e.name || null)
                    }), a.Result.fromItems(d, h)
                }
                parseTransaction(e) {
                    let t = (0, s.getBytes)(e.data, "tx.data"),
                        r = (0, s.getBigInt)(null != e.value ? e.value : 0, "tx.value"),
                        n = this.getFunction((0, s.hexlify)(t.slice(0, 4)));
                    if (!n) return null;
                    let i = this.#f.decode(n.inputs, t.slice(4));
                    return new d(n, n.selector, i, r)
                }
                parseCallResult(e) {
                    throw Error("@TODO")
                }
                parseLog(e) {
                    let t = this.getEvent(e.topics[0]);
                    return !t || t.anonymous ? null : new c(t, t.topicHash, this.decodeEventLog(t, e.data, e.topics))
                }
                parseError(e) {
                    let t = (0, s.hexlify)(e),
                        r = this.getError((0, s.dataSlice)(t, 0, 4));
                    if (!r) return null;
                    let n = this.#f.decode(r.inputs, (0, s.dataSlice)(t, 4));
                    return new h(r, r.selector, n)
                }
                static from(e) {
                    return e instanceof m ? e : new m("string" == typeof e ? JSON.parse(e) : "function" == typeof e.format ? e.format("json") : e)
                }
            }
            t.Interface = m
        },
        52301: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Typed = void 0;
            let n = r(82678),
                i = {};

            function s(e, t) {
                let r = !1;
                return t < 0 && (r = !0, t *= -1), new l(i, `${r?"":"u"}int${t}`, e, {
                    signed: r,
                    width: t
                })
            }

            function o(e, t) {
                return new l(i, `bytes${t||""}`, e, {
                    size: t
                })
            }
            let a = Symbol.for("_ethers_typed");
            class l {
                type;
                value;#
                m;
                _typedSymbol;
                constructor(e, t, r, s) {
                    null == s && (s = null), (0, n.assertPrivate)(i, e, "Typed"), (0, n.defineProperties)(this, {
                        _typedSymbol: a,
                        type: t,
                        value: r
                    }), this.#m = s, this.format()
                }
                format() {
                    if ("array" === this.type || "dynamicArray" === this.type) throw Error("");
                    return "tuple" === this.type ? `tuple(${this.value.map(e=>e.format()).join(",")})` : this.type
                }
                defaultValue() {
                    return 0
                }
                minValue() {
                    return 0
                }
                maxValue() {
                    return 0
                }
                isBigInt() {
                    return !!this.type.match(/^u?int[0-9]+$/)
                }
                isData() {
                    return this.type.startsWith("bytes")
                }
                isString() {
                    return "string" === this.type
                }
                get tupleName() {
                    if ("tuple" !== this.type) throw TypeError("not a tuple");
                    return this.#m
                }
                get arrayLength() {
                    if ("array" !== this.type) throw TypeError("not an array");
                    return !0 === this.#m ? -1 : !1 === this.#m ? this.value.length : null
                }
                static from(e, t) {
                    return new l(i, e, t)
                }
                static uint8(e) {
                    return s(e, 8)
                }
                static uint16(e) {
                    return s(e, 16)
                }
                static uint24(e) {
                    return s(e, 24)
                }
                static uint32(e) {
                    return s(e, 32)
                }
                static uint40(e) {
                    return s(e, 40)
                }
                static uint48(e) {
                    return s(e, 48)
                }
                static uint56(e) {
                    return s(e, 56)
                }
                static uint64(e) {
                    return s(e, 64)
                }
                static uint72(e) {
                    return s(e, 72)
                }
                static uint80(e) {
                    return s(e, 80)
                }
                static uint88(e) {
                    return s(e, 88)
                }
                static uint96(e) {
                    return s(e, 96)
                }
                static uint104(e) {
                    return s(e, 104)
                }
                static uint112(e) {
                    return s(e, 112)
                }
                static uint120(e) {
                    return s(e, 120)
                }
                static uint128(e) {
                    return s(e, 128)
                }
                static uint136(e) {
                    return s(e, 136)
                }
                static uint144(e) {
                    return s(e, 144)
                }
                static uint152(e) {
                    return s(e, 152)
                }
                static uint160(e) {
                    return s(e, 160)
                }
                static uint168(e) {
                    return s(e, 168)
                }
                static uint176(e) {
                    return s(e, 176)
                }
                static uint184(e) {
                    return s(e, 184)
                }
                static uint192(e) {
                    return s(e, 192)
                }
                static uint200(e) {
                    return s(e, 200)
                }
                static uint208(e) {
                    return s(e, 208)
                }
                static uint216(e) {
                    return s(e, 216)
                }
                static uint224(e) {
                    return s(e, 224)
                }
                static uint232(e) {
                    return s(e, 232)
                }
                static uint240(e) {
                    return s(e, 240)
                }
                static uint248(e) {
                    return s(e, 248)
                }
                static uint256(e) {
                    return s(e, 256)
                }
                static uint(e) {
                    return s(e, 256)
                }
                static int8(e) {
                    return s(e, -8)
                }
                static int16(e) {
                    return s(e, -16)
                }
                static int24(e) {
                    return s(e, -24)
                }
                static int32(e) {
                    return s(e, -32)
                }
                static int40(e) {
                    return s(e, -40)
                }
                static int48(e) {
                    return s(e, -48)
                }
                static int56(e) {
                    return s(e, -56)
                }
                static int64(e) {
                    return s(e, -64)
                }
                static int72(e) {
                    return s(e, -72)
                }
                static int80(e) {
                    return s(e, -80)
                }
                static int88(e) {
                    return s(e, -88)
                }
                static int96(e) {
                    return s(e, -96)
                }
                static int104(e) {
                    return s(e, -104)
                }
                static int112(e) {
                    return s(e, -112)
                }
                static int120(e) {
                    return s(e, -120)
                }
                static int128(e) {
                    return s(e, -128)
                }
                static int136(e) {
                    return s(e, -136)
                }
                static int144(e) {
                    return s(e, -144)
                }
                static int152(e) {
                    return s(e, -152)
                }
                static int160(e) {
                    return s(e, -160)
                }
                static int168(e) {
                    return s(e, -168)
                }
                static int176(e) {
                    return s(e, -176)
                }
                static int184(e) {
                    return s(e, -184)
                }
                static int192(e) {
                    return s(e, -192)
                }
                static int200(e) {
                    return s(e, -200)
                }
                static int208(e) {
                    return s(e, -208)
                }
                static int216(e) {
                    return s(e, -216)
                }
                static int224(e) {
                    return s(e, -224)
                }
                static int232(e) {
                    return s(e, -232)
                }
                static int240(e) {
                    return s(e, -240)
                }
                static int248(e) {
                    return s(e, -248)
                }
                static int256(e) {
                    return s(e, -256)
                }
                static int(e) {
                    return s(e, -256)
                }
                static bytes1(e) {
                    return o(e, 1)
                }
                static bytes2(e) {
                    return o(e, 2)
                }
                static bytes3(e) {
                    return o(e, 3)
                }
                static bytes4(e) {
                    return o(e, 4)
                }
                static bytes5(e) {
                    return o(e, 5)
                }
                static bytes6(e) {
                    return o(e, 6)
                }
                static bytes7(e) {
                    return o(e, 7)
                }
                static bytes8(e) {
                    return o(e, 8)
                }
                static bytes9(e) {
                    return o(e, 9)
                }
                static bytes10(e) {
                    return o(e, 10)
                }
                static bytes11(e) {
                    return o(e, 11)
                }
                static bytes12(e) {
                    return o(e, 12)
                }
                static bytes13(e) {
                    return o(e, 13)
                }
                static bytes14(e) {
                    return o(e, 14)
                }
                static bytes15(e) {
                    return o(e, 15)
                }
                static bytes16(e) {
                    return o(e, 16)
                }
                static bytes17(e) {
                    return o(e, 17)
                }
                static bytes18(e) {
                    return o(e, 18)
                }
                static bytes19(e) {
                    return o(e, 19)
                }
                static bytes20(e) {
                    return o(e, 20)
                }
                static bytes21(e) {
                    return o(e, 21)
                }
                static bytes22(e) {
                    return o(e, 22)
                }
                static bytes23(e) {
                    return o(e, 23)
                }
                static bytes24(e) {
                    return o(e, 24)
                }
                static bytes25(e) {
                    return o(e, 25)
                }
                static bytes26(e) {
                    return o(e, 26)
                }
                static bytes27(e) {
                    return o(e, 27)
                }
                static bytes28(e) {
                    return o(e, 28)
                }
                static bytes29(e) {
                    return o(e, 29)
                }
                static bytes30(e) {
                    return o(e, 30)
                }
                static bytes31(e) {
                    return o(e, 31)
                }
                static bytes32(e) {
                    return o(e, 32)
                }
                static address(e) {
                    return new l(i, "address", e)
                }
                static bool(e) {
                    return new l(i, "bool", !!e)
                }
                static bytes(e) {
                    return new l(i, "bytes", e)
                }
                static string(e) {
                    return new l(i, "string", e)
                }
                static array(e, t) {
                    throw Error("not implemented yet")
                }
                static tuple(e, t) {
                    throw Error("not implemented yet")
                }
                static overrides(e) {
                    return new l(i, "overrides", Object.assign({}, e))
                }
                static isTyped(e) {
                    return e && "object" == typeof e && "_typedSymbol" in e && e._typedSymbol === a
                }
                static dereference(e, t) {
                    if (l.isTyped(e)) {
                        if (e.type !== t) throw Error(`invalid type: expecetd ${t}, got ${e.type}`);
                        return e.value
                    }
                    return e
                }
            }
            t.Typed = l
        },
        24801: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getIcapAddress = t.getAddress = void 0;
            let n = r(20021),
                i = r(82678),
                s = BigInt(0),
                o = BigInt(36);

            function a(e) {
                e = e.toLowerCase();
                let t = e.substring(2).split(""),
                    r = new Uint8Array(40);
                for (let e = 0; e < 40; e++) r[e] = t[e].charCodeAt(0);
                let s = (0, i.getBytes)((0, n.keccak256)(r));
                for (let e = 0; e < 40; e += 2) s[e >> 1] >> 4 >= 8 && (t[e] = t[e].toUpperCase()), (15 & s[e >> 1]) >= 8 && (t[e + 1] = t[e + 1].toUpperCase());
                return "0x" + t.join("")
            }
            let l = {};
            for (let e = 0; e < 10; e++) l[String(e)] = String(e);
            for (let e = 0; e < 26; e++) l[String.fromCharCode(65 + e)] = String(10 + e);

            function u(e) {
                let t = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map(e => l[e]).join("");
                for (; t.length >= 15;) {
                    let e = t.substring(0, 15);
                    t = parseInt(e, 10) % 97 + t.substring(e.length)
                }
                let r = String(98 - parseInt(t, 10) % 97);
                for (; r.length < 2;) r = "0" + r;
                return r
            }
            let c = function() {
                let e = {};
                for (let t = 0; t < 36; t++) {
                    let r = "0123456789abcdefghijklmnopqrstuvwxyz" [t];
                    e[r] = BigInt(t)
                }
                return e
            }();

            function d(e) {
                if ((0, i.assertArgument)("string" == typeof e, "invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
                    e.startsWith("0x") || (e = "0x" + e);
                    let t = a(e);
                    return (0, i.assertArgument)(!e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || t === e, "bad address checksum", "address", e), t
                }
                if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    (0, i.assertArgument)(e.substring(2, 4) === u(e), "bad icap checksum", "address", e);
                    let t = (function(e) {
                        e = e.toLowerCase();
                        let t = s;
                        for (let r = 0; r < e.length; r++) t = t * o + c[e[r]];
                        return t
                    })(e.substring(4)).toString(16);
                    for (; t.length < 40;) t = "0" + t;
                    return a("0x" + t)
                }(0, i.assertArgument)(!1, "invalid address", "address", e)
            }
            t.getAddress = d, t.getIcapAddress = function(e) {
                let t = BigInt(d(e)).toString(36).toUpperCase();
                for (; t.length < 30;) t = "0" + t;
                return "XE" + u("XE00" + t) + t
            }
        },
        76299: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.resolveAddress = t.isAddress = t.isAddressable = void 0;
            let n = r(82678),
                i = r(24801);

            function s(e) {
                return e && "function" == typeof e.getAddress
            }
            async function o(e, t) {
                let r = await t;
                return (null == r || "0x0000000000000000000000000000000000000000" === r) && ((0, n.assert)("string" != typeof e, "unconfigured name", "UNCONFIGURED_NAME", {
                    value: e
                }), (0, n.assertArgument)(!1, "invalid AddressLike value; did not resolve to a value address", "target", e)), (0, i.getAddress)(r)
            }
            t.isAddressable = s, t.isAddress = function(e) {
                try {
                    return (0, i.getAddress)(e), !0
                } catch (e) {}
                return !1
            }, t.resolveAddress = function(e, t) {
                return "string" == typeof e ? e.match(/^0x[0-9a-f]{40}$/i) ? (0, i.getAddress)(e) : ((0, n.assert)(null != t, "ENS resolution requires a provider", "UNSUPPORTED_OPERATION", {
                    operation: "resolveName"
                }), o(e, t.resolveName(e))) : s(e) ? o(e, e.getAddress()) : e && "function" == typeof e.then ? o(e, e) : void(0, n.assertArgument)(!1, "unsupported addressable value", "target", e)
            }
        },
        73366: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCreate2Address = t.getCreateAddress = void 0;
            let n = r(20021),
                i = r(82678),
                s = r(24801);
            t.getCreateAddress = function(e) {
                let t = (0, s.getAddress)(e.from),
                    r = (0, i.getBigInt)(e.nonce, "tx.nonce"),
                    o = r.toString(16);
                return o = "0" === o ? "0x" : o.length % 2 ? "0x0" + o : "0x" + o, (0, s.getAddress)((0, i.dataSlice)((0, n.keccak256)((0, i.encodeRlp)([t, o])), 12))
            }, t.getCreate2Address = function(e, t, r) {
                let o = (0, s.getAddress)(e),
                    a = (0, i.getBytes)(t, "salt"),
                    l = (0, i.getBytes)(r, "initCodeHash");
                return (0, i.assertArgument)(32 === a.length, "salt must be 32 bytes", "salt", t), (0, i.assertArgument)(32 === l.length, "initCodeHash must be 32 bytes", "initCodeHash", r), (0, s.getAddress)((0, i.dataSlice)((0, n.keccak256)((0, i.concat)(["0xff", o, a, l])), 12))
            }
        },
        29527: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.resolveAddress = t.isAddress = t.isAddressable = t.getCreate2Address = t.getCreateAddress = t.getIcapAddress = t.getAddress = void 0;
            var n = r(24801);
            Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return n.getAddress
                }
            }), Object.defineProperty(t, "getIcapAddress", {
                enumerable: !0,
                get: function() {
                    return n.getIcapAddress
                }
            });
            var i = r(73366);
            Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return i.getCreateAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return i.getCreate2Address
                }
            });
            var s = r(76299);
            Object.defineProperty(t, "isAddressable", {
                enumerable: !0,
                get: function() {
                    return s.isAddressable
                }
            }), Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return s.isAddress
                }
            }), Object.defineProperty(t, "resolveAddress", {
                enumerable: !0,
                get: function() {
                    return s.resolveAddress
                }
            })
        },
        2766: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ZeroAddress = void 0, t.ZeroAddress = "0x0000000000000000000000000000000000000000"
        },
        36718: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ZeroHash = void 0, t.ZeroHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        86872: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MessagePrefix = t.EtherSymbol = t.MaxInt256 = t.MinInt256 = t.MaxUint256 = t.WeiPerEther = t.N = t.ZeroHash = t.ZeroAddress = void 0;
            var n = r(2766);
            Object.defineProperty(t, "ZeroAddress", {
                enumerable: !0,
                get: function() {
                    return n.ZeroAddress
                }
            });
            var i = r(36718);
            Object.defineProperty(t, "ZeroHash", {
                enumerable: !0,
                get: function() {
                    return i.ZeroHash
                }
            });
            var s = r(62699);
            Object.defineProperty(t, "N", {
                enumerable: !0,
                get: function() {
                    return s.N
                }
            }), Object.defineProperty(t, "WeiPerEther", {
                enumerable: !0,
                get: function() {
                    return s.WeiPerEther
                }
            }), Object.defineProperty(t, "MaxUint256", {
                enumerable: !0,
                get: function() {
                    return s.MaxUint256
                }
            }), Object.defineProperty(t, "MinInt256", {
                enumerable: !0,
                get: function() {
                    return s.MinInt256
                }
            }), Object.defineProperty(t, "MaxInt256", {
                enumerable: !0,
                get: function() {
                    return s.MaxInt256
                }
            });
            var o = r(82507);
            Object.defineProperty(t, "EtherSymbol", {
                enumerable: !0,
                get: function() {
                    return o.EtherSymbol
                }
            }), Object.defineProperty(t, "MessagePrefix", {
                enumerable: !0,
                get: function() {
                    return o.MessagePrefix
                }
            })
        },
        62699: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MaxInt256 = t.MinInt256 = t.MaxUint256 = t.WeiPerEther = t.N = void 0, t.N = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), t.WeiPerEther = BigInt("1000000000000000000"), t.MaxUint256 = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), t.MinInt256 = BigInt("0x8000000000000000000000000000000000000000000000000000000000000000") * BigInt(-1), t.MaxInt256 = BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
        },
        82507: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MessagePrefix = t.EtherSymbol = void 0, t.EtherSymbol = "Ξ", t.MessagePrefix = "\x19Ethereum Signed Message:\n"
        },
        98065: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Contract = t.BaseContract = t.resolveArgs = t.copyOverrides = void 0;
            let n = r(14403),
                i = r(29527),
                s = r(16203),
                o = r(82678),
                a = r(87517),
                l = BigInt(0);

            function u(e) {
                return e && "function" == typeof e.call
            }

            function c(e) {
                return e && "function" == typeof e.estimateGas
            }

            function d(e) {
                return e && "function" == typeof e.resolveName
            }

            function h(e) {
                return e && "function" == typeof e.sendTransaction
            }
            class f {#
                y;
                fragment;
                constructor(e, t, r) {
                    if ((0, o.defineProperties)(this, {
                            fragment: t
                        }), t.inputs.length < r.length) throw Error("too many arguments");
                    let n = p(e.runner, "resolveName"),
                        s = d(n) ? n : null;
                    this.#y = async function() {
                        let n = await Promise.all(t.inputs.map((e, t) => {
                            let n = r[t];
                            return null == n ? null : e.walkAsync(r[t], (e, t) => "address" === e ? Array.isArray(t) ? Promise.all(t.map(e => (0, i.resolveAddress)(e, s))) : (0, i.resolveAddress)(t, s) : t)
                        }));
                        return e.interface.encodeFilterTopics(t, n)
                    }()
                }
                getTopicFilter() {
                    return this.#y
                }
            }

            function p(e, t) {
                return null == e ? null : "function" == typeof e[t] ? e : e.provider && "function" == typeof e.provider[t] ? e.provider : null
            }

            function g(e) {
                return null == e ? null : e.provider || null
            }
            async function m(e, t) {
                let r = n.Typed.dereference(e, "overrides");
                (0, o.assertArgument)("object" == typeof r, "invalid overrides parameter", "overrides", e);
                let a = (0, s.copyRequest)(r);
                return (0, o.assertArgument)(null == a.to || (t || []).indexOf("to") >= 0, "cannot override to", "overrides.to", a.to), (0, o.assertArgument)(null == a.data || (t || []).indexOf("data") >= 0, "cannot override data", "overrides.data", a.data), a.from && (a.from = await (0, i.resolveAddress)(a.from)), a
            }
            async function y(e, t, r) {
                let s = p(e, "resolveName"),
                    o = d(s) ? s : null;
                return await Promise.all(t.map((e, t) => e.walkAsync(r[t], (e, t) => (t = n.Typed.dereference(t, e), "address" === e) ? (0, i.resolveAddress)(t, o) : t)))
            }
            t.copyOverrides = m, t.resolveArgs = y;
            let b = Symbol.for("_ethersInternal_contract"),
                w = new WeakMap;

            function A(e) {
                return w.get(e[b])
            }
            async function v(e, t) {
                let r;
                let n = null;
                if (Array.isArray(t)) {
                    let n = function(t) {
                        if ((0, o.isHexString)(t, 32)) return t;
                        let r = e.interface.getEvent(t);
                        return (0, o.assertArgument)(r, "unknown fragment", "name", t), r.topicHash
                    };
                    r = t.map(e => null == e ? null : Array.isArray(e) ? e.map(n) : n(e))
                } else "*" === t ? r = [null] : "string" == typeof t ? (0, o.isHexString)(t, 32) ? r = [t] : (n = e.interface.getEvent(t), (0, o.assertArgument)(n, "unknown fragment", "event", t), r = [n.topicHash]) : t && "object" == typeof t && "getTopicFilter" in t && "function" == typeof t.getTopicFilter && t.fragment ? r = await t.getTopicFilter() : "fragment" in t ? r = [(n = t.fragment).topicHash] : (0, o.assertArgument)(!1, "unknown event name", "event", t);
                r = r.map(e => {
                    if (null == e) return null;
                    if (Array.isArray(e)) {
                        let t = Array.from(new Set(e.map(e => e.toLowerCase())).values());
                        return 1 === t.length ? t[0] : (t.sort(), t)
                    }
                    return e.toLowerCase()
                });
                let i = r.map(e => null == e ? "null" : Array.isArray(e) ? e.join("|") : e).join("&");
                return {
                    fragment: n,
                    tag: i,
                    topics: r
                }
            }
            async function E(e, t) {
                let {
                    subs: r
                } = A(e);
                return r.get((await v(e, t)).tag) || null
            }
            async function P(e, t, r) {
                let n = g(e.runner);
                (0, o.assert)(n, "contract runner does not support subscribing", "UNSUPPORTED_OPERATION", {
                    operation: t
                });
                let {
                    fragment: i,
                    tag: s,
                    topics: l
                } = await v(e, r), {
                    addr: u,
                    subs: c
                } = A(e), d = c.get(s);
                if (!d) {
                    let t = u || e,
                        o = {
                            address: t,
                            topics: l
                        },
                        h = t => {
                            let n = i;
                            if (null == n) try {
                                n = e.interface.getEvent(t.topics[0])
                            } catch (e) {}
                            if (n) {
                                let s = n,
                                    o = i ? e.interface.decodeEventLog(i, t.data, t.topics) : [];
                                k(e, r, o, n => new a.ContractEventPayload(e, n, r, s, t))
                            } else k(e, r, [], n => new a.ContractUnknownEventPayload(e, n, r, t))
                        },
                        f = [],
                        p = async () => {
                            if (0 == f.length) return;
                            let e = f;
                            f = [], await Promise.all(e), n.off(o, h)
                        };
                    d = {
                        tag: s,
                        listeners: [],
                        start: () => {
                            f.length || f.push(n.on(o, h))
                        },
                        stop: p
                    }, c.set(s, d)
                }
                return d
            }
            let S = Promise.resolve();
            async function O(e, t, r, n) {
                await S;
                let i = await E(e, t);
                if (!i) return !1;
                let s = i.listeners.length;
                return i.listeners = i.listeners.filter(({
                    listener: t,
                    once: i
                }) => {
                    let s = Array.from(r);
                    n && s.push(n(i ? null : t));
                    try {
                        t.call(e, ...s)
                    } catch (e) {}
                    return !i
                }), 0 === i.listeners.length && (i.stop(), A(e).subs.delete(i.tag)), s > 0
            }
            async function k(e, t, r, n) {
                try {
                    await S
                } catch (e) {}
                let i = O(e, t, r, n);
                return S = i, await i
            }
            let C = ["then"];
            class x {
                target;
                interface;
                runner;
                filters;
                [b];
                fallback;
                constructor(e, t, r, s) {
                    var f;
                    let y;
                    (0, o.assertArgument)("string" == typeof e || (0, i.isAddressable)(e), "invalid value for Contract target", "target", e), null == r && (r = null);
                    let v = n.Interface.from(t);
                    (0, o.defineProperties)(this, {
                        target: e,
                        runner: r,
                        interface: v
                    }), Object.defineProperty(this, b, {
                        value: {}
                    });
                    let E = null,
                        P = null;
                    if (s) {
                        let e = g(r);
                        P = new a.ContractTransactionResponse(this.interface, e, s)
                    }
                    let S = new Map;
                    if ("string" == typeof e) {
                        if ((0, o.isHexString)(e)) E = e, y = Promise.resolve(e);
                        else {
                            let t = p(r, "resolveName");
                            if (!d(t)) throw (0, o.makeError)("contract runner does not support name resolution", "UNSUPPORTED_OPERATION", {
                                operation: "resolveName"
                            });
                            y = t.resolveName(e).then(t => {
                                if (null == t) throw (0, o.makeError)("an ENS name used for a contract target must be correctly configured", "UNCONFIGURED_NAME", {
                                    value: e
                                });
                                return A(this).addr = t, t
                            })
                        }
                    } else y = e.getAddress().then(e => {
                        if (null == e) throw Error("TODO");
                        return A(this).addr = e, e
                    });
                    f = {
                        addrPromise: y,
                        addr: E,
                        deployTx: P,
                        subs: S
                    }, w.set(this[b], f);
                    let O = new Proxy({}, {
                        get: (e, t, r) => {
                            if ("symbol" == typeof t || C.indexOf(t) >= 0) return Reflect.get(e, t, r);
                            try {
                                return this.getEvent(t)
                            } catch (e) {
                                if (!(0, o.isError)(e, "INVALID_ARGUMENT") || "key" !== e.argument) throw e
                            }
                        },
                        has: (e, t) => C.indexOf(t) >= 0 ? Reflect.has(e, t) : Reflect.has(e, t) || this.interface.hasEvent(String(t))
                    });
                    return (0, o.defineProperties)(this, {
                        filters: O
                    }), (0, o.defineProperties)(this, {
                        fallback: v.receive || v.fallback ? function(e) {
                            let t = async function(t) {
                                    let r = await m(t, ["data"]);
                                    r.to = await e.getAddress();
                                    let n = e.interface,
                                        i = (0, o.getBigInt)(r.value || l, "overrides.value") === l,
                                        s = "0x" === (r.data || "0x");
                                    !n.fallback || n.fallback.payable || !n.receive || s || i || (0, o.assertArgument)(!1, "cannot send data to receive or send value to non-payable fallback", "overrides", t), (0, o.assertArgument)(n.fallback || s, "cannot send data to receive-only contract", "overrides.data", r.data);
                                    let a = n.receive || n.fallback && n.fallback.payable;
                                    return (0, o.assertArgument)(a || i, "cannot send value to non-payable fallback", "overrides.value", r.value), (0, o.assertArgument)(n.fallback || s, "cannot send data to receive-only contract", "overrides.data", r.data), r
                                },
                                r = async function(r) {
                                    let n = p(e.runner, "call");
                                    (0, o.assert)(u(n), "contract runner does not support calling", "UNSUPPORTED_OPERATION", {
                                        operation: "call"
                                    });
                                    let i = await t(r);
                                    try {
                                        return await n.call(i)
                                    } catch (t) {
                                        if ((0, o.isCallException)(t) && t.data) throw e.interface.makeError(t.data, i);
                                        throw t
                                    }
                                },
                                n = async function(r) {
                                    let n = e.runner;
                                    (0, o.assert)(h(n), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", {
                                        operation: "sendTransaction"
                                    });
                                    let i = await n.sendTransaction(await t(r)),
                                        s = g(e.runner);
                                    return new a.ContractTransactionResponse(e.interface, s, i)
                                },
                                i = async function(r) {
                                    let n = p(e.runner, "estimateGas");
                                    return (0, o.assert)(c(n), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", {
                                        operation: "estimateGas"
                                    }), await n.estimateGas(await t(r))
                                },
                                s = async e => await n(e);
                            return (0, o.defineProperties)(s, {
                                _contract: e,
                                estimateGas: i,
                                populateTransaction: t,
                                send: n,
                                staticCall: r
                            }), s
                        }(this) : null
                    }), new Proxy(this, {
                        get: (e, t, r) => {
                            if ("symbol" == typeof t || t in e || C.indexOf(t) >= 0) return Reflect.get(e, t, r);
                            try {
                                return e.getFunction(t)
                            } catch (e) {
                                if (!(0, o.isError)(e, "INVALID_ARGUMENT") || "key" !== e.argument) throw e
                            }
                        },
                        has: (e, t) => "symbol" == typeof t || t in e || C.indexOf(t) >= 0 ? Reflect.has(e, t) : e.interface.hasFunction(t)
                    })
                }
                connect(e) {
                    return new x(this.target, this.interface, e)
                }
                attach(e) {
                    return new x(e, this.interface, this.runner)
                }
                async getAddress() {
                    return await A(this).addrPromise
                }
                async getDeployedCode() {
                    let e = g(this.runner);
                    (0, o.assert)(e, "runner does not support .provider", "UNSUPPORTED_OPERATION", {
                        operation: "getDeployedCode"
                    });
                    let t = await e.getCode(await this.getAddress());
                    return "0x" === t ? null : t
                }
                async waitForDeployment() {
                    let e = this.deploymentTransaction();
                    if (e) return await e.wait(), this;
                    let t = await this.getDeployedCode();
                    if (null != t) return this;
                    let r = g(this.runner);
                    return (0, o.assert)(null != r, "contract runner does not support .provider", "UNSUPPORTED_OPERATION", {
                        operation: "waitForDeployment"
                    }), new Promise((e, t) => {
                        let n = async () => {
                            try {
                                let t = await this.getDeployedCode();
                                if (null != t) return e(this);
                                r.once("block", n)
                            } catch (e) {
                                t(e)
                            }
                        };
                        n()
                    })
                }
                deploymentTransaction() {
                    return A(this).deployTx
                }
                getFunction(e) {
                    "string" != typeof e && (e = e.format());
                    let t = function(e, t) {
                        let r = function(...r) {
                                let n = e.interface.getFunction(t, r);
                                return (0, o.assert)(n, "no matching fragment", "UNSUPPORTED_OPERATION", {
                                    operation: "fragment",
                                    info: {
                                        key: t,
                                        args: r
                                    }
                                }), n
                            },
                            n = async function(...t) {
                                let n = r(...t),
                                    i = {};
                                if (n.inputs.length + 1 === t.length && (i = await m(t.pop())), n.inputs.length !== t.length) throw Error("internal error: fragment inputs doesn't match arguments; should not happen");
                                let s = await y(e.runner, n.inputs, t);
                                return Object.assign({}, i, await (0, o.resolveProperties)({
                                    to: e.getAddress(),
                                    data: e.interface.encodeFunctionData(n, s)
                                }))
                            },
                            i = async function(...e) {
                                let t = await d(...e);
                                return 1 === t.length ? t[0] : t
                            },
                            s = async function(...t) {
                                let r = e.runner;
                                (0, o.assert)(h(r), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", {
                                    operation: "sendTransaction"
                                });
                                let i = await r.sendTransaction(await n(...t)),
                                    s = g(e.runner);
                                return new a.ContractTransactionResponse(e.interface, s, i)
                            },
                            l = async function(...t) {
                                let r = p(e.runner, "estimateGas");
                                return (0, o.assert)(c(r), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", {
                                    operation: "estimateGas"
                                }), await r.estimateGas(await n(...t))
                            },
                            d = async function(...t) {
                                let i = p(e.runner, "call");
                                (0, o.assert)(u(i), "contract runner does not support calling", "UNSUPPORTED_OPERATION", {
                                    operation: "call"
                                });
                                let s = await n(...t),
                                    a = "0x";
                                try {
                                    a = await i.call(s)
                                } catch (t) {
                                    if ((0, o.isCallException)(t) && t.data) throw e.interface.makeError(t.data, s);
                                    throw t
                                }
                                let l = r(...t);
                                return e.interface.decodeFunctionResult(l, a)
                            },
                            f = async (...e) => {
                                let t = r(...e);
                                return t.constant ? await i(...e) : await s(...e)
                            };
                        return (0, o.defineProperties)(f, {
                            name: e.interface.getFunctionName(t),
                            _contract: e,
                            _key: t,
                            getFragment: r,
                            estimateGas: l,
                            populateTransaction: n,
                            send: s,
                            staticCall: i,
                            staticCallResult: d
                        }), Object.defineProperty(f, "fragment", {
                            configurable: !1,
                            enumerable: !0,
                            get: () => {
                                let r = e.interface.getFunction(t);
                                return (0, o.assert)(r, "no matching fragment", "UNSUPPORTED_OPERATION", {
                                    operation: "fragment",
                                    info: {
                                        key: t
                                    }
                                }), r
                            }
                        }), f
                    }(this, e);
                    return t
                }
                getEvent(e) {
                    return "string" != typeof e && (e = e.format()),
                        function(e, t) {
                            let r = function(...r) {
                                    let n = e.interface.getEvent(t, r);
                                    return (0, o.assert)(n, "no matching fragment", "UNSUPPORTED_OPERATION", {
                                        operation: "fragment",
                                        info: {
                                            key: t,
                                            args: r
                                        }
                                    }), n
                                },
                                n = function(...t) {
                                    return new f(e, r(...t), t)
                                };
                            return (0, o.defineProperties)(n, {
                                name: e.interface.getEventName(t),
                                _contract: e,
                                _key: t,
                                getFragment: r
                            }), Object.defineProperty(n, "fragment", {
                                configurable: !1,
                                enumerable: !0,
                                get: () => {
                                    let r = e.interface.getEvent(t);
                                    return (0, o.assert)(r, "no matching fragment", "UNSUPPORTED_OPERATION", {
                                        operation: "fragment",
                                        info: {
                                            key: t
                                        }
                                    }), r
                                }
                            }), n
                        }(this, e)
                }
                async queryTransaction(e) {
                    throw Error("@TODO")
                }
                async queryFilter(e, t, r) {
                    null == t && (t = 0), null == r && (r = "latest");
                    let {
                        addr: n,
                        addrPromise: i
                    } = A(this), l = n || await i, {
                        fragment: u,
                        topics: c
                    } = await v(this, e), d = {
                        address: l,
                        topics: c,
                        fromBlock: t,
                        toBlock: r
                    }, h = g(this.runner);
                    return (0, o.assert)(h, "contract runner does not have a provider", "UNSUPPORTED_OPERATION", {
                        operation: "queryFilter"
                    }), (await h.getLogs(d)).map(e => {
                        let t = u;
                        if (null == t) try {
                            t = this.interface.getEvent(e.topics[0])
                        } catch (e) {}
                        if (t) try {
                            return new a.EventLog(e, this.interface, t)
                        } catch (t) {
                            return new a.UndecodedEventLog(e, t)
                        }
                        return new s.Log(e, h)
                    })
                }
                async on(e, t) {
                    let r = await P(this, "on", e);
                    return r.listeners.push({
                        listener: t,
                        once: !1
                    }), r.start(), this
                }
                async once(e, t) {
                    let r = await P(this, "once", e);
                    return r.listeners.push({
                        listener: t,
                        once: !0
                    }), r.start(), this
                }
                async emit(e, ...t) {
                    return await k(this, e, t, null)
                }
                async listenerCount(e) {
                    if (e) {
                        let t = await E(this, e);
                        return t ? t.listeners.length : 0
                    }
                    let {
                        subs: t
                    } = A(this), r = 0;
                    for (let {
                            listeners: e
                        } of t.values()) r += e.length;
                    return r
                }
                async listeners(e) {
                    if (e) {
                        let t = await E(this, e);
                        return t ? t.listeners.map(({
                            listener: e
                        }) => e) : []
                    }
                    let {
                        subs: t
                    } = A(this), r = [];
                    for (let {
                            listeners: e
                        } of t.values()) r = r.concat(e.map(({
                        listener: e
                    }) => e));
                    return r
                }
                async off(e, t) {
                    let r = await E(this, e);
                    if (!r) return this;
                    if (t) {
                        let e = r.listeners.map(({
                            listener: e
                        }) => e).indexOf(t);
                        e >= 0 && r.listeners.splice(e, 1)
                    }
                    return (null == t || 0 === r.listeners.length) && (r.stop(), A(this).subs.delete(r.tag)), this
                }
                async removeAllListeners(e) {
                    if (e) {
                        let t = await E(this, e);
                        if (!t) return this;
                        t.stop(), A(this).subs.delete(t.tag)
                    } else {
                        let {
                            subs: e
                        } = A(this);
                        for (let {
                                tag: t,
                                stop: r
                            } of e.values()) r(), e.delete(t)
                    }
                    return this
                }
                async addListener(e, t) {
                    return await this.on(e, t)
                }
                async removeListener(e, t) {
                    return await this.off(e, t)
                }
                static buildClass(e) {
                    return class extends x {
                        constructor(t, r = null) {
                            super(t, e, r)
                        }
                    }
                }
                static from(e, t, r) {
                    null == r && (r = null);
                    let n = new this(e, t, r);
                    return n
                }
            }

            function T() {
                return x
            }
            t.BaseContract = x;
            class N extends T() {}
            t.Contract = N
        },
        65007: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ContractFactory = void 0;
            let n = r(14403),
                i = r(29527),
                s = r(82678),
                o = r(98065);
            class a {
                interface;
                bytecode;
                runner;
                constructor(e, t, r) {
                    let i = n.Interface.from(e);
                    t instanceof Uint8Array || ("object" == typeof t && (t = t.object), t.startsWith("0x") || (t = "0x" + t)), t = (0, s.hexlify)((0, s.getBytes)(t)), (0, s.defineProperties)(this, {
                        bytecode: t,
                        interface: i,
                        runner: r || null
                    })
                }
                attach(e) {
                    return new o.BaseContract(e, this.interface, this.runner)
                }
                async getDeployTransaction(...e) {
                    let t = {},
                        r = this.interface.deploy;
                    if (r.inputs.length + 1 === e.length && (t = await (0, o.copyOverrides)(e.pop())), r.inputs.length !== e.length) throw Error("incorrect number of arguments to constructor");
                    let n = await (0, o.resolveArgs)(this.runner, r.inputs, e),
                        i = (0, s.concat)([this.bytecode, this.interface.encodeDeploy(n)]);
                    return Object.assign({}, t, {
                        data: i
                    })
                }
                async deploy(...e) {
                    let t = await this.getDeployTransaction(...e);
                    (0, s.assert)(this.runner && "function" == typeof this.runner.sendTransaction, "factory runner does not support sending transactions", "UNSUPPORTED_OPERATION", {
                        operation: "sendTransaction"
                    });
                    let r = await this.runner.sendTransaction(t),
                        n = (0, i.getCreateAddress)(r);
                    return new o.BaseContract(n, this.interface, this.runner, r)
                }
                connect(e) {
                    return new a(this.interface, this.bytecode, e)
                }
                static fromSolidity(e, t) {
                    (0, s.assertArgument)(null != e, "bad compiler output", "output", e), "string" == typeof e && (e = JSON.parse(e));
                    let r = e.abi,
                        n = "";
                    return e.bytecode ? n = e.bytecode : e.evm && e.evm.bytecode && (n = e.evm.bytecode), new this(r, n, t)
                }
            }
            t.ContractFactory = a
        },
        81374: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UndecodedEventLog = t.EventLog = t.ContractTransactionResponse = t.ContractTransactionReceipt = t.ContractUnknownEventPayload = t.ContractEventPayload = t.ContractFactory = t.Contract = t.BaseContract = void 0;
            var n = r(98065);
            Object.defineProperty(t, "BaseContract", {
                enumerable: !0,
                get: function() {
                    return n.BaseContract
                }
            }), Object.defineProperty(t, "Contract", {
                enumerable: !0,
                get: function() {
                    return n.Contract
                }
            });
            var i = r(65007);
            Object.defineProperty(t, "ContractFactory", {
                enumerable: !0,
                get: function() {
                    return i.ContractFactory
                }
            });
            var s = r(87517);
            Object.defineProperty(t, "ContractEventPayload", {
                enumerable: !0,
                get: function() {
                    return s.ContractEventPayload
                }
            }), Object.defineProperty(t, "ContractUnknownEventPayload", {
                enumerable: !0,
                get: function() {
                    return s.ContractUnknownEventPayload
                }
            }), Object.defineProperty(t, "ContractTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return s.ContractTransactionReceipt
                }
            }), Object.defineProperty(t, "ContractTransactionResponse", {
                enumerable: !0,
                get: function() {
                    return s.ContractTransactionResponse
                }
            }), Object.defineProperty(t, "EventLog", {
                enumerable: !0,
                get: function() {
                    return s.EventLog
                }
            }), Object.defineProperty(t, "UndecodedEventLog", {
                enumerable: !0,
                get: function() {
                    return s.UndecodedEventLog
                }
            })
        },
        87517: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ContractEventPayload = t.ContractUnknownEventPayload = t.ContractTransactionResponse = t.ContractTransactionReceipt = t.UndecodedEventLog = t.EventLog = void 0;
            let n = r(16203),
                i = r(82678);
            class s extends n.Log {
                interface;
                fragment;
                args;
                constructor(e, t, r) {
                    super(e, e.provider);
                    let n = t.decodeEventLog(r, e.data, e.topics);
                    (0, i.defineProperties)(this, {
                        args: n,
                        fragment: r,
                        interface: t
                    })
                }
                get eventName() {
                    return this.fragment.name
                }
                get eventSignature() {
                    return this.fragment.format()
                }
            }
            t.EventLog = s;
            class o extends n.Log {
                error;
                constructor(e, t) {
                    super(e, e.provider), (0, i.defineProperties)(this, {
                        error: t
                    })
                }
            }
            t.UndecodedEventLog = o;
            class a extends n.TransactionReceipt {#
                b;
                constructor(e, t, r) {
                    super(r, t), this.#b = e
                }
                get logs() {
                    return super.logs.map(e => {
                        let t = e.topics.length ? this.#b.getEvent(e.topics[0]) : null;
                        if (t) try {
                            return new s(e, this.#b, t)
                        } catch (t) {
                            return new o(e, t)
                        }
                        return e
                    })
                }
            }
            t.ContractTransactionReceipt = a;
            class l extends n.TransactionResponse {#
                b;
                constructor(e, t, r) {
                    super(r, t), this.#b = e
                }
                async wait(e) {
                    let t = await super.wait(e);
                    return null == t ? null : new a(this.#b, this.provider, t)
                }
            }
            t.ContractTransactionResponse = l;
            class u extends i.EventPayload {
                log;
                constructor(e, t, r, n) {
                    super(e, t, r), (0, i.defineProperties)(this, {
                        log: n
                    })
                }
                async getBlock() {
                    return await this.log.getBlock()
                }
                async getTransaction() {
                    return await this.log.getTransaction()
                }
                async getTransactionReceipt() {
                    return await this.log.getTransactionReceipt()
                }
            }
            t.ContractUnknownEventPayload = u, t.ContractEventPayload = class extends u {
                constructor(e, t, r, n, o) {
                    super(e, t, r, new s(o, e.interface, n));
                    let a = e.interface.decodeEventLog(n, this.log.data, this.log.topics);
                    (0, i.defineProperties)(this, {
                        args: a,
                        fragment: n
                    })
                }
                get eventName() {
                    return this.fragment.name
                }
                get eventSignature() {
                    return this.fragment.format()
                }
            }
        },
        50268: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = t.pbkdf2Sync = t.createHmac = t.createHash = void 0;
            let n = r(76987),
                i = r(54516),
                s = r(30217),
                o = r(52645),
                a = r(82678),
                l = function() {
                    if ("undefined" != typeof self) return self;
                    if ("undefined" != typeof window) return window;
                    if (void 0 !== r.g) return r.g;
                    throw Error("unable to locate global object")
                }(),
                u = l.crypto || l.msCrypto;
            t.createHash = function(e) {
                switch (e) {
                    case "sha256":
                        return s.sha256.create();
                    case "sha512":
                        return o.sha512.create()
                }(0, a.assertArgument)(!1, "invalid hashing algorithm name", "algorithm", e)
            }, t.createHmac = function(e, t) {
                let r = {
                    sha256: s.sha256,
                    sha512: o.sha512
                }[e];
                return (0, a.assertArgument)(null != r, "invalid hmac algorithm", "algorithm", e), n.hmac.create(r, t)
            }, t.pbkdf2Sync = function(e, t, r, n, l) {
                let u = {
                    sha256: s.sha256,
                    sha512: o.sha512
                }[l];
                return (0, a.assertArgument)(null != u, "invalid pbkdf2 algorithm", "algorithm", l), (0, i.pbkdf2)(u, e, t, {
                    c: r,
                    dkLen: n
                })
            }, t.randomBytes = function(e) {
                (0, a.assert)(null != u, "platform does not support secure random numbers", "UNSUPPORTED_OPERATION", {
                    operation: "randomBytes"
                }), (0, a.assertArgument)(Number.isInteger(e) && e > 0 && e <= 1024, "invalid length", "length", e);
                let t = new Uint8Array(e);
                return u.getRandomValues(t), t
            }
        },
        78556: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.computeHmac = void 0;
            let n = r(50268),
                i = r(82678),
                s = !1,
                o = function(e, t, r) {
                    return (0, n.createHmac)(e, t).update(r).digest()
                },
                a = o;

            function l(e, t, r) {
                let n = (0, i.getBytes)(t, "key"),
                    s = (0, i.getBytes)(r, "data");
                return (0, i.hexlify)(a(e, n, s))
            }
            t.computeHmac = l, l._ = o, l.lock = function() {
                s = !0
            }, l.register = function(e) {
                if (s) throw Error("computeHmac is locked");
                a = e
            }, Object.freeze(l)
        },
        20021: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.lock = t.Signature = t.SigningKey = t.scryptSync = t.scrypt = t.pbkdf2 = t.sha512 = t.sha256 = t.ripemd160 = t.keccak256 = t.randomBytes = t.computeHmac = void 0;
            let n = r(78556);
            Object.defineProperty(t, "computeHmac", {
                enumerable: !0,
                get: function() {
                    return n.computeHmac
                }
            });
            let i = r(9059);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return i.keccak256
                }
            });
            let s = r(71463);
            Object.defineProperty(t, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return s.ripemd160
                }
            });
            let o = r(15705);
            Object.defineProperty(t, "pbkdf2", {
                enumerable: !0,
                get: function() {
                    return o.pbkdf2
                }
            });
            let a = r(20855);
            Object.defineProperty(t, "randomBytes", {
                enumerable: !0,
                get: function() {
                    return a.randomBytes
                }
            });
            let l = r(56738);
            Object.defineProperty(t, "scrypt", {
                enumerable: !0,
                get: function() {
                    return l.scrypt
                }
            }), Object.defineProperty(t, "scryptSync", {
                enumerable: !0,
                get: function() {
                    return l.scryptSync
                }
            });
            let u = r(83037);
            Object.defineProperty(t, "sha256", {
                enumerable: !0,
                get: function() {
                    return u.sha256
                }
            }), Object.defineProperty(t, "sha512", {
                enumerable: !0,
                get: function() {
                    return u.sha512
                }
            });
            var c = r(81113);
            Object.defineProperty(t, "SigningKey", {
                enumerable: !0,
                get: function() {
                    return c.SigningKey
                }
            });
            var d = r(56037);
            Object.defineProperty(t, "Signature", {
                enumerable: !0,
                get: function() {
                    return d.Signature
                }
            }), t.lock = function() {
                n.computeHmac.lock(), i.keccak256.lock(), o.pbkdf2.lock(), a.randomBytes.lock(), s.ripemd160.lock(), l.scrypt.lock(), l.scryptSync.lock(), u.sha256.lock(), u.sha512.lock(), a.randomBytes.lock()
            }
        },
        9059: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.keccak256 = void 0;
            let n = r(77629),
                i = r(82678),
                s = !1,
                o = function(e) {
                    return (0, n.keccak_256)(e)
                },
                a = o;

            function l(e) {
                let t = (0, i.getBytes)(e, "data");
                return (0, i.hexlify)(a(t))
            }
            t.keccak256 = l, l._ = o, l.lock = function() {
                s = !0
            }, l.register = function(e) {
                if (s) throw TypeError("keccak256 is locked");
                a = e
            }, Object.freeze(l)
        },
        15705: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.pbkdf2 = void 0;
            let n = r(50268),
                i = r(82678),
                s = !1,
                o = function(e, t, r, i, s) {
                    return (0, n.pbkdf2Sync)(e, t, r, i, s)
                },
                a = o;

            function l(e, t, r, n, s) {
                let o = (0, i.getBytes)(e, "password"),
                    l = (0, i.getBytes)(t, "salt");
                return (0, i.hexlify)(a(o, l, r, n, s))
            }
            t.pbkdf2 = l, l._ = o, l.lock = function() {
                s = !0
            }, l.register = function(e) {
                if (s) throw Error("pbkdf2 is locked");
                a = e
            }, Object.freeze(l)
        },
        20855: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = void 0;
            let n = r(50268),
                i = !1,
                s = function(e) {
                    return new Uint8Array((0, n.randomBytes)(e))
                },
                o = s;

            function a(e) {
                return o(e)
            }
            t.randomBytes = a, a._ = s, a.lock = function() {
                i = !0
            }, a.register = function(e) {
                if (i) throw Error("randomBytes is locked");
                o = e
            }, Object.freeze(a)
        },
        71463: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = void 0;
            let n = r(67913),
                i = r(82678),
                s = !1,
                o = function(e) {
                    return (0, n.ripemd160)(e)
                },
                a = o;

            function l(e) {
                let t = (0, i.getBytes)(e, "data");
                return (0, i.hexlify)(a(t))
            }
            t.ripemd160 = l, l._ = o, l.lock = function() {
                s = !0
            }, l.register = function(e) {
                if (s) throw TypeError("ripemd160 is locked");
                a = e
            }, Object.freeze(l)
        },
        56738: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.scryptSync = t.scrypt = void 0;
            let n = r(72427),
                i = r(82678),
                s = !1,
                o = !1,
                a = async function(e, t, r, i, s, o, a) {
                    return await (0, n.scryptAsync)(e, t, {
                        N: r,
                        r: i,
                        p: s,
                        dkLen: o,
                        onProgress: a
                    })
                },
                l = function(e, t, r, i, s, o) {
                    return (0, n.scrypt)(e, t, {
                        N: r,
                        r: i,
                        p: s,
                        dkLen: o
                    })
                },
                u = a,
                c = l;
            async function d(e, t, r, n, s, o, a) {
                let l = (0, i.getBytes)(e, "passwd"),
                    c = (0, i.getBytes)(t, "salt");
                return (0, i.hexlify)(await u(l, c, r, n, s, o, a))
            }

            function h(e, t, r, n, s, o) {
                let a = (0, i.getBytes)(e, "passwd"),
                    l = (0, i.getBytes)(t, "salt");
                return (0, i.hexlify)(c(a, l, r, n, s, o))
            }
            t.scrypt = d, d._ = a, d.lock = function() {
                o = !0
            }, d.register = function(e) {
                if (o) throw Error("scrypt is locked");
                u = e
            }, Object.freeze(d), t.scryptSync = h, h._ = l, h.lock = function() {
                s = !0
            }, h.register = function(e) {
                if (s) throw Error("scryptSync is locked");
                c = e
            }, Object.freeze(h)
        },
        83037: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha512 = t.sha256 = void 0;
            let n = r(50268),
                i = r(82678),
                s = function(e) {
                    return (0, n.createHash)("sha256").update(e).digest()
                },
                o = function(e) {
                    return (0, n.createHash)("sha512").update(e).digest()
                },
                a = s,
                l = o,
                u = !1,
                c = !1;

            function d(e) {
                let t = (0, i.getBytes)(e, "data");
                return (0, i.hexlify)(a(t))
            }

            function h(e) {
                let t = (0, i.getBytes)(e, "data");
                return (0, i.hexlify)(l(t))
            }
            t.sha256 = d, d._ = s, d.lock = function() {
                u = !0
            }, d.register = function(e) {
                if (u) throw Error("sha256 is locked");
                a = e
            }, Object.freeze(d), t.sha512 = h, h._ = o, h.lock = function() {
                c = !0
            }, h.register = function(e) {
                if (c) throw Error("sha512 is locked");
                l = e
            }, Object.freeze(d)
        },
        56037: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Signature = void 0;
            let n = r(86872),
                i = r(82678),
                s = BigInt(0),
                o = BigInt(1),
                a = BigInt(2),
                l = BigInt(27),
                u = BigInt(28),
                c = BigInt(35),
                d = {};

            function h(e) {
                return (0, i.zeroPadValue)((0, i.toBeArray)(e), 32)
            }
            class f {#
                w;#
                A;#
                v;#
                E;
                get r() {
                    return this.#w
                }
                set r(e) {
                    (0, i.assertArgument)(32 === (0, i.dataLength)(e), "invalid r", "value", e), this.#w = (0, i.hexlify)(e)
                }
                get s() {
                    return this.#A
                }
                set s(e) {
                    (0, i.assertArgument)(32 === (0, i.dataLength)(e), "invalid s", "value", e);
                    let t = (0, i.hexlify)(e);
                    (0, i.assertArgument)(8 > parseInt(t.substring(0, 3)), "non-canonical s", "value", t), this.#A = t
                }
                get v() {
                    return this.#v
                }
                set v(e) {
                    let t = (0, i.getNumber)(e, "value");
                    (0, i.assertArgument)(27 === t || 28 === t, "invalid v", "v", e), this.#v = t
                }
                get networkV() {
                    return this.#E
                }
                get legacyChainId() {
                    let e = this.networkV;
                    return null == e ? null : f.getChainId(e)
                }
                get yParity() {
                    return 27 === this.v ? 0 : 1
                }
                get yParityAndS() {
                    let e = (0, i.getBytes)(this.s);
                    return this.yParity && (e[0] |= 128), (0, i.hexlify)(e)
                }
                get compactSerialized() {
                    return (0, i.concat)([this.r, this.yParityAndS])
                }
                get serialized() {
                    return (0, i.concat)([this.r, this.s, this.yParity ? "0x1c" : "0x1b"])
                }
                constructor(e, t, r, n) {
                    (0, i.assertPrivate)(e, d, "Signature"), this.#w = t, this.#A = r, this.#v = n, this.#E = null
                }[Symbol.for("nodejs.util.inspect.custom")]() {
                    return `Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`
                }
                clone() {
                    let e = new f(d, this.r, this.s, this.v);
                    return this.networkV && (e.#E = this.networkV), e
                }
                toJSON() {
                    let e = this.networkV;
                    return {
                        _type: "signature",
                        networkV: null != e ? e.toString() : null,
                        r: this.r,
                        s: this.s,
                        v: this.v
                    }
                }
                static getChainId(e) {
                    let t = (0, i.getBigInt)(e, "v");
                    return t == l || t == u ? s : ((0, i.assertArgument)(t >= c, "invalid EIP-155 v", "v", e), (t - c) / a)
                }
                static getChainIdV(e, t) {
                    return (0, i.getBigInt)(e) * a + BigInt(35 + t - 27)
                }
                static getNormalizedV(e) {
                    let t = (0, i.getBigInt)(e);
                    return t === s || t === l ? 27 : t === o || t === u ? 28 : ((0, i.assertArgument)(t >= c, "invalid v", "v", e), t & o ? 27 : 28)
                }
                static from(e) {
                    function t(t, r) {
                        (0, i.assertArgument)(t, r, "signature", e)
                    }
                    if (null == e) return new f(d, n.ZeroHash, n.ZeroHash, 27);
                    if ("string" == typeof e) {
                        let r = (0, i.getBytes)(e, "signature");
                        if (64 === r.length) {
                            let e = (0, i.hexlify)(r.slice(0, 32)),
                                t = r.slice(32, 64),
                                n = 128 & t[0] ? 28 : 27;
                            return t[0] &= 127, new f(d, e, (0, i.hexlify)(t), n)
                        }
                        if (65 === r.length) {
                            let e = (0, i.hexlify)(r.slice(0, 32)),
                                n = r.slice(32, 64);
                            t((128 & n[0]) == 0, "non-canonical s");
                            let s = f.getNormalizedV(r[64]);
                            return new f(d, e, (0, i.hexlify)(n), s)
                        }
                        t(!1, "invalid raw signature length")
                    }
                    if (e instanceof f) return e.clone();
                    let r = e.r;
                    t(null != r, "missing r");
                    let s = h(r),
                        o = function(e, r) {
                            if (null != e) return h(e);
                            if (null != r) {
                                t((0, i.isHexString)(r, 32), "invalid yParityAndS");
                                let e = (0, i.getBytes)(r);
                                return e[0] &= 127, (0, i.hexlify)(e)
                            }
                            t(!1, "missing s")
                        }(e.s, e.yParityAndS);
                    t((128 & (0, i.getBytes)(o)[0]) == 0, "non-canonical s");
                    let {
                        networkV: a,
                        v: l
                    } = function(e, r, n) {
                        if (null != e) {
                            let t = (0, i.getBigInt)(e);
                            return {
                                networkV: t >= c ? t : void 0,
                                v: f.getNormalizedV(t)
                            }
                        }
                        if (null != r) return t((0, i.isHexString)(r, 32), "invalid yParityAndS"), {
                            v: 128 & (0, i.getBytes)(r)[0] ? 28 : 27
                        };
                        if (null != n) {
                            switch ((0, i.getNumber)(n, "sig.yParity")) {
                                case 0:
                                    return {
                                        v: 27
                                    };
                                case 1:
                                    return {
                                        v: 28
                                    }
                            }
                            t(!1, "invalid yParity")
                        }
                        t(!1, "missing v")
                    }(e.v, e.yParityAndS, e.yParity), u = new f(d, s, o, l);
                    return a && (u.#E = a), t(null == e.yParity || (0, i.getNumber)(e.yParity, "sig.yParity") === u.yParity, "yParity mismatch"), t(null == e.yParityAndS || e.yParityAndS === u.yParityAndS, "yParityAndS mismatch"), u
                }
            }
            t.Signature = f
        },
        81113: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SigningKey = void 0;
            let n = r(54604),
                i = n.__importStar(r(49615)),
                s = r(82678),
                o = r(78556),
                a = r(56037);
            i.utils.hmacSha256Sync = function(e, ...t) {
                return (0, s.getBytes)((0, o.computeHmac)("sha256", e, (0, s.concat)(t)))
            };
            class l {#
                P;
                constructor(e) {
                    (0, s.assertArgument)(32 === (0, s.dataLength)(e), "invalid private key", "privateKey", "[REDACTED]"), this.#P = (0, s.hexlify)(e)
                }
                get privateKey() {
                    return this.#P
                }
                get publicKey() {
                    return l.computePublicKey(this.#P)
                }
                get compressedPublicKey() {
                    return l.computePublicKey(this.#P, !0)
                }
                sign(e) {
                    (0, s.assertArgument)(32 === (0, s.dataLength)(e), "invalid digest length", "digest", e);
                    let [t, r] = i.signSync((0, s.getBytesCopy)(e), (0, s.getBytesCopy)(this.#P), {
                        recovered: !0,
                        canonical: !0
                    }), n = i.Signature.fromHex(t);
                    return a.Signature.from({
                        r: (0, s.toBeHex)("0x" + n.r.toString(16), 32),
                        s: (0, s.toBeHex)("0x" + n.s.toString(16), 32),
                        v: r ? 28 : 27
                    })
                }
                computeSharedSecret(e) {
                    let t = l.computePublicKey(e);
                    return (0, s.hexlify)(i.getSharedSecret((0, s.getBytesCopy)(this.#P), (0, s.getBytes)(t)))
                }
                static computePublicKey(e, t) {
                    let r = (0, s.getBytes)(e, "key");
                    if (32 === r.length) {
                        let e = i.getPublicKey(r, !!t);
                        return (0, s.hexlify)(e)
                    }
                    if (64 === r.length) {
                        let e = new Uint8Array(65);
                        e[0] = 4, e.set(r, 1), r = e
                    }
                    let n = i.Point.fromHex(r);
                    return (0, s.hexlify)(n.toRawBytes(t))
                }
                static recoverPublicKey(e, t) {
                    (0, s.assertArgument)(32 === (0, s.dataLength)(e), "invalid digest length", "digest", e);
                    let r = a.Signature.from(t),
                        n = i.Signature.fromCompact((0, s.getBytesCopy)((0, s.concat)([r.r, r.s]))).toDERRawBytes(),
                        o = i.recoverPublicKey((0, s.getBytesCopy)(e), n, r.yParity);
                    return (0, s.assertArgument)(null != o, "invalid signature for digest", "signature", t), (0, s.hexlify)(o)
                }
                static addPoints(e, t, r) {
                    let n = i.Point.fromHex(l.computePublicKey(e).substring(2)),
                        s = i.Point.fromHex(l.computePublicKey(t).substring(2));
                    return "0x" + n.add(s).toHex(!!r)
                }
            }
            t.SigningKey = l
        },
        22110: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = t.keccak256 = t.randomBytes = t.computeHmac = t.UndecodedEventLog = t.EventLog = t.ContractUnknownEventPayload = t.ContractTransactionResponse = t.ContractTransactionReceipt = t.ContractEventPayload = t.ContractFactory = t.Contract = t.BaseContract = t.MessagePrefix = t.EtherSymbol = t.ZeroHash = t.N = t.MaxInt256 = t.MinInt256 = t.MaxUint256 = t.WeiPerEther = t.ZeroAddress = t.resolveAddress = t.isAddress = t.isAddressable = t.getCreate2Address = t.getCreateAddress = t.getIcapAddress = t.getAddress = t.Typed = t.TransactionDescription = t.Result = t.LogDescription = t.Interface = t.Indexed = t.ErrorDescription = t.checkResultErrors = t.StructFragment = t.ParamType = t.NamedFragment = t.FunctionFragment = t.FallbackFragment = t.Fragment = t.EventFragment = t.ErrorFragment = t.ConstructorFragment = t.AbiCoder = t.encodeBytes32String = t.decodeBytes32String = t.version = void 0, t.EtherscanPlugin = t.EnsPlugin = t.Network = t.EnsResolver = t.WebSocketProvider = t.SocketProvider = t.IpcSocketProvider = t.QuickNodeProvider = t.PocketProvider = t.InfuraWebSocketProvider = t.InfuraProvider = t.EtherscanProvider = t.CloudflareProvider = t.AnkrProvider = t.AlchemyProvider = t.BrowserProvider = t.JsonRpcSigner = t.JsonRpcProvider = t.JsonRpcApiProvider = t.FallbackProvider = t.AbstractProvider = t.VoidSigner = t.NonceManager = t.AbstractSigner = t.TransactionResponse = t.TransactionReceipt = t.Log = t.FeeData = t.Block = t.getDefaultProvider = t.verifyTypedData = t.TypedDataEncoder = t.solidityPackedSha256 = t.solidityPackedKeccak256 = t.solidityPacked = t.verifyMessage = t.hashMessage = t.dnsEncode = t.namehash = t.isValidName = t.ensNormalize = t.id = t.SigningKey = t.Signature = t.lock = t.scryptSync = t.scrypt = t.pbkdf2 = t.sha512 = t.sha256 = void 0, t.toBeArray = t.getUint = t.getNumber = t.getBigInt = t.FixedNumber = t.FetchCancelSignal = t.FetchResponse = t.FetchRequest = t.EventPayload = t.isError = t.isCallException = t.makeError = t.assertPrivate = t.assertNormalize = t.assertArgumentCount = t.assertArgument = t.assert = t.resolveProperties = t.defineProperties = t.zeroPadValue = t.zeroPadBytes = t.stripZerosLeft = t.isBytesLike = t.isHexString = t.hexlify = t.getBytesCopy = t.getBytes = t.dataSlice = t.dataLength = t.concat = t.encodeBase64 = t.decodeBase64 = t.encodeBase58 = t.decodeBase58 = t.Transaction = t.recoverAddress = t.computeAddress = t.accessListify = t.showThrottleMessage = t.copyRequest = t.UnmanagedSubscriber = t.SocketSubscriber = t.SocketPendingSubscriber = t.SocketEventSubscriber = t.SocketBlockSubscriber = t.MulticoinProviderPlugin = t.NetworkPlugin = t.GasCostPlugin = t.FetchUrlFeeDataNetworkPlugin = t.FeeDataNetworkPlugin = void 0, t.wordlists = t.WordlistOwlA = t.WordlistOwl = t.LangEn = t.Wordlist = t.encryptKeystoreJsonSync = t.encryptKeystoreJson = t.decryptKeystoreJson = t.decryptKeystoreJsonSync = t.decryptCrowdsaleJson = t.isKeystoreJson = t.isCrowdsaleJson = t.getIndexedAccountPath = t.getAccountPath = t.defaultPath = t.Wallet = t.HDNodeVoidWallet = t.HDNodeWallet = t.BaseWallet = t.Mnemonic = t.uuidV4 = t.encodeRlp = t.decodeRlp = t.Utf8ErrorFuncs = t.toUtf8String = t.toUtf8CodePoints = t.toUtf8Bytes = t.parseUnits = t.formatUnits = t.parseEther = t.formatEther = t.mask = t.toTwos = t.fromTwos = t.toQuantity = t.toNumber = t.toBeHex = t.toBigInt = void 0;
            var n = r(20617);
            Object.defineProperty(t, "version", {
                enumerable: !0,
                get: function() {
                    return n.version
                }
            });
            var i = r(14403);
            Object.defineProperty(t, "decodeBytes32String", {
                enumerable: !0,
                get: function() {
                    return i.decodeBytes32String
                }
            }), Object.defineProperty(t, "encodeBytes32String", {
                enumerable: !0,
                get: function() {
                    return i.encodeBytes32String
                }
            }), Object.defineProperty(t, "AbiCoder", {
                enumerable: !0,
                get: function() {
                    return i.AbiCoder
                }
            }), Object.defineProperty(t, "ConstructorFragment", {
                enumerable: !0,
                get: function() {
                    return i.ConstructorFragment
                }
            }), Object.defineProperty(t, "ErrorFragment", {
                enumerable: !0,
                get: function() {
                    return i.ErrorFragment
                }
            }), Object.defineProperty(t, "EventFragment", {
                enumerable: !0,
                get: function() {
                    return i.EventFragment
                }
            }), Object.defineProperty(t, "Fragment", {
                enumerable: !0,
                get: function() {
                    return i.Fragment
                }
            }), Object.defineProperty(t, "FallbackFragment", {
                enumerable: !0,
                get: function() {
                    return i.FallbackFragment
                }
            }), Object.defineProperty(t, "FunctionFragment", {
                enumerable: !0,
                get: function() {
                    return i.FunctionFragment
                }
            }), Object.defineProperty(t, "NamedFragment", {
                enumerable: !0,
                get: function() {
                    return i.NamedFragment
                }
            }), Object.defineProperty(t, "ParamType", {
                enumerable: !0,
                get: function() {
                    return i.ParamType
                }
            }), Object.defineProperty(t, "StructFragment", {
                enumerable: !0,
                get: function() {
                    return i.StructFragment
                }
            }), Object.defineProperty(t, "checkResultErrors", {
                enumerable: !0,
                get: function() {
                    return i.checkResultErrors
                }
            }), Object.defineProperty(t, "ErrorDescription", {
                enumerable: !0,
                get: function() {
                    return i.ErrorDescription
                }
            }), Object.defineProperty(t, "Indexed", {
                enumerable: !0,
                get: function() {
                    return i.Indexed
                }
            }), Object.defineProperty(t, "Interface", {
                enumerable: !0,
                get: function() {
                    return i.Interface
                }
            }), Object.defineProperty(t, "LogDescription", {
                enumerable: !0,
                get: function() {
                    return i.LogDescription
                }
            }), Object.defineProperty(t, "Result", {
                enumerable: !0,
                get: function() {
                    return i.Result
                }
            }), Object.defineProperty(t, "TransactionDescription", {
                enumerable: !0,
                get: function() {
                    return i.TransactionDescription
                }
            }), Object.defineProperty(t, "Typed", {
                enumerable: !0,
                get: function() {
                    return i.Typed
                }
            });
            var s = r(29527);
            Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return s.getAddress
                }
            }), Object.defineProperty(t, "getIcapAddress", {
                enumerable: !0,
                get: function() {
                    return s.getIcapAddress
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return s.getCreateAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return s.getCreate2Address
                }
            }), Object.defineProperty(t, "isAddressable", {
                enumerable: !0,
                get: function() {
                    return s.isAddressable
                }
            }), Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return s.isAddress
                }
            }), Object.defineProperty(t, "resolveAddress", {
                enumerable: !0,
                get: function() {
                    return s.resolveAddress
                }
            });
            var o = r(86872);
            Object.defineProperty(t, "ZeroAddress", {
                enumerable: !0,
                get: function() {
                    return o.ZeroAddress
                }
            }), Object.defineProperty(t, "WeiPerEther", {
                enumerable: !0,
                get: function() {
                    return o.WeiPerEther
                }
            }), Object.defineProperty(t, "MaxUint256", {
                enumerable: !0,
                get: function() {
                    return o.MaxUint256
                }
            }), Object.defineProperty(t, "MinInt256", {
                enumerable: !0,
                get: function() {
                    return o.MinInt256
                }
            }), Object.defineProperty(t, "MaxInt256", {
                enumerable: !0,
                get: function() {
                    return o.MaxInt256
                }
            }), Object.defineProperty(t, "N", {
                enumerable: !0,
                get: function() {
                    return o.N
                }
            }), Object.defineProperty(t, "ZeroHash", {
                enumerable: !0,
                get: function() {
                    return o.ZeroHash
                }
            }), Object.defineProperty(t, "EtherSymbol", {
                enumerable: !0,
                get: function() {
                    return o.EtherSymbol
                }
            }), Object.defineProperty(t, "MessagePrefix", {
                enumerable: !0,
                get: function() {
                    return o.MessagePrefix
                }
            });
            var a = r(81374);
            Object.defineProperty(t, "BaseContract", {
                enumerable: !0,
                get: function() {
                    return a.BaseContract
                }
            }), Object.defineProperty(t, "Contract", {
                enumerable: !0,
                get: function() {
                    return a.Contract
                }
            }), Object.defineProperty(t, "ContractFactory", {
                enumerable: !0,
                get: function() {
                    return a.ContractFactory
                }
            }), Object.defineProperty(t, "ContractEventPayload", {
                enumerable: !0,
                get: function() {
                    return a.ContractEventPayload
                }
            }), Object.defineProperty(t, "ContractTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return a.ContractTransactionReceipt
                }
            }), Object.defineProperty(t, "ContractTransactionResponse", {
                enumerable: !0,
                get: function() {
                    return a.ContractTransactionResponse
                }
            }), Object.defineProperty(t, "ContractUnknownEventPayload", {
                enumerable: !0,
                get: function() {
                    return a.ContractUnknownEventPayload
                }
            }), Object.defineProperty(t, "EventLog", {
                enumerable: !0,
                get: function() {
                    return a.EventLog
                }
            }), Object.defineProperty(t, "UndecodedEventLog", {
                enumerable: !0,
                get: function() {
                    return a.UndecodedEventLog
                }
            });
            var l = r(20021);
            Object.defineProperty(t, "computeHmac", {
                enumerable: !0,
                get: function() {
                    return l.computeHmac
                }
            }), Object.defineProperty(t, "randomBytes", {
                enumerable: !0,
                get: function() {
                    return l.randomBytes
                }
            }), Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return l.keccak256
                }
            }), Object.defineProperty(t, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return l.ripemd160
                }
            }), Object.defineProperty(t, "sha256", {
                enumerable: !0,
                get: function() {
                    return l.sha256
                }
            }), Object.defineProperty(t, "sha512", {
                enumerable: !0,
                get: function() {
                    return l.sha512
                }
            }), Object.defineProperty(t, "pbkdf2", {
                enumerable: !0,
                get: function() {
                    return l.pbkdf2
                }
            }), Object.defineProperty(t, "scrypt", {
                enumerable: !0,
                get: function() {
                    return l.scrypt
                }
            }), Object.defineProperty(t, "scryptSync", {
                enumerable: !0,
                get: function() {
                    return l.scryptSync
                }
            }), Object.defineProperty(t, "lock", {
                enumerable: !0,
                get: function() {
                    return l.lock
                }
            }), Object.defineProperty(t, "Signature", {
                enumerable: !0,
                get: function() {
                    return l.Signature
                }
            }), Object.defineProperty(t, "SigningKey", {
                enumerable: !0,
                get: function() {
                    return l.SigningKey
                }
            });
            var u = r(94194);
            Object.defineProperty(t, "id", {
                enumerable: !0,
                get: function() {
                    return u.id
                }
            }), Object.defineProperty(t, "ensNormalize", {
                enumerable: !0,
                get: function() {
                    return u.ensNormalize
                }
            }), Object.defineProperty(t, "isValidName", {
                enumerable: !0,
                get: function() {
                    return u.isValidName
                }
            }), Object.defineProperty(t, "namehash", {
                enumerable: !0,
                get: function() {
                    return u.namehash
                }
            }), Object.defineProperty(t, "dnsEncode", {
                enumerable: !0,
                get: function() {
                    return u.dnsEncode
                }
            }), Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return u.hashMessage
                }
            }), Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return u.verifyMessage
                }
            }), Object.defineProperty(t, "solidityPacked", {
                enumerable: !0,
                get: function() {
                    return u.solidityPacked
                }
            }), Object.defineProperty(t, "solidityPackedKeccak256", {
                enumerable: !0,
                get: function() {
                    return u.solidityPackedKeccak256
                }
            }), Object.defineProperty(t, "solidityPackedSha256", {
                enumerable: !0,
                get: function() {
                    return u.solidityPackedSha256
                }
            }), Object.defineProperty(t, "TypedDataEncoder", {
                enumerable: !0,
                get: function() {
                    return u.TypedDataEncoder
                }
            }), Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return u.verifyTypedData
                }
            });
            var c = r(39004);
            Object.defineProperty(t, "getDefaultProvider", {
                enumerable: !0,
                get: function() {
                    return c.getDefaultProvider
                }
            }), Object.defineProperty(t, "Block", {
                enumerable: !0,
                get: function() {
                    return c.Block
                }
            }), Object.defineProperty(t, "FeeData", {
                enumerable: !0,
                get: function() {
                    return c.FeeData
                }
            }), Object.defineProperty(t, "Log", {
                enumerable: !0,
                get: function() {
                    return c.Log
                }
            }), Object.defineProperty(t, "TransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return c.TransactionReceipt
                }
            }), Object.defineProperty(t, "TransactionResponse", {
                enumerable: !0,
                get: function() {
                    return c.TransactionResponse
                }
            }), Object.defineProperty(t, "AbstractSigner", {
                enumerable: !0,
                get: function() {
                    return c.AbstractSigner
                }
            }), Object.defineProperty(t, "NonceManager", {
                enumerable: !0,
                get: function() {
                    return c.NonceManager
                }
            }), Object.defineProperty(t, "VoidSigner", {
                enumerable: !0,
                get: function() {
                    return c.VoidSigner
                }
            }), Object.defineProperty(t, "AbstractProvider", {
                enumerable: !0,
                get: function() {
                    return c.AbstractProvider
                }
            }), Object.defineProperty(t, "FallbackProvider", {
                enumerable: !0,
                get: function() {
                    return c.FallbackProvider
                }
            }), Object.defineProperty(t, "JsonRpcApiProvider", {
                enumerable: !0,
                get: function() {
                    return c.JsonRpcApiProvider
                }
            }), Object.defineProperty(t, "JsonRpcProvider", {
                enumerable: !0,
                get: function() {
                    return c.JsonRpcProvider
                }
            }), Object.defineProperty(t, "JsonRpcSigner", {
                enumerable: !0,
                get: function() {
                    return c.JsonRpcSigner
                }
            }), Object.defineProperty(t, "BrowserProvider", {
                enumerable: !0,
                get: function() {
                    return c.BrowserProvider
                }
            }), Object.defineProperty(t, "AlchemyProvider", {
                enumerable: !0,
                get: function() {
                    return c.AlchemyProvider
                }
            }), Object.defineProperty(t, "AnkrProvider", {
                enumerable: !0,
                get: function() {
                    return c.AnkrProvider
                }
            }), Object.defineProperty(t, "CloudflareProvider", {
                enumerable: !0,
                get: function() {
                    return c.CloudflareProvider
                }
            }), Object.defineProperty(t, "EtherscanProvider", {
                enumerable: !0,
                get: function() {
                    return c.EtherscanProvider
                }
            }), Object.defineProperty(t, "InfuraProvider", {
                enumerable: !0,
                get: function() {
                    return c.InfuraProvider
                }
            }), Object.defineProperty(t, "InfuraWebSocketProvider", {
                enumerable: !0,
                get: function() {
                    return c.InfuraWebSocketProvider
                }
            }), Object.defineProperty(t, "PocketProvider", {
                enumerable: !0,
                get: function() {
                    return c.PocketProvider
                }
            }), Object.defineProperty(t, "QuickNodeProvider", {
                enumerable: !0,
                get: function() {
                    return c.QuickNodeProvider
                }
            }), Object.defineProperty(t, "IpcSocketProvider", {
                enumerable: !0,
                get: function() {
                    return c.IpcSocketProvider
                }
            }), Object.defineProperty(t, "SocketProvider", {
                enumerable: !0,
                get: function() {
                    return c.SocketProvider
                }
            }), Object.defineProperty(t, "WebSocketProvider", {
                enumerable: !0,
                get: function() {
                    return c.WebSocketProvider
                }
            }), Object.defineProperty(t, "EnsResolver", {
                enumerable: !0,
                get: function() {
                    return c.EnsResolver
                }
            }), Object.defineProperty(t, "Network", {
                enumerable: !0,
                get: function() {
                    return c.Network
                }
            }), Object.defineProperty(t, "EnsPlugin", {
                enumerable: !0,
                get: function() {
                    return c.EnsPlugin
                }
            }), Object.defineProperty(t, "EtherscanPlugin", {
                enumerable: !0,
                get: function() {
                    return c.EtherscanPlugin
                }
            }), Object.defineProperty(t, "FeeDataNetworkPlugin", {
                enumerable: !0,
                get: function() {
                    return c.FeeDataNetworkPlugin
                }
            }), Object.defineProperty(t, "FetchUrlFeeDataNetworkPlugin", {
                enumerable: !0,
                get: function() {
                    return c.FetchUrlFeeDataNetworkPlugin
                }
            }), Object.defineProperty(t, "GasCostPlugin", {
                enumerable: !0,
                get: function() {
                    return c.GasCostPlugin
                }
            }), Object.defineProperty(t, "NetworkPlugin", {
                enumerable: !0,
                get: function() {
                    return c.NetworkPlugin
                }
            }), Object.defineProperty(t, "MulticoinProviderPlugin", {
                enumerable: !0,
                get: function() {
                    return c.MulticoinProviderPlugin
                }
            }), Object.defineProperty(t, "SocketBlockSubscriber", {
                enumerable: !0,
                get: function() {
                    return c.SocketBlockSubscriber
                }
            }), Object.defineProperty(t, "SocketEventSubscriber", {
                enumerable: !0,
                get: function() {
                    return c.SocketEventSubscriber
                }
            }), Object.defineProperty(t, "SocketPendingSubscriber", {
                enumerable: !0,
                get: function() {
                    return c.SocketPendingSubscriber
                }
            }), Object.defineProperty(t, "SocketSubscriber", {
                enumerable: !0,
                get: function() {
                    return c.SocketSubscriber
                }
            }), Object.defineProperty(t, "UnmanagedSubscriber", {
                enumerable: !0,
                get: function() {
                    return c.UnmanagedSubscriber
                }
            }), Object.defineProperty(t, "copyRequest", {
                enumerable: !0,
                get: function() {
                    return c.copyRequest
                }
            }), Object.defineProperty(t, "showThrottleMessage", {
                enumerable: !0,
                get: function() {
                    return c.showThrottleMessage
                }
            });
            var d = r(9404);
            Object.defineProperty(t, "accessListify", {
                enumerable: !0,
                get: function() {
                    return d.accessListify
                }
            }), Object.defineProperty(t, "computeAddress", {
                enumerable: !0,
                get: function() {
                    return d.computeAddress
                }
            }), Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return d.recoverAddress
                }
            }), Object.defineProperty(t, "Transaction", {
                enumerable: !0,
                get: function() {
                    return d.Transaction
                }
            });
            var h = r(82678);
            Object.defineProperty(t, "decodeBase58", {
                enumerable: !0,
                get: function() {
                    return h.decodeBase58
                }
            }), Object.defineProperty(t, "encodeBase58", {
                enumerable: !0,
                get: function() {
                    return h.encodeBase58
                }
            }), Object.defineProperty(t, "decodeBase64", {
                enumerable: !0,
                get: function() {
                    return h.decodeBase64
                }
            }), Object.defineProperty(t, "encodeBase64", {
                enumerable: !0,
                get: function() {
                    return h.encodeBase64
                }
            }), Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return h.concat
                }
            }), Object.defineProperty(t, "dataLength", {
                enumerable: !0,
                get: function() {
                    return h.dataLength
                }
            }), Object.defineProperty(t, "dataSlice", {
                enumerable: !0,
                get: function() {
                    return h.dataSlice
                }
            }), Object.defineProperty(t, "getBytes", {
                enumerable: !0,
                get: function() {
                    return h.getBytes
                }
            }), Object.defineProperty(t, "getBytesCopy", {
                enumerable: !0,
                get: function() {
                    return h.getBytesCopy
                }
            }), Object.defineProperty(t, "hexlify", {
                enumerable: !0,
                get: function() {
                    return h.hexlify
                }
            }), Object.defineProperty(t, "isHexString", {
                enumerable: !0,
                get: function() {
                    return h.isHexString
                }
            }), Object.defineProperty(t, "isBytesLike", {
                enumerable: !0,
                get: function() {
                    return h.isBytesLike
                }
            }), Object.defineProperty(t, "stripZerosLeft", {
                enumerable: !0,
                get: function() {
                    return h.stripZerosLeft
                }
            }), Object.defineProperty(t, "zeroPadBytes", {
                enumerable: !0,
                get: function() {
                    return h.zeroPadBytes
                }
            }), Object.defineProperty(t, "zeroPadValue", {
                enumerable: !0,
                get: function() {
                    return h.zeroPadValue
                }
            }), Object.defineProperty(t, "defineProperties", {
                enumerable: !0,
                get: function() {
                    return h.defineProperties
                }
            }), Object.defineProperty(t, "resolveProperties", {
                enumerable: !0,
                get: function() {
                    return h.resolveProperties
                }
            }), Object.defineProperty(t, "assert", {
                enumerable: !0,
                get: function() {
                    return h.assert
                }
            }), Object.defineProperty(t, "assertArgument", {
                enumerable: !0,
                get: function() {
                    return h.assertArgument
                }
            }), Object.defineProperty(t, "assertArgumentCount", {
                enumerable: !0,
                get: function() {
                    return h.assertArgumentCount
                }
            }), Object.defineProperty(t, "assertNormalize", {
                enumerable: !0,
                get: function() {
                    return h.assertNormalize
                }
            }), Object.defineProperty(t, "assertPrivate", {
                enumerable: !0,
                get: function() {
                    return h.assertPrivate
                }
            }), Object.defineProperty(t, "makeError", {
                enumerable: !0,
                get: function() {
                    return h.makeError
                }
            }), Object.defineProperty(t, "isCallException", {
                enumerable: !0,
                get: function() {
                    return h.isCallException
                }
            }), Object.defineProperty(t, "isError", {
                enumerable: !0,
                get: function() {
                    return h.isError
                }
            }), Object.defineProperty(t, "EventPayload", {
                enumerable: !0,
                get: function() {
                    return h.EventPayload
                }
            }), Object.defineProperty(t, "FetchRequest", {
                enumerable: !0,
                get: function() {
                    return h.FetchRequest
                }
            }), Object.defineProperty(t, "FetchResponse", {
                enumerable: !0,
                get: function() {
                    return h.FetchResponse
                }
            }), Object.defineProperty(t, "FetchCancelSignal", {
                enumerable: !0,
                get: function() {
                    return h.FetchCancelSignal
                }
            }), Object.defineProperty(t, "FixedNumber", {
                enumerable: !0,
                get: function() {
                    return h.FixedNumber
                }
            }), Object.defineProperty(t, "getBigInt", {
                enumerable: !0,
                get: function() {
                    return h.getBigInt
                }
            }), Object.defineProperty(t, "getNumber", {
                enumerable: !0,
                get: function() {
                    return h.getNumber
                }
            }), Object.defineProperty(t, "getUint", {
                enumerable: !0,
                get: function() {
                    return h.getUint
                }
            }), Object.defineProperty(t, "toBeArray", {
                enumerable: !0,
                get: function() {
                    return h.toBeArray
                }
            }), Object.defineProperty(t, "toBigInt", {
                enumerable: !0,
                get: function() {
                    return h.toBigInt
                }
            }), Object.defineProperty(t, "toBeHex", {
                enumerable: !0,
                get: function() {
                    return h.toBeHex
                }
            }), Object.defineProperty(t, "toNumber", {
                enumerable: !0,
                get: function() {
                    return h.toNumber
                }
            }), Object.defineProperty(t, "toQuantity", {
                enumerable: !0,
                get: function() {
                    return h.toQuantity
                }
            }), Object.defineProperty(t, "fromTwos", {
                enumerable: !0,
                get: function() {
                    return h.fromTwos
                }
            }), Object.defineProperty(t, "toTwos", {
                enumerable: !0,
                get: function() {
                    return h.toTwos
                }
            }), Object.defineProperty(t, "mask", {
                enumerable: !0,
                get: function() {
                    return h.mask
                }
            }), Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return h.formatEther
                }
            }), Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return h.parseEther
                }
            }), Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return h.formatUnits
                }
            }), Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return h.parseUnits
                }
            }), Object.defineProperty(t, "toUtf8Bytes", {
                enumerable: !0,
                get: function() {
                    return h.toUtf8Bytes
                }
            }), Object.defineProperty(t, "toUtf8CodePoints", {
                enumerable: !0,
                get: function() {
                    return h.toUtf8CodePoints
                }
            }), Object.defineProperty(t, "toUtf8String", {
                enumerable: !0,
                get: function() {
                    return h.toUtf8String
                }
            }), Object.defineProperty(t, "Utf8ErrorFuncs", {
                enumerable: !0,
                get: function() {
                    return h.Utf8ErrorFuncs
                }
            }), Object.defineProperty(t, "decodeRlp", {
                enumerable: !0,
                get: function() {
                    return h.decodeRlp
                }
            }), Object.defineProperty(t, "encodeRlp", {
                enumerable: !0,
                get: function() {
                    return h.encodeRlp
                }
            }), Object.defineProperty(t, "uuidV4", {
                enumerable: !0,
                get: function() {
                    return h.uuidV4
                }
            });
            var f = r(36989);
            Object.defineProperty(t, "Mnemonic", {
                enumerable: !0,
                get: function() {
                    return f.Mnemonic
                }
            }), Object.defineProperty(t, "BaseWallet", {
                enumerable: !0,
                get: function() {
                    return f.BaseWallet
                }
            }), Object.defineProperty(t, "HDNodeWallet", {
                enumerable: !0,
                get: function() {
                    return f.HDNodeWallet
                }
            }), Object.defineProperty(t, "HDNodeVoidWallet", {
                enumerable: !0,
                get: function() {
                    return f.HDNodeVoidWallet
                }
            }), Object.defineProperty(t, "Wallet", {
                enumerable: !0,
                get: function() {
                    return f.Wallet
                }
            }), Object.defineProperty(t, "defaultPath", {
                enumerable: !0,
                get: function() {
                    return f.defaultPath
                }
            }), Object.defineProperty(t, "getAccountPath", {
                enumerable: !0,
                get: function() {
                    return f.getAccountPath
                }
            }), Object.defineProperty(t, "getIndexedAccountPath", {
                enumerable: !0,
                get: function() {
                    return f.getIndexedAccountPath
                }
            }), Object.defineProperty(t, "isCrowdsaleJson", {
                enumerable: !0,
                get: function() {
                    return f.isCrowdsaleJson
                }
            }), Object.defineProperty(t, "isKeystoreJson", {
                enumerable: !0,
                get: function() {
                    return f.isKeystoreJson
                }
            }), Object.defineProperty(t, "decryptCrowdsaleJson", {
                enumerable: !0,
                get: function() {
                    return f.decryptCrowdsaleJson
                }
            }), Object.defineProperty(t, "decryptKeystoreJsonSync", {
                enumerable: !0,
                get: function() {
                    return f.decryptKeystoreJsonSync
                }
            }), Object.defineProperty(t, "decryptKeystoreJson", {
                enumerable: !0,
                get: function() {
                    return f.decryptKeystoreJson
                }
            }), Object.defineProperty(t, "encryptKeystoreJson", {
                enumerable: !0,
                get: function() {
                    return f.encryptKeystoreJson
                }
            }), Object.defineProperty(t, "encryptKeystoreJsonSync", {
                enumerable: !0,
                get: function() {
                    return f.encryptKeystoreJsonSync
                }
            });
            var p = r(96773);
            Object.defineProperty(t, "Wordlist", {
                enumerable: !0,
                get: function() {
                    return p.Wordlist
                }
            }), Object.defineProperty(t, "LangEn", {
                enumerable: !0,
                get: function() {
                    return p.LangEn
                }
            }), Object.defineProperty(t, "WordlistOwl", {
                enumerable: !0,
                get: function() {
                    return p.WordlistOwl
                }
            }), Object.defineProperty(t, "WordlistOwlA", {
                enumerable: !0,
                get: function() {
                    return p.WordlistOwlA
                }
            }), Object.defineProperty(t, "wordlists", {
                enumerable: !0,
                get: function() {
                    return p.wordlists
                }
            })
        },
        85574: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.id = void 0;
            let n = r(20021),
                i = r(82678);
            t.id = function(e) {
                return (0, n.keccak256)((0, i.toUtf8Bytes)(e))
            }
        },
        94194: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = t.TypedDataEncoder = t.solidityPackedSha256 = t.solidityPackedKeccak256 = t.solidityPacked = t.verifyMessage = t.hashMessage = t.dnsEncode = t.namehash = t.isValidName = t.ensNormalize = t.id = void 0;
            var n = r(85574);
            Object.defineProperty(t, "id", {
                enumerable: !0,
                get: function() {
                    return n.id
                }
            });
            var i = r(44126);
            Object.defineProperty(t, "ensNormalize", {
                enumerable: !0,
                get: function() {
                    return i.ensNormalize
                }
            }), Object.defineProperty(t, "isValidName", {
                enumerable: !0,
                get: function() {
                    return i.isValidName
                }
            }), Object.defineProperty(t, "namehash", {
                enumerable: !0,
                get: function() {
                    return i.namehash
                }
            }), Object.defineProperty(t, "dnsEncode", {
                enumerable: !0,
                get: function() {
                    return i.dnsEncode
                }
            });
            var s = r(87824);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return s.hashMessage
                }
            }), Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return s.verifyMessage
                }
            });
            var o = r(54303);
            Object.defineProperty(t, "solidityPacked", {
                enumerable: !0,
                get: function() {
                    return o.solidityPacked
                }
            }), Object.defineProperty(t, "solidityPackedKeccak256", {
                enumerable: !0,
                get: function() {
                    return o.solidityPackedKeccak256
                }
            }), Object.defineProperty(t, "solidityPackedSha256", {
                enumerable: !0,
                get: function() {
                    return o.solidityPackedSha256
                }
            });
            var a = r(27788);
            Object.defineProperty(t, "TypedDataEncoder", {
                enumerable: !0,
                get: function() {
                    return a.TypedDataEncoder
                }
            }), Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return a.verifyTypedData
                }
            })
        },
        87824: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = t.hashMessage = void 0;
            let n = r(20021),
                i = r(86872),
                s = r(9404),
                o = r(82678);

            function a(e) {
                return "string" == typeof e && (e = (0, o.toUtf8Bytes)(e)), (0, n.keccak256)((0, o.concat)([(0, o.toUtf8Bytes)(i.MessagePrefix), (0, o.toUtf8Bytes)(String(e.length)), e]))
            }
            t.hashMessage = a, t.verifyMessage = function(e, t) {
                let r = a(e);
                return (0, s.recoverAddress)(r, t)
            }
        },
        44126: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dnsEncode = t.namehash = t.isValidName = t.ensNormalize = void 0;
            let n = r(20021),
                i = r(82678),
                s = r(93958),
                o = new Uint8Array(32);

            function a(e) {
                return (0, i.assertArgument)(0 !== e.length, "invalid ENS name; empty component", "comp", e), e
            }

            function l(e) {
                let t = (0, i.toUtf8Bytes)(u(e)),
                    r = [];
                if (0 === e.length) return r;
                let n = 0;
                for (let e = 0; e < t.length; e++) {
                    let i = t[e];
                    46 === i && (r.push(a(t.slice(n, e))), n = e + 1)
                }
                return (0, i.assertArgument)(n < t.length, "invalid ENS name; empty component", "name", e), r.push(a(t.slice(n))), r
            }

            function u(e) {
                try {
                    return (0, s.ens_normalize)(e)
                } catch (t) {
                    (0, i.assertArgument)(!1, `invalid ENS name (${t.message})`, "name", e)
                }
            }
            o.fill(0), t.ensNormalize = u, t.isValidName = function(e) {
                try {
                    return 0 !== l(e).length
                } catch (e) {}
                return !1
            }, t.namehash = function(e) {
                (0, i.assertArgument)("string" == typeof e, "invalid ENS name; not a string", "name", e);
                let t = o,
                    r = l(e);
                for (; r.length;) t = (0, n.keccak256)((0, i.concat)([t, (0, n.keccak256)(r.pop())]));
                return (0, i.hexlify)(t)
            }, t.dnsEncode = function(e) {
                return (0, i.hexlify)((0, i.concat)(l(e).map(e => {
                    if (e.length > 63) throw Error("invalid DNS encoded entry; length exceeds 63 bytes");
                    let t = new Uint8Array(e.length + 1);
                    return t.set(e, 1), t[0] = t.length - 1, t
                }))) + "00"
            }
        },
        54303: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.solidityPackedSha256 = t.solidityPackedKeccak256 = t.solidityPacked = void 0;
            let n = r(29527),
                i = r(20021),
                s = r(82678),
                o = RegExp("^bytes([0-9]+)$"),
                a = RegExp("^(u?int)([0-9]*)$"),
                l = RegExp("^(.*)\\[([0-9]*)\\]$");

            function u(e, t) {
                (0, s.assertArgument)(e.length === t.length, "wrong number of values; expected ${ types.length }", "values", t);
                let r = [];
                return e.forEach(function(e, i) {
                    r.push(function e(t, r, i) {
                        switch (t) {
                            case "address":
                                if (i) return (0, s.getBytes)((0, s.zeroPadValue)(r, 32));
                                return (0, s.getBytes)((0, n.getAddress)(r));
                            case "string":
                                return (0, s.toUtf8Bytes)(r);
                            case "bytes":
                                return (0, s.getBytes)(r);
                            case "bool":
                                if (r = r ? "0x01" : "0x00", i) return (0, s.getBytes)((0, s.zeroPadValue)(r, 32));
                                return (0, s.getBytes)(r)
                        }
                        let u = t.match(a);
                        if (u) {
                            let e = "int" === u[1],
                                n = parseInt(u[2] || "256");
                            return (0, s.assertArgument)((!u[2] || u[2] === String(n)) && n % 8 == 0 && 0 !== n && n <= 256, "invalid number type", "type", t), i && (n = 256), e && (r = (0, s.toTwos)(r, n)), (0, s.getBytes)((0, s.zeroPadValue)((0, s.toBeArray)(r), n / 8))
                        }
                        if (u = t.match(o)) {
                            let e = parseInt(u[1]);
                            return ((0, s.assertArgument)(String(e) === u[1] && 0 !== e && e <= 32, "invalid bytes type", "type", t), (0, s.assertArgument)((0, s.dataLength)(r) === e, `invalid value for ${t}`, "value", r), i) ? (0, s.getBytes)((0, s.zeroPadBytes)(r, 32)) : r
                        }
                        if ((u = t.match(l)) && Array.isArray(r)) {
                            let n = u[1],
                                i = parseInt(u[2] || String(r.length));
                            (0, s.assertArgument)(i === r.length, `invalid array length for ${t}`, "value", r);
                            let o = [];
                            return r.forEach(function(t) {
                                o.push(e(n, t, !0))
                            }), (0, s.getBytes)((0, s.concat)(o))
                        }(0, s.assertArgument)(!1, "invalid type", "type", t)
                    }(e, t[i]))
                }), (0, s.hexlify)((0, s.concat)(r))
            }
            t.solidityPacked = u, t.solidityPackedKeccak256 = function(e, t) {
                return (0, i.keccak256)(u(e, t))
            }, t.solidityPackedSha256 = function(e, t) {
                return (0, i.sha256)(u(e, t))
            }
        },
        27788: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = t.TypedDataEncoder = void 0;
            let n = r(29527),
                i = r(20021),
                s = r(9404),
                o = r(82678),
                a = r(85574),
                l = new Uint8Array(32);
            l.fill(0);
            let u = BigInt(-1),
                c = BigInt(0),
                d = BigInt(1),
                h = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                f = (0, o.toBeHex)(d, 32),
                p = (0, o.toBeHex)(c, 32),
                g = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                m = ["name", "version", "chainId", "verifyingContract", "salt"];

            function y(e) {
                return function(t) {
                    return (0, o.assertArgument)("string" == typeof t, `invalid domain value for ${JSON.stringify(e)}`, `domain.${e}`, t), t
                }
            }
            let b = {
                name: y("name"),
                version: y("version"),
                chainId: function(e) {
                    let t = (0, o.getBigInt)(e, "domain.chainId");
                    return ((0, o.assertArgument)(t >= 0, "invalid chain ID", "domain.chainId", e), Number.isSafeInteger(t)) ? Number(t) : (0, o.toQuantity)(t)
                },
                verifyingContract: function(e) {
                    try {
                        return (0, n.getAddress)(e).toLowerCase()
                    } catch (e) {}(0, o.assertArgument)(!1, 'invalid domain value "verifyingContract"', "domain.verifyingContract", e)
                },
                salt: function(e) {
                    let t = (0, o.getBytes)(e, "domain.salt");
                    return (0, o.assertArgument)(32 === t.length, 'invalid domain value "salt"', "domain.salt", e), (0, o.hexlify)(t)
                }
            };

            function w(e) {
                {
                    let t = e.match(/^(u?)int(\d*)$/);
                    if (t) {
                        let r = "" === t[1],
                            n = parseInt(t[2] || "256");
                        (0, o.assertArgument)(n % 8 == 0 && 0 !== n && n <= 256 && (null == t[2] || t[2] === String(n)), "invalid numeric width", "type", e);
                        let i = (0, o.mask)(h, r ? n - 1 : n),
                            s = r ? (i + d) * u : c;
                        return function(t) {
                            let n = (0, o.getBigInt)(t, "value");
                            return (0, o.assertArgument)(n >= s && n <= i, `value out-of-bounds for ${e}`, "value", n), (0, o.toBeHex)(r ? (0, o.toTwos)(n, 256) : n, 32)
                        }
                    }
                } {
                    let t = e.match(/^bytes(\d+)$/);
                    if (t) {
                        let r = parseInt(t[1]);
                        return (0, o.assertArgument)(0 !== r && r <= 32 && t[1] === String(r), "invalid bytes width", "type", e),
                            function(t) {
                                let n = (0, o.getBytes)(t);
                                return (0, o.assertArgument)(n.length === r, `invalid length for ${e}`, "value", t),
                                    function(e) {
                                        let t = (0, o.getBytes)(e),
                                            r = t.length % 32;
                                        return r ? (0, o.concat)([t, l.slice(r)]) : (0, o.hexlify)(t)
                                    }(t)
                            }
                    }
                }
                switch (e) {
                    case "address":
                        return function(e) {
                            return (0, o.zeroPadValue)((0, n.getAddress)(e), 32)
                        };
                    case "bool":
                        return function(e) {
                            return e ? f : p
                        };
                    case "bytes":
                        return function(e) {
                            return (0, i.keccak256)(e)
                        };
                    case "string":
                        return function(e) {
                            return (0, a.id)(e)
                        }
                }
                return null
            }

            function A(e, t) {
                return `${e}(${t.map(({name:e,type:t})=>t+" "+e).join(",")})`
            }
            class v {
                primaryType;#
                S;
                get types() {
                    return JSON.parse(this.#S)
                }#
                O;#
                k;
                constructor(e) {
                    this.#S = JSON.stringify(e), this.#O = new Map, this.#k = new Map;
                    let t = new Map,
                        r = new Map,
                        n = new Map;
                    for (let i in Object.keys(e).forEach(e => {
                            t.set(e, new Set), r.set(e, []), n.set(e, new Set)
                        }), e) {
                        let n = new Set;
                        for (let s of e[i]) {
                            (0, o.assertArgument)(!n.has(s.name), `duplicate variable name ${JSON.stringify(s.name)} in ${JSON.stringify(i)}`, "types", e), n.add(s.name);
                            let a = s.type.match(/^([^\x5b]*)(\x5b|$)/)[1] || null;
                            (0, o.assertArgument)(a !== i, `circular type reference to ${JSON.stringify(a)}`, "types", e);
                            let l = w(a);
                            l || ((0, o.assertArgument)(r.has(a), `unknown type ${JSON.stringify(a)}`, "types", e), r.get(a).push(i), t.get(i).add(a))
                        }
                    }
                    let i = Array.from(r.keys()).filter(e => 0 === r.get(e).length);
                    for (let [s, a] of ((0, o.assertArgument)(0 !== i.length, "missing primary type", "types", e), (0, o.assertArgument)(1 === i.length, `ambiguous primary types or unused types: ${i.map(e=>JSON.stringify(e)).join(", ")}`, "types", e), (0, o.defineProperties)(this, {
                            primaryType: i[0]
                        }), ! function i(s, a) {
                            for (let l of ((0, o.assertArgument)(!a.has(s), `circular type reference to ${JSON.stringify(s)}`, "types", e), a.add(s), t.get(s)))
                                if (r.has(l))
                                    for (let e of (i(l, a), a)) n.get(e).add(l);
                            a.delete(s)
                        }(this.primaryType, new Set), n)) {
                        let t = Array.from(a);
                        t.sort(), this.#O.set(s, A(s, e[s]) + t.map(t => A(t, e[t])).join(""))
                    }
                }
                getEncoder(e) {
                    let t = this.#k.get(e);
                    return t || (t = this.#C(e), this.#k.set(e, t)), t
                }#
                C(e) {
                    {
                        let t = w(e);
                        if (t) return t
                    }
                    let t = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (t) {
                        let e = t[1],
                            r = this.getEncoder(e);
                        return n => {
                            (0, o.assertArgument)(!t[3] || parseInt(t[3]) === n.length, `array length mismatch; expected length ${parseInt(t[3])}`, "value", n);
                            let s = n.map(r);
                            return this.#O.has(e) && (s = s.map(i.keccak256)), (0, i.keccak256)((0, o.concat)(s))
                        }
                    }
                    let r = this.types[e];
                    if (r) {
                        let t = (0, a.id)(this.#O.get(e));
                        return e => {
                            let n = r.map(({
                                name: t,
                                type: r
                            }) => {
                                let n = this.getEncoder(r)(e[t]);
                                return this.#O.has(r) ? (0, i.keccak256)(n) : n
                            });
                            return n.unshift(t), (0, o.concat)(n)
                        }
                    }(0, o.assertArgument)(!1, `unknown type: ${e}`, "type", e)
                }
                encodeType(e) {
                    let t = this.#O.get(e);
                    return (0, o.assertArgument)(t, `unknown type: ${JSON.stringify(e)}`, "name", e), t
                }
                encodeData(e, t) {
                    return this.getEncoder(e)(t)
                }
                hashStruct(e, t) {
                    return (0, i.keccak256)(this.encodeData(e, t))
                }
                encode(e) {
                    return this.encodeData(this.primaryType, e)
                }
                hash(e) {
                    return this.hashStruct(this.primaryType, e)
                }
                _visit(e, t, r) {
                    {
                        let n = w(e);
                        if (n) return r(e, t)
                    }
                    let n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (n) return (0, o.assertArgument)(!n[3] || parseInt(n[3]) === t.length, `array length mismatch; expected length ${parseInt(n[3])}`, "value", t), t.map(e => this._visit(n[1], e, r));
                    let i = this.types[e];
                    if (i) return i.reduce((e, {
                        name: n,
                        type: i
                    }) => (e[n] = this._visit(i, t[n], r), e), {});
                    (0, o.assertArgument)(!1, `unknown type: ${e}`, "type", e)
                }
                visit(e, t) {
                    return this._visit(this.primaryType, e, t)
                }
                static from(e) {
                    return new v(e)
                }
                static getPrimaryType(e) {
                    return v.from(e).primaryType
                }
                static hashStruct(e, t, r) {
                    return v.from(t).hashStruct(e, r)
                }
                static hashDomain(e) {
                    let t = [];
                    for (let r in e) {
                        if (null == e[r]) continue;
                        let n = g[r];
                        (0, o.assertArgument)(n, `invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", e), t.push({
                            name: r,
                            type: n
                        })
                    }
                    return t.sort((e, t) => m.indexOf(e.name) - m.indexOf(t.name)), v.hashStruct("EIP712Domain", {
                        EIP712Domain: t
                    }, e)
                }
                static encode(e, t, r) {
                    return (0, o.concat)(["0x1901", v.hashDomain(e), v.from(t).hash(r)])
                }
                static hash(e, t, r) {
                    return (0, i.keccak256)(v.encode(e, t, r))
                }
                static async resolveNames(e, t, r, n) {
                    for (let t in e = Object.assign({}, e)) null == e[t] && delete e[t];
                    let i = {};
                    e.verifyingContract && !(0, o.isHexString)(e.verifyingContract, 20) && (i[e.verifyingContract] = "0x");
                    let s = v.from(t);
                    for (let e in s.visit(r, (e, t) => ("address" !== e || (0, o.isHexString)(t, 20) || (i[t] = "0x"), t)), i) i[e] = await n(e);
                    return e.verifyingContract && i[e.verifyingContract] && (e.verifyingContract = i[e.verifyingContract]), {
                        domain: e,
                        value: r = s.visit(r, (e, t) => "address" === e && i[t] ? i[t] : t)
                    }
                }
                static getPayload(e, t, r) {
                    v.hashDomain(e);
                    let n = {},
                        i = [];
                    m.forEach(t => {
                        let r = e[t];
                        null != r && (n[t] = b[t](r), i.push({
                            name: t,
                            type: g[t]
                        }))
                    });
                    let s = v.from(t),
                        a = Object.assign({}, t);
                    return (0, o.assertArgument)(null == a.EIP712Domain, "types must not contain EIP712Domain type", "types.EIP712Domain", t), a.EIP712Domain = i, s.encode(r), {
                        types: a,
                        domain: n,
                        primaryType: s.primaryType,
                        message: s.visit(r, (e, t) => {
                            if (e.match(/^bytes(\d*)/)) return (0, o.hexlify)((0, o.getBytes)(t));
                            if (e.match(/^u?int/)) return (0, o.getBigInt)(t).toString();
                            switch (e) {
                                case "address":
                                    return t.toLowerCase();
                                case "bool":
                                    return !!t;
                                case "string":
                                    return (0, o.assertArgument)("string" == typeof t, "invalid string", "value", t), t
                            }(0, o.assertArgument)(!1, "unsupported type", "type", e)
                        })
                    }
                }
            }
            t.TypedDataEncoder = v, t.verifyTypedData = function(e, t, r, n) {
                return (0, s.recoverAddress)(v.hash(e, t, r), n)
            }
        },
        55232: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ethers = void 0;
            let n = r(54604),
                i = n.__importStar(r(22110));
            t.ethers = i, n.__exportStar(r(22110), t)
        },
        96570: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AbstractProvider = t.UnmanagedSubscriber = void 0;
            let n = r(29527),
                i = r(86872),
                s = r(81374),
                o = r(94194),
                a = r(9404),
                l = r(82678),
                u = r(18772),
                c = r(47627),
                d = r(92070),
                h = r(16203),
                f = r(58402),
                p = BigInt(2);

            function g(e) {
                return e && "function" == typeof e.then
            }

            function m(e, t) {
                return e + ":" + JSON.stringify(t, (e, t) => {
                    if (null == t) return "null";
                    if ("bigint" == typeof t) return `bigint:${t.toString()}`;
                    if ("string" == typeof t) return t.toLowerCase();
                    if ("object" == typeof t && !Array.isArray(t)) {
                        let e = Object.keys(t);
                        return e.sort(), e.reduce((e, r) => (e[r] = t[r], e), {})
                    }
                    return t
                })
            }
            class y {
                name;
                constructor(e) {
                    (0, l.defineProperties)(this, {
                        name: e
                    })
                }
                start() {}
                stop() {}
                pause(e) {}
                resume() {}
            }

            function b(e) {
                return (e = Array.from(new Set(e).values())).sort(), e
            }
            async function w(e, t) {
                if (null == e) throw Error("invalid event");
                if (Array.isArray(e) && (e = {
                        topics: e
                    }), "string" == typeof e) switch (e) {
                    case "block":
                    case "pending":
                    case "debug":
                    case "error":
                    case "network":
                        return {
                            type: e,
                            tag: e
                        }
                }
                if ((0, l.isHexString)(e, 32)) {
                    let t = e.toLowerCase();
                    return {
                        type: "transaction",
                        tag: m("tx", {
                            hash: t
                        }),
                        hash: t
                    }
                }
                if (e.orphan) {
                    let t = e;
                    return {
                        type: "orphan",
                        tag: m("orphan", t),
                        filter: JSON.parse(JSON.stringify(t))
                    }
                }
                if (e.address || e.topics) {
                    let r = e,
                        i = {
                            topics: (r.topics || []).map(e => null == e ? null : Array.isArray(e) ? b(e.map(e => e.toLowerCase())) : e.toLowerCase())
                        };
                    if (r.address) {
                        let e = [],
                            s = [],
                            o = r => {
                                (0, l.isHexString)(r) ? e.push(r): s.push((async () => {
                                    e.push(await (0, n.resolveAddress)(r, t))
                                })())
                            };
                        Array.isArray(r.address) ? r.address.forEach(o) : o(r.address), s.length && await Promise.all(s), i.address = b(e.map(e => e.toLowerCase()))
                    }
                    return {
                        filter: i,
                        tag: m("event", i),
                        type: "event"
                    }
                }(0, l.assertArgument)(!1, "unknown ProviderEvent", "event", e)
            }

            function A() {
                return new Date().getTime()
            }
            t.UnmanagedSubscriber = y;
            let v = {
                cacheTimeout: 250,
                pollingInterval: 4e3
            };

            function E(e, t) {
                if ("0x" === e) return null;
                try {
                    let r = (0, l.getNumber)((0, l.dataSlice)(e, t, t + 32)),
                        n = (0, l.getNumber)((0, l.dataSlice)(e, r, r + 32));
                    return (0, l.dataSlice)(e, r + 32, r + 32 + n)
                } catch (e) {}
                return null
            }

            function P(e) {
                let t = (0, l.toBeArray)(e);
                if (t.length > 32) throw Error("internal; should not happen");
                let r = new Uint8Array(32);
                return r.set(t, 32 - t.length), r
            }
            t.AbstractProvider = class {#
                x;#
                T;#
                N;#
                _;#
                B;#
                D;#
                I;#
                R;#
                M;#
                L;#
                U;#
                m;
                constructor(e, t) {
                    if (this.#m = Object.assign({}, v, t || {}), "any" === e) this.#D = !0, this.#B = null;
                    else if (e) {
                        let t = d.Network.from(e);
                        this.#D = !1, this.#B = Promise.resolve(t), setTimeout(() => {
                            this.emit("network", t, null)
                        }, 0)
                    } else this.#D = !1, this.#B = null;
                    this.#R = -1, this.#I = new Map, this.#x = new Map, this.#T = new Map, this.#N = null, this.#_ = !1, this.#M = 1, this.#L = new Map, this.#U = !1
                }
                get pollingInterval() {
                    return this.#m.pollingInterval
                }
                get provider() {
                    return this
                }
                get plugins() {
                    return Array.from(this.#T.values())
                }
                attachPlugin(e) {
                    if (this.#T.get(e.name)) throw Error(`cannot replace existing plugin: ${e.name} `);
                    return this.#T.set(e.name, e.connect(this)), this
                }
                getPlugin(e) {
                    return this.#T.get(e) || null
                }
                get disableCcipRead() {
                    return this.#U
                }
                set disableCcipRead(e) {
                    this.#U = !!e
                }
                async# j(e) {
                    let t = this.#m.cacheTimeout;
                    if (t < 0) return await this._perform(e);
                    let r = m(e.method, e),
                        n = this.#I.get(r);
                    return n || (n = this._perform(e), this.#I.set(r, n), setTimeout(() => {
                        this.#I.get(r) === n && this.#I.delete(r)
                    }, t)), await n
                }
                async ccipReadFetch(e, t, r) {
                    if (this.disableCcipRead || 0 === r.length || null == e.to) return null;
                    let n = e.to.toLowerCase(),
                        i = t.toLowerCase(),
                        s = [];
                    for (let t = 0; t < r.length; t++) {
                        let o = r[t],
                            a = o.replace("{sender}", n).replace("{data}", i),
                            u = new l.FetchRequest(a); - 1 === o.indexOf("{data}") && (u.body = {
                            data: i,
                            sender: n
                        }), this.emit("debug", {
                            action: "sendCcipReadFetchRequest",
                            request: u,
                            index: t,
                            urls: r
                        });
                        let c = "unknown error",
                            d = await u.send();
                        try {
                            let e = d.bodyJson;
                            if (e.data) return this.emit("debug", {
                                action: "receiveCcipReadFetchResult",
                                request: u,
                                result: e
                            }), e.data;
                            e.message && (c = e.message), this.emit("debug", {
                                action: "receiveCcipReadFetchError",
                                request: u,
                                result: e
                            })
                        } catch (e) {}(0, l.assert)(d.statusCode < 400 || d.statusCode >= 500, `response not found during CCIP fetch: ${c}`, "OFFCHAIN_FAULT", {
                            reason: "404_MISSING_RESOURCE",
                            transaction: e,
                            info: {
                                url: o,
                                errorMessage: c
                            }
                        }), s.push(c)
                    }(0, l.assert)(!1, `error encountered during CCIP fetch: ${s.map(e=>JSON.stringify(e)).join(", ")}`, "OFFCHAIN_FAULT", {
                        reason: "500_SERVER_ERROR",
                        transaction: e,
                        info: {
                            urls: r,
                            errorMessages: s
                        }
                    })
                }
                _wrapBlock(e, t) {
                    return new h.Block((0, c.formatBlock)(e), this)
                }
                _wrapLog(e, t) {
                    return new h.Log((0, c.formatLog)(e), this)
                }
                _wrapTransactionReceipt(e, t) {
                    return new h.TransactionReceipt((0, c.formatTransactionReceipt)(e), this)
                }
                _wrapTransactionResponse(e, t) {
                    return new h.TransactionResponse((0, c.formatTransactionResponse)(e), this)
                }
                _detectNetwork() {
                    (0, l.assert)(!1, "sub-classes must implement this", "UNSUPPORTED_OPERATION", {
                        operation: "_detectNetwork"
                    })
                }
                async _perform(e) {
                    (0, l.assert)(!1, `unsupported method: ${e.method}`, "UNSUPPORTED_OPERATION", {
                        operation: e.method,
                        info: e
                    })
                }
                async getBlockNumber() {
                    let e = (0, l.getNumber)(await this.#j({
                        method: "getBlockNumber"
                    }), "%response");
                    return this.#R >= 0 && (this.#R = e), e
                }
                _getAddress(e) {
                    return (0, n.resolveAddress)(e, this)
                }
                _getBlockTag(e) {
                    if (null == e) return "latest";
                    switch (e) {
                        case "earliest":
                            return "0x0";
                        case "latest":
                        case "pending":
                        case "safe":
                        case "finalized":
                            return e
                    }
                    return (0, l.isHexString)(e) ? (0, l.isHexString)(e, 32) ? e : (0, l.toQuantity)(e) : ("bigint" == typeof e && (e = (0, l.getNumber)(e, "blockTag")), "number" == typeof e) ? e >= 0 ? (0, l.toQuantity)(e) : this.#R >= 0 ? (0, l.toQuantity)(this.#R + e) : this.getBlockNumber().then(t => (0, l.toQuantity)(t + e)) : void(0, l.assertArgument)(!1, "invalid blockTag", "blockTag", e)
                }
                _getFilter(e) {
                    let t, r;
                    let n = (e.topics || []).map(e => null == e ? null : Array.isArray(e) ? b(e.map(e => e.toLowerCase())) : e.toLowerCase()),
                        i = "blockHash" in e ? e.blockHash : void 0,
                        s = (e, t, r) => {
                            let s;
                            switch (e.length) {
                                case 0:
                                    break;
                                case 1:
                                    s = e[0];
                                    break;
                                default:
                                    e.sort(), s = e
                            }
                            if (i && (null != t || null != r)) throw Error("invalid filter");
                            let o = {};
                            return s && (o.address = s), n.length && (o.topics = n), t && (o.fromBlock = t), r && (o.toBlock = r), i && (o.blockHash = i), o
                        },
                        o = [];
                    if (e.address) {
                        if (Array.isArray(e.address))
                            for (let t of e.address) o.push(this._getAddress(t));
                        else o.push(this._getAddress(e.address))
                    }
                    return "fromBlock" in e && (t = this._getBlockTag(e.fromBlock)), ("toBlock" in e && (r = this._getBlockTag(e.toBlock)), o.filter(e => "string" != typeof e).length || null != t && "string" != typeof t || null != r && "string" != typeof r) ? Promise.all([Promise.all(o), t, r]).then(e => s(e[0], e[1], e[2])) : s(o, t, r)
                }
                _getTransactionRequest(e) {
                    let t = (0, h.copyRequest)(e),
                        r = [];
                    if (["to", "from"].forEach(e => {
                            if (null == t[e]) return;
                            let i = (0, n.resolveAddress)(t[e]);
                            g(i) ? r.push(async function() {
                                t[e] = await i
                            }()) : t[e] = i
                        }), null != t.blockTag) {
                        let e = this._getBlockTag(t.blockTag);
                        g(e) ? r.push(async function() {
                            t.blockTag = await e
                        }()) : t.blockTag = e
                    }
                    return r.length ? async function() {
                        return await Promise.all(r), t
                    }() : t
                }
                async getNetwork() {
                    if (null == this.#B) {
                        let e = this._detectNetwork().then(e => (this.emit("network", e, null), e), t => {
                            throw this.#B === e && (this.#B = null), t
                        });
                        return this.#B = e, (await e).clone()
                    }
                    let e = this.#B,
                        [t, r] = await Promise.all([e, this._detectNetwork()]);
                    return t.chainId !== r.chainId && (this.#D ? (this.emit("network", r, t), this.#B === e && (this.#B = Promise.resolve(r))) : (0, l.assert)(!1, `network changed: ${t.chainId} => ${r.chainId} `, "NETWORK_ERROR", {
                        event: "changed"
                    })), t.clone()
                }
                async getFeeData() {
                    let e = await this.getNetwork(),
                        t = async () => {
                            let {
                                _block: t,
                                gasPrice: r
                            } = await (0, l.resolveProperties)({
                                _block: this.#F("latest", !1),
                                gasPrice: (async () => {
                                    try {
                                        let e = await this.#j({
                                            method: "getGasPrice"
                                        });
                                        return (0, l.getBigInt)(e, "%response")
                                    } catch (e) {}
                                    return null
                                })()
                            }), n = null, i = null, s = this._wrapBlock(t, e);
                            return s && s.baseFeePerGas && (i = BigInt("1000000000"), n = s.baseFeePerGas * p + i), new h.FeeData(r, n, i)
                        },
                        r = e.getPlugin("org.ethers.plugins.network.FetchUrlFeeDataPlugin");
                    if (r) {
                        let e = new l.FetchRequest(r.url),
                            n = await r.processFunc(t, this, e);
                        return new h.FeeData(n.gasPrice, n.maxFeePerGas, n.maxPriorityFeePerGas)
                    }
                    return await t()
                }
                async estimateGas(e) {
                    let t = this._getTransactionRequest(e);
                    return g(t) && (t = await t), (0, l.getBigInt)(await this.#j({
                        method: "estimateGas",
                        transaction: t
                    }), "%response")
                }
                async# H(e, t, r) {
                    (0, l.assert)(r < 10, "CCIP read exceeded maximum redirections", "OFFCHAIN_FAULT", {
                        reason: "TOO_MANY_REDIRECTS",
                        transaction: Object.assign({}, e, {
                            blockTag: t,
                            enableCcipRead: !0
                        })
                    });
                    let i = (0, h.copyRequest)(e);
                    try {
                        return (0, l.hexlify)(await this._perform({
                            method: "call",
                            transaction: i,
                            blockTag: t
                        }))
                    } catch (e) {
                        if (!this.disableCcipRead && (0, l.isCallException)(e) && e.data && r >= 0 && "latest" === t && null != i.to && "0x556f1830" === (0, l.dataSlice)(e.data, 0, 4)) {
                            let s;
                            let o = e.data,
                                a = await (0, n.resolveAddress)(i.to, this);
                            try {
                                s = function(e) {
                                    let t = {
                                        sender: "",
                                        urls: [],
                                        calldata: "",
                                        selector: "",
                                        extraData: "",
                                        errorArgs: []
                                    };
                                    (0, l.assert)((0, l.dataLength)(e) >= 160, "insufficient OffchainLookup data", "OFFCHAIN_FAULT", {
                                        reason: "insufficient OffchainLookup data"
                                    });
                                    let r = (0, l.dataSlice)(e, 0, 32);
                                    (0, l.assert)((0, l.dataSlice)(r, 0, 12) === (0, l.dataSlice)(O, 0, 12), "corrupt OffchainLookup sender", "OFFCHAIN_FAULT", {
                                        reason: "corrupt OffchainLookup sender"
                                    }), t.sender = (0, l.dataSlice)(r, 12);
                                    try {
                                        let r = [],
                                            n = (0, l.getNumber)((0, l.dataSlice)(e, 32, 64)),
                                            i = (0, l.getNumber)((0, l.dataSlice)(e, n, n + 32)),
                                            s = (0, l.dataSlice)(e, n + 32);
                                        for (let e = 0; e < i; e++) {
                                            let t = function(e, t) {
                                                try {
                                                    let r = E(e, t);
                                                    if (r) return (0, l.toUtf8String)(r)
                                                } catch (e) {}
                                                return null
                                            }(s, 32 * e);
                                            if (null == t) throw Error("abort");
                                            r.push(t)
                                        }
                                        t.urls = r
                                    } catch (e) {
                                        (0, l.assert)(!1, "corrupt OffchainLookup urls", "OFFCHAIN_FAULT", {
                                            reason: "corrupt OffchainLookup urls"
                                        })
                                    }
                                    try {
                                        let r = E(e, 64);
                                        if (null == r) throw Error("abort");
                                        t.calldata = r
                                    } catch (e) {
                                        (0, l.assert)(!1, "corrupt OffchainLookup calldata", "OFFCHAIN_FAULT", {
                                            reason: "corrupt OffchainLookup calldata"
                                        })
                                    }(0, l.assert)((0, l.dataSlice)(e, 100, 128) === (0, l.dataSlice)(O, 0, 28), "corrupt OffchainLookup callbaackSelector", "OFFCHAIN_FAULT", {
                                        reason: "corrupt OffchainLookup callbaackSelector"
                                    }), t.selector = (0, l.dataSlice)(e, 96, 100);
                                    try {
                                        let r = E(e, 128);
                                        if (null == r) throw Error("abort");
                                        t.extraData = r
                                    } catch (e) {
                                        (0, l.assert)(!1, "corrupt OffchainLookup extraData", "OFFCHAIN_FAULT", {
                                            reason: "corrupt OffchainLookup extraData"
                                        })
                                    }
                                    return t.errorArgs = "sender,urls,calldata,selector,extraData".split(/,/).map(e => t[e]), t
                                }((0, l.dataSlice)(e.data, 4))
                            } catch (e) {
                                (0, l.assert)(!1, e.message, "OFFCHAIN_FAULT", {
                                    reason: "BAD_DATA",
                                    transaction: i,
                                    info: {
                                        data: o
                                    }
                                })
                            }(0, l.assert)(s.sender.toLowerCase() === a.toLowerCase(), "CCIP Read sender mismatch", "CALL_EXCEPTION", {
                                action: "call",
                                data: o,
                                reason: "OffchainLookup",
                                transaction: i,
                                invocation: null,
                                revert: {
                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                    name: "OffchainLookup",
                                    args: s.errorArgs
                                }
                            });
                            let u = await this.ccipReadFetch(i, s.calldata, s.urls);
                            (0, l.assert)(null != u, "CCIP Read failed to fetch data", "OFFCHAIN_FAULT", {
                                reason: "FETCH_FAILED",
                                transaction: i,
                                info: {
                                    data: e.data,
                                    errorArgs: s.errorArgs
                                }
                            });
                            let c = {
                                to: a,
                                data: (0, l.concat)([s.selector, function(e) {
                                    let t = [],
                                        r = 0;
                                    for (let n = 0; n < e.length; n++) t.push(S), r += 32;
                                    for (let n = 0; n < e.length; n++) {
                                        let i = (0, l.getBytes)(e[n]);
                                        t[n] = P(r), t.push(P(i.length)), t.push(function(e) {
                                            if (e.length % 32 == 0) return e;
                                            let t = new Uint8Array(32 * Math.ceil(e.length / 32));
                                            return t.set(e), t
                                        }(i)), r += 32 + 32 * Math.ceil(i.length / 32)
                                    }
                                    return (0, l.concat)(t)
                                }([u, s.extraData])])
                            };
                            this.emit("debug", {
                                action: "sendCcipReadCall",
                                transaction: c
                            });
                            try {
                                let e = await this.#H(c, t, r + 1);
                                return this.emit("debug", {
                                    action: "receiveCcipReadCallResult",
                                    transaction: Object.assign({}, c),
                                    result: e
                                }), e
                            } catch (e) {
                                throw this.emit("debug", {
                                    action: "receiveCcipReadCallError",
                                    transaction: Object.assign({}, c),
                                    error: e
                                }), e
                            }
                        }
                        throw e
                    }
                }
                async# $(e) {
                    let {
                        value: t
                    } = await (0, l.resolveProperties)({
                        network: this.getNetwork(),
                        value: e
                    });
                    return t
                }
                async call(e) {
                    let {
                        tx: t,
                        blockTag: r
                    } = await (0, l.resolveProperties)({
                        tx: this._getTransactionRequest(e),
                        blockTag: this._getBlockTag(e.blockTag)
                    });
                    return await this.#$(this.#H(t, r, e.enableCcipRead ? 0 : -1))
                }
                async# K(e, t, r) {
                    let n = this._getAddress(t),
                        i = this._getBlockTag(r);
                    return ("string" != typeof n || "string" != typeof i) && ([n, i] = await Promise.all([n, i])), await this.#$(this.#j(Object.assign(e, {
                        address: n,
                        blockTag: i
                    })))
                }
                async getBalance(e, t) {
                    return (0, l.getBigInt)(await this.#K({
                        method: "getBalance"
                    }, e, t), "%response")
                }
                async getTransactionCount(e, t) {
                    return (0, l.getNumber)(await this.#K({
                        method: "getTransactionCount"
                    }, e, t), "%response")
                }
                async getCode(e, t) {
                    return (0, l.hexlify)(await this.#K({
                        method: "getCode"
                    }, e, t))
                }
                async getStorage(e, t, r) {
                    let n = (0, l.getBigInt)(t, "position");
                    return (0, l.hexlify)(await this.#K({
                        method: "getStorage",
                        position: n
                    }, e, r))
                }
                async broadcastTransaction(e) {
                    let {
                        blockNumber: t,
                        hash: r,
                        network: n
                    } = await (0, l.resolveProperties)({
                        blockNumber: this.getBlockNumber(),
                        hash: this._perform({
                            method: "broadcastTransaction",
                            signedTransaction: e
                        }),
                        network: this.getNetwork()
                    }), i = a.Transaction.from(e);
                    if (i.hash !== r) throw Error("@TODO: the returned hash did not match");
                    return this._wrapTransactionResponse(i, n).replaceableTransaction(t)
                }
                async# F(e, t) {
                    if ((0, l.isHexString)(e, 32)) return await this.#j({
                        method: "getBlock",
                        blockHash: e,
                        includeTransactions: t
                    });
                    let r = this._getBlockTag(e);
                    return "string" != typeof r && (r = await r), await this.#j({
                        method: "getBlock",
                        blockTag: r,
                        includeTransactions: t
                    })
                }
                async getBlock(e, t) {
                    let {
                        network: r,
                        params: n
                    } = await (0, l.resolveProperties)({
                        network: this.getNetwork(),
                        params: this.#F(e, !!t)
                    });
                    return null == n ? null : this._wrapBlock(n, r)
                }
                async getTransaction(e) {
                    let {
                        network: t,
                        params: r
                    } = await (0, l.resolveProperties)({
                        network: this.getNetwork(),
                        params: this.#j({
                            method: "getTransaction",
                            hash: e
                        })
                    });
                    return null == r ? null : this._wrapTransactionResponse(r, t)
                }
                async getTransactionReceipt(e) {
                    let {
                        network: t,
                        params: r
                    } = await (0, l.resolveProperties)({
                        network: this.getNetwork(),
                        params: this.#j({
                            method: "getTransactionReceipt",
                            hash: e
                        })
                    });
                    if (null == r) return null;
                    if (null == r.gasPrice && null == r.effectiveGasPrice) {
                        let t = await this.#j({
                            method: "getTransaction",
                            hash: e
                        });
                        if (null == t) throw Error("report this; could not find tx or effectiveGasPrice");
                        r.effectiveGasPrice = t.gasPrice
                    }
                    return this._wrapTransactionReceipt(r, t)
                }
                async getTransactionResult(e) {
                    let {
                        result: t
                    } = await (0, l.resolveProperties)({
                        network: this.getNetwork(),
                        result: this.#j({
                            method: "getTransactionResult",
                            hash: e
                        })
                    });
                    return null == t ? null : (0, l.hexlify)(t)
                }
                async getLogs(e) {
                    let t = this._getFilter(e);
                    g(t) && (t = await t);
                    let {
                        network: r,
                        params: n
                    } = await (0, l.resolveProperties)({
                        network: this.getNetwork(),
                        params: this.#j({
                            method: "getLogs",
                            filter: t
                        })
                    });
                    return n.map(e => this._wrapLog(e, r))
                }
                _getProvider(e) {
                    (0, l.assert)(!1, "provider cannot connect to target network", "UNSUPPORTED_OPERATION", {
                        operation: "_getProvider()"
                    })
                }
                async getResolver(e) {
                    return await u.EnsResolver.fromName(this, e)
                }
                async getAvatar(e) {
                    let t = await this.getResolver(e);
                    return t ? await t.getAvatar() : null
                }
                async resolveName(e) {
                    let t = await this.getResolver(e);
                    return t ? await t.getAddress() : null
                }
                async lookupAddress(e) {
                    e = (0, n.getAddress)(e);
                    let t = (0, o.namehash)(e.substring(2).toLowerCase() + ".addr.reverse");
                    try {
                        let r = await u.EnsResolver.getEnsAddress(this),
                            n = new s.Contract(r, ["function resolver(bytes32) view returns (address)"], this),
                            o = await n.resolver(t);
                        if (null == o || o === i.ZeroAddress) return null;
                        let a = new s.Contract(o, ["function name(bytes32) view returns (string)"], this),
                            l = await a.name(t),
                            c = await this.resolveName(l);
                        if (c !== e) return null;
                        return l
                    } catch (e) {
                        if ((0, l.isError)(e, "BAD_DATA") && "0x" === e.value || (0, l.isError)(e, "CALL_EXCEPTION")) return null;
                        throw e
                    }
                    return null
                }
                async waitForTransaction(e, t, r) {
                    let n = null != t ? t : 1;
                    return 0 === n ? this.getTransactionReceipt(e) : new Promise(async (t, i) => {
                        let s = null,
                            o = async r => {
                                try {
                                    let i = await this.getTransactionReceipt(e);
                                    if (null != i && r - i.blockNumber + 1 >= n) {
                                        t(i), s && (clearTimeout(s), s = null);
                                        return
                                    }
                                } catch (e) {
                                    console.log("EEE", e)
                                }
                                this.once("block", o)
                            };
                        null != r && (s = setTimeout(() => {
                            null != s && (s = null, this.off("block", o), i((0, l.makeError)("timeout", "TIMEOUT", {
                                reason: "timeout"
                            })))
                        }, r)), o(await this.getBlockNumber())
                    })
                }
                async waitForBlock(e) {
                    (0, l.assert)(!1, "not implemented yet", "NOT_IMPLEMENTED", {
                        operation: "waitForBlock"
                    })
                }
                _clearTimeout(e) {
                    let t = this.#L.get(e);
                    t && (t.timer && clearTimeout(t.timer), this.#L.delete(e))
                }
                _setTimeout(e, t) {
                    null == t && (t = 0);
                    let r = this.#M++,
                        n = () => {
                            this.#L.delete(r), e()
                        };
                    if (this.paused) this.#L.set(r, {
                        timer: null,
                        func: n,
                        time: t
                    });
                    else {
                        let e = setTimeout(n, t);
                        this.#L.set(r, {
                            timer: e,
                            func: n,
                            time: A()
                        })
                    }
                    return r
                }
                _forEachSubscriber(e) {
                    for (let t of this.#x.values()) e(t.subscriber)
                }
                _getSubscriber(e) {
                    switch (e.type) {
                        case "debug":
                        case "error":
                        case "network":
                            return new y(e.type);
                        case "block":
                            {
                                let e = new f.PollingBlockSubscriber(this);
                                return e.pollingInterval = this.pollingInterval,
                                e
                            }
                        case "event":
                            return new f.PollingEventSubscriber(this, e.filter);
                        case "transaction":
                            return new f.PollingTransactionSubscriber(this, e.hash);
                        case "orphan":
                            return new f.PollingOrphanSubscriber(this, e.filter)
                    }
                    throw Error(`unsupported event: ${e.type}`)
                }
                _recoverSubscriber(e, t) {
                    for (let r of this.#x.values())
                        if (r.subscriber === e) {
                            r.started && r.subscriber.stop(), r.subscriber = t, r.started && t.start(), null != this.#N && t.pause(this.#N);
                            break
                        }
                }
                async# z(e, t) {
                    let r = await w(e, this);
                    return "event" === r.type && t && t.length > 0 && !0 === t[0].removed && (r = await w({
                        orphan: "drop-log",
                        log: t[0]
                    }, this)), this.#x.get(r.tag) || null
                }
                async# V(e) {
                    let t = await w(e, this),
                        r = t.tag,
                        n = this.#x.get(r);
                    if (!n) {
                        let e = this._getSubscriber(t),
                            i = new WeakMap,
                            s = new Map;
                        n = {
                            subscriber: e,
                            tag: r,
                            addressableMap: i,
                            nameMap: s,
                            started: !1,
                            listeners: []
                        }, this.#x.set(r, n)
                    }
                    return n
                }
                async on(e, t) {
                    let r = await this.#V(e);
                    return r.listeners.push({
                        listener: t,
                        once: !1
                    }), r.started || (r.subscriber.start(), r.started = !0, null != this.#N && r.subscriber.pause(this.#N)), this
                }
                async once(e, t) {
                    let r = await this.#V(e);
                    return r.listeners.push({
                        listener: t,
                        once: !0
                    }), r.started || (r.subscriber.start(), r.started = !0, null != this.#N && r.subscriber.pause(this.#N)), this
                }
                async emit(e, ...t) {
                    let r = await this.#z(e, t);
                    if (!r || 0 === r.listeners.length) return !1;
                    let n = r.listeners.length;
                    return r.listeners = r.listeners.filter(({
                        listener: r,
                        once: n
                    }) => {
                        let i = new l.EventPayload(this, n ? null : r, e);
                        try {
                            r.call(this, ...t, i)
                        } catch (e) {}
                        return !n
                    }), 0 === r.listeners.length && (r.started && r.subscriber.stop(), this.#x.delete(r.tag)), n > 0
                }
                async listenerCount(e) {
                    if (e) {
                        let t = await this.#z(e);
                        return t ? t.listeners.length : 0
                    }
                    let t = 0;
                    for (let {
                            listeners: e
                        } of this.#x.values()) t += e.length;
                    return t
                }
                async listeners(e) {
                    if (e) {
                        let t = await this.#z(e);
                        return t ? t.listeners.map(({
                            listener: e
                        }) => e) : []
                    }
                    let t = [];
                    for (let {
                            listeners: e
                        } of this.#x.values()) t = t.concat(e.map(({
                        listener: e
                    }) => e));
                    return t
                }
                async off(e, t) {
                    let r = await this.#z(e);
                    if (!r) return this;
                    if (t) {
                        let e = r.listeners.map(({
                            listener: e
                        }) => e).indexOf(t);
                        e >= 0 && r.listeners.splice(e, 1)
                    }
                    return t && 0 !== r.listeners.length || (r.started && r.subscriber.stop(), this.#x.delete(r.tag)), this
                }
                async removeAllListeners(e) {
                    if (e) {
                        let {
                            tag: t,
                            started: r,
                            subscriber: n
                        } = await this.#V(e);
                        r && n.stop(), this.#x.delete(t)
                    } else
                        for (let [e, {
                                started: t,
                                subscriber: r
                            }] of this.#x) t && r.stop(), this.#x.delete(e);
                    return this
                }
                async addListener(e, t) {
                    return await this.on(e, t)
                }
                async removeListener(e, t) {
                    return this.off(e, t)
                }
                get destroyed() {
                    return this.#_
                }
                destroy() {
                    for (let e of (this.removeAllListeners(), this.#L.keys())) this._clearTimeout(e);
                    this.#_ = !0
                }
                get paused() {
                    return null != this.#N
                }
                set paused(e) {
                    !!e !== this.paused && (this.paused ? this.resume() : this.pause(!1))
                }
                pause(e) {
                    if (this.#R = -1, null != this.#N) {
                        if (!!e == this.#N) return;
                        (0, l.assert)(!1, "cannot change pause type; resume first", "UNSUPPORTED_OPERATION", {
                            operation: "pause"
                        })
                    }
                    for (let t of (this._forEachSubscriber(t => t.pause(e)), this.#N = !!e, this.#L.values())) t.timer && clearTimeout(t.timer), t.time = A() - t.time
                }
                resume() {
                    if (null != this.#N)
                        for (let e of (this._forEachSubscriber(e => e.resume()), this.#N = null, this.#L.values())) {
                            let t = e.time;
                            t < 0 && (t = 0), e.time = A(), setTimeout(e.func, t)
                        }
                }
            };
            let S = new Uint8Array([]),
                O = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        46812: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VoidSigner = t.AbstractSigner = void 0;
            let n = r(29527),
                i = r(9404),
                s = r(82678),
                o = r(16203);

            function a(e, t) {
                if (e.provider) return e.provider;
                (0, s.assert)(!1, "missing provider", "UNSUPPORTED_OPERATION", {
                    operation: t
                })
            }
            async function l(e, t) {
                let r = (0, o.copyRequest)(t);
                if (null != r.to && (r.to = (0, n.resolveAddress)(r.to, e)), null != r.from) {
                    let t = r.from;
                    r.from = Promise.all([e.getAddress(), (0, n.resolveAddress)(t, e)]).then(([e, t]) => ((0, s.assertArgument)(e.toLowerCase() === t.toLowerCase(), "transaction from mismatch", "tx.from", t), e))
                } else r.from = e.getAddress();
                return await (0, s.resolveProperties)(r)
            }
            class u {
                provider;
                constructor(e) {
                    (0, s.defineProperties)(this, {
                        provider: e || null
                    })
                }
                async getNonce(e) {
                    return a(this, "getTransactionCount").getTransactionCount(await this.getAddress(), e)
                }
                async populateCall(e) {
                    let t = await l(this, e);
                    return t
                }
                async populateTransaction(e) {
                    let t = a(this, "populateTransaction"),
                        r = await l(this, e);
                    null == r.nonce && (r.nonce = await this.getNonce("pending")), null == r.gasLimit && (r.gasLimit = await this.estimateGas(r));
                    let n = await this.provider.getNetwork();
                    if (null != r.chainId) {
                        let t = (0, s.getBigInt)(r.chainId);
                        (0, s.assertArgument)(t === n.chainId, "transaction chainId mismatch", "tx.chainId", e.chainId)
                    } else r.chainId = n.chainId;
                    let i = null != r.maxFeePerGas || null != r.maxPriorityFeePerGas;
                    if (null != r.gasPrice && (2 === r.type || i) ? (0, s.assertArgument)(!1, "eip-1559 transaction do not support gasPrice", "tx", e) : (0 === r.type || 1 === r.type) && i && (0, s.assertArgument)(!1, "pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "tx", e), (2 === r.type || null == r.type) && null != r.maxFeePerGas && null != r.maxPriorityFeePerGas) r.type = 2;
                    else if (0 === r.type || 1 === r.type) {
                        let e = await t.getFeeData();
                        (0, s.assert)(null != e.gasPrice, "network does not support gasPrice", "UNSUPPORTED_OPERATION", {
                            operation: "getGasPrice"
                        }), null == r.gasPrice && (r.gasPrice = e.gasPrice)
                    } else {
                        let e = await t.getFeeData();
                        if (null == r.type) {
                            if (null != e.maxFeePerGas && null != e.maxPriorityFeePerGas) {
                                if (r.type = 2, null != r.gasPrice) {
                                    let e = r.gasPrice;
                                    delete r.gasPrice, r.maxFeePerGas = e, r.maxPriorityFeePerGas = e
                                } else null == r.maxFeePerGas && (r.maxFeePerGas = e.maxFeePerGas), null == r.maxPriorityFeePerGas && (r.maxPriorityFeePerGas = e.maxPriorityFeePerGas)
                            } else null != e.gasPrice ? ((0, s.assert)(!i, "network does not support EIP-1559", "UNSUPPORTED_OPERATION", {
                                operation: "populateTransaction"
                            }), null == r.gasPrice && (r.gasPrice = e.gasPrice), r.type = 0) : (0, s.assert)(!1, "failed to get consistent fee data", "UNSUPPORTED_OPERATION", {
                                operation: "signer.getFeeData"
                            })
                        } else 2 === r.type && (null == r.maxFeePerGas && (r.maxFeePerGas = e.maxFeePerGas), null == r.maxPriorityFeePerGas && (r.maxPriorityFeePerGas = e.maxPriorityFeePerGas))
                    }
                    return await (0, s.resolveProperties)(r)
                }
                async estimateGas(e) {
                    return a(this, "estimateGas").estimateGas(await this.populateCall(e))
                }
                async call(e) {
                    return a(this, "call").call(await this.populateCall(e))
                }
                async resolveName(e) {
                    let t = a(this, "resolveName");
                    return await t.resolveName(e)
                }
                async sendTransaction(e) {
                    let t = a(this, "sendTransaction"),
                        r = await this.populateTransaction(e);
                    delete r.from;
                    let n = i.Transaction.from(r);
                    return await t.broadcastTransaction(await this.signTransaction(n))
                }
            }
            t.AbstractSigner = u;
            class c extends u {
                address;
                constructor(e, t) {
                    super(t), (0, s.defineProperties)(this, {
                        address: e
                    })
                }
                async getAddress() {
                    return this.address
                }
                connect(e) {
                    return new c(this.address, e)
                }#
                G(e, t) {
                    (0, s.assert)(!1, `VoidSigner cannot sign ${e}`, "UNSUPPORTED_OPERATION", {
                        operation: t
                    })
                }
                async signTransaction(e) {
                    this.#G("transactions", "signTransaction")
                }
                async signMessage(e) {
                    this.#G("messages", "signMessage")
                }
                async signTypedData(e, t, r) {
                    this.#G("typed-data", "signTypedData")
                }
            }
            t.VoidSigner = c
        },
        26180: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.showThrottleMessage = void 0;
            let r = new Set;
            t.showThrottleMessage = function(e) {
                r.has(e) || (r.add(e), console.log("========= NOTICE ========="), console.log(`Request-Rate Exceeded for ${e} (this message will not be repeated)`), console.log(""), console.log("The default API keys for each service are provided as a highly-throttled,"), console.log("community resource for low-traffic projects and early prototyping."), console.log(""), console.log("While your application will continue to function, we highly recommended"), console.log("signing up for your own API keys to improve performance, increase your"), console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."), console.log(""), console.log("For more details: https://docs.ethers.org/api-keys/"), console.log("=========================="))
            }
        },
        83105: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getDefaultProvider = void 0;
            let n = r(82678),
                i = r(66880),
                s = r(74542),
                o = r(85318),
                a = r(11284),
                l = r(76932),
                u = r(3007),
                c = r(15789),
                d = r(75565),
                h = r(92070),
                f = r(52742),
                p = "goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt".split(" ");
            t.getDefaultProvider = function(e, t) {
                null == t && (t = {});
                let r = e => "-" !== t[e] && ("string" == typeof t.exclusive ? e === t.exclusive : !Array.isArray(t.exclusive) || -1 !== t.exclusive.indexOf(e));
                if ("string" == typeof e && e.match(/^https?:/)) return new d.JsonRpcProvider(e);
                if ("string" == typeof e && e.match(/^wss?:/) || e && "function" == typeof e.send && "function" == typeof e.close) return new f.WebSocketProvider(e);
                let g = null;
                try {
                    g = h.Network.from(e)
                } catch (e) {}
                let m = [];
                if (r("publicPolygon") && g && "matic" === g.name && m.push(new d.JsonRpcProvider("https://polygon-rpc.com/", g, {
                        staticNetwork: g
                    })), r("alchemy")) try {
                    m.push(new s.AlchemyProvider(e, t.alchemy))
                } catch (e) {}
                if (r("ankr") && null != t.ankr) try {
                    m.push(new i.AnkrProvider(e, t.ankr))
                } catch (e) {}
                if (r("cloudflare")) try {
                    m.push(new o.CloudflareProvider(e))
                } catch (e) {}
                if (r("etherscan")) try {
                    m.push(new a.EtherscanProvider(e, t.etherscan))
                } catch (e) {}
                if (r("infura")) try {
                    let r, n = t.infura;
                    "object" == typeof n && (r = n.projectSecret, n = n.projectId), m.push(new l.InfuraProvider(e, n, r))
                } catch (e) {}
                if (r("quicknode")) try {
                    let r = t.quicknode;
                    m.push(new u.QuickNodeProvider(e, r))
                } catch (e) {}
                if ((0, n.assert)(m.length, "unsupported default network", "UNSUPPORTED_OPERATION", {
                        operation: "getDefaultProvider"
                    }), 1 === m.length) return m[0];
                let y = Math.floor(m.length / 2);
                return y > 2 && (y = 2), g && -1 !== p.indexOf(g.name) && (y = 1), t && t.quorum && (y = t.quorum), new c.FallbackProvider(m, void 0, {
                    quorum: y
                })
            }
        },
        18772: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EnsResolver = t.BasicMulticoinProviderPlugin = t.MulticoinProviderPlugin = void 0;
            let n = r(29527),
                i = r(86872),
                s = r(81374),
                o = r(94194),
                a = r(82678);

            function l(e) {
                return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : (0, a.assertArgument)(!1, "unsupported IPFS format", "link", e), `https://gateway.ipfs.io/ipfs/${e}`
            }
            class u {
                name;
                constructor(e) {
                    (0, a.defineProperties)(this, {
                        name: e
                    })
                }
                connect(e) {
                    return this
                }
                supportsCoinType(e) {
                    return !1
                }
                async encodeAddress(e, t) {
                    throw Error("unsupported coin")
                }
                async decodeAddress(e, t) {
                    throw Error("unsupported coin")
                }
            }
            t.MulticoinProviderPlugin = u, t.BasicMulticoinProviderPlugin = class extends u {
                constructor() {
                    super("org.ethers.plugins.provider.BasicMulticoin")
                }
            };
            let c = RegExp("^(ipfs)://(.*)$", "i"),
                d = [RegExp("^(https)://(.*)$", "i"), RegExp("^(data):(.*)$", "i"), c, RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];
            class h {
                provider;
                address;
                name;#
                W;#
                J;
                constructor(e, t, r) {
                    (0, a.defineProperties)(this, {
                        provider: e,
                        address: t,
                        name: r
                    }), this.#W = null, this.#J = new s.Contract(t, ["function supportsInterface(bytes4) view returns (bool)", "function resolve(bytes, bytes) view returns (bytes)", "function addr(bytes32) view returns (address)", "function addr(bytes32, uint) view returns (bytes)", "function text(bytes32, string) view returns (string)", "function contenthash(bytes32) view returns (bytes)"], e)
                }
                async supportsWildcard() {
                    return null == this.#W && (this.#W = (async () => {
                        try {
                            return await this.#J.supportsInterface("0x9061b923")
                        } catch (e) {
                            if ((0, a.isError)(e, "CALL_EXCEPTION")) return !1;
                            throw this.#W = null, e
                        }
                    })()), await this.#W
                }
                async# q(e, t) {
                    t = (t || []).slice();
                    let r = this.#J.interface;
                    t.unshift((0, o.namehash)(this.name));
                    let n = null;
                    await this.supportsWildcard() && (n = r.getFunction(e), (0, a.assert)(n, "missing fragment", "UNKNOWN_ERROR", {
                        info: {
                            funcName: e
                        }
                    }), t = [(0, o.dnsEncode)(this.name), r.encodeFunctionData(n, t)], e = "resolve(bytes,bytes)"), t.push({
                        enableCcipRead: !0
                    });
                    try {
                        let i = await this.#J[e](...t);
                        if (n) return r.decodeFunctionResult(n, i)[0];
                        return i
                    } catch (e) {
                        if (!(0, a.isError)(e, "CALL_EXCEPTION")) throw e
                    }
                    return null
                }
                async getAddress(e) {
                    if (null == e && (e = 60), 60 === e) try {
                        let e = await this.#q("addr(bytes32)");
                        if (null == e || e === i.ZeroAddress) return null;
                        return e
                    } catch (e) {
                        if ((0, a.isError)(e, "CALL_EXCEPTION")) return null;
                        throw e
                    }
                    if (e >= 0 && e < 2147483648) {
                        let t = e + 2147483648,
                            r = await this.#q("addr(bytes32,uint)", [t]);
                        if ((0, a.isHexString)(r, 20)) return (0, n.getAddress)(r)
                    }
                    let t = null;
                    for (let r of this.provider.plugins)
                        if (r instanceof u && r.supportsCoinType(e)) {
                            t = r;
                            break
                        }
                    if (null == t) return null;
                    let r = await this.#q("addr(bytes32,uint)", [e]);
                    if (null == r || "0x" === r) return null;
                    let s = await t.decodeAddress(e, r);
                    if (null != s) return s;
                    (0, a.assert)(!1, "invalid coin data", "UNSUPPORTED_OPERATION", {
                        operation: `getAddress(${e})`,
                        info: {
                            coinType: e,
                            data: r
                        }
                    })
                }
                async getText(e) {
                    let t = await this.#q("text(bytes32,string)", [e]);
                    return null == t || "0x" === t ? null : t
                }
                async getContentHash() {
                    let e = await this.#q("contenthash(bytes32)");
                    if (null == e || "0x" === e) return null;
                    let t = e.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                    if (t) {
                        let e = "e3010170" === t[1] ? "ipfs" : "ipns",
                            r = parseInt(t[4], 16);
                        if (t[5].length === 2 * r) return `${e}://${(0,a.encodeBase58)("0x"+t[2])}`
                    }
                    let r = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                    if (r && 64 === r[1].length) return `bzz://${r[1]}`;
                    (0, a.assert)(!1, "invalid or unsupported content hash data", "UNSUPPORTED_OPERATION", {
                        operation: "getContentHash()",
                        info: {
                            data: e
                        }
                    })
                }
                async getAvatar() {
                    let e = await this._getAvatar();
                    return e.url
                }
                async _getAvatar() {
                    let e = [{
                        type: "name",
                        value: this.name
                    }];
                    try {
                        let t = await this.getText("avatar");
                        if (null == t) return e.push({
                            type: "!avatar",
                            value: ""
                        }), {
                            url: null,
                            linkage: e
                        };
                        e.push({
                            type: "avatar",
                            value: t
                        });
                        for (let r = 0; r < d.length; r++) {
                            let n = t.match(d[r]);
                            if (null == n) continue;
                            let i = n[1].toLowerCase();
                            switch (i) {
                                case "https":
                                case "data":
                                    return e.push({
                                        type: "url",
                                        value: t
                                    }), {
                                        linkage: e,
                                        url: t
                                    };
                                case "ipfs":
                                    {
                                        let r = l(t);
                                        return e.push({
                                            type: "ipfs",
                                            value: t
                                        }),
                                        e.push({
                                            type: "url",
                                            value: r
                                        }),
                                        {
                                            linkage: e,
                                            url: r
                                        }
                                    }
                                case "erc721":
                                case "erc1155":
                                    {
                                        let r = "erc721" === i ? "tokenURI(uint256)" : "uri(uint256)";e.push({
                                            type: i,
                                            value: t
                                        });
                                        let o = await this.getAddress();
                                        if (null == o) return e.push({
                                            type: "!owner",
                                            value: ""
                                        }), {
                                            url: null,
                                            linkage: e
                                        };
                                        let u = (n[2] || "").split("/");
                                        if (2 !== u.length) return e.push({
                                            type: `!${i}caip`,
                                            value: n[2] || ""
                                        }), {
                                            url: null,
                                            linkage: e
                                        };
                                        let d = u[1],
                                            h = new s.Contract(u[0], ["function tokenURI(uint) view returns (string)", "function ownerOf(uint) view returns (address)", "function uri(uint) view returns (string)", "function balanceOf(address, uint256) view returns (uint)"], this.provider);
                                        if ("erc721" === i) {
                                            let t = await h.ownerOf(d);
                                            if (o !== t) return e.push({
                                                type: "!owner",
                                                value: t
                                            }), {
                                                url: null,
                                                linkage: e
                                            };
                                            e.push({
                                                type: "owner",
                                                value: t
                                            })
                                        } else if ("erc1155" === i) {
                                            let t = await h.balanceOf(o, d);
                                            if (!t) return e.push({
                                                type: "!balance",
                                                value: "0"
                                            }), {
                                                url: null,
                                                linkage: e
                                            };
                                            e.push({
                                                type: "balance",
                                                value: t.toString()
                                            })
                                        }
                                        let f = await h[r](d);
                                        if (null == f || "0x" === f) return e.push({
                                            type: "!metadata-url",
                                            value: ""
                                        }), {
                                            url: null,
                                            linkage: e
                                        };e.push({
                                            type: "metadata-url-base",
                                            value: f
                                        }),
                                        "erc1155" === i && (f = f.replace("{id}", (0, a.toBeHex)(d, 32).substring(2)), e.push({
                                            type: "metadata-url-expanded",
                                            value: f
                                        })),
                                        f.match(/^ipfs:/i) && (f = l(f)),
                                        e.push({
                                            type: "metadata-url",
                                            value: f
                                        });
                                        let p = {},
                                            g = await new a.FetchRequest(f).send();g.assertOk();
                                        try {
                                            p = g.bodyJson
                                        } catch (t) {
                                            try {
                                                e.push({
                                                    type: "!metadata",
                                                    value: g.bodyText
                                                })
                                            } catch (r) {
                                                let t = g.body;
                                                t && e.push({
                                                    type: "!metadata",
                                                    value: (0, a.hexlify)(t)
                                                })
                                            }
                                            return {
                                                url: null,
                                                linkage: e
                                            }
                                        }
                                        if (!p) return e.push({
                                            type: "!metadata",
                                            value: ""
                                        }), {
                                            url: null,
                                            linkage: e
                                        };e.push({
                                            type: "metadata",
                                            value: JSON.stringify(p)
                                        });
                                        let m = p.image;
                                        if ("string" != typeof m) return e.push({
                                            type: "!imageUrl",
                                            value: ""
                                        }), {
                                            url: null,
                                            linkage: e
                                        };
                                        if (m.match(/^(https:\/\/|data:)/i));
                                        else {
                                            let t = m.match(c);
                                            if (null == t) return e.push({
                                                type: "!imageUrl-ipfs",
                                                value: m
                                            }), {
                                                url: null,
                                                linkage: e
                                            };
                                            e.push({
                                                type: "imageUrl-ipfs",
                                                value: m
                                            }), m = l(m)
                                        }
                                        return e.push({
                                            type: "url",
                                            value: m
                                        }),
                                        {
                                            linkage: e,
                                            url: m
                                        }
                                    }
                            }
                        }
                    } catch (e) {}
                    return {
                        linkage: e,
                        url: null
                    }
                }
                static async getEnsAddress(e) {
                    let t = await e.getNetwork(),
                        r = t.getPlugin("org.ethers.plugins.network.Ens");
                    return (0, a.assert)(r, "network does not support ENS", "UNSUPPORTED_OPERATION", {
                        operation: "getEnsAddress",
                        info: {
                            network: t
                        }
                    }), r.address
                }
                static async# Q(e, t) {
                    let r = await h.getEnsAddress(e);
                    try {
                        let n = new s.Contract(r, ["function resolver(bytes32) view returns (address)"], e),
                            a = await n.resolver((0, o.namehash)(t), {
                                enableCcipRead: !0
                            });
                        if (a === i.ZeroAddress) return null;
                        return a
                    } catch (e) {
                        throw e
                    }
                    return null
                }
                static async fromName(e, t) {
                    let r = t;
                    for (;;) {
                        if ("" === r || "." === r || "eth" !== t && "eth" === r) return null;
                        let n = await h.#Q(e, r);
                        if (null != n) {
                            let i = new h(e, n, t);
                            if (r !== t && !await i.supportsWildcard()) return null;
                            return i
                        }
                        r = r.split(".").slice(1).join(".")
                    }
                }
            }
            t.EnsResolver = h
        },
        47627: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatTransactionResponse = t.formatTransactionReceipt = t.formatReceiptLog = t.formatBlock = t.formatLog = t.formatUint256 = t.formatHash = t.formatData = t.formatBoolean = t.object = t.arrayOf = t.allowNull = void 0;
            let n = r(29527),
                i = r(20021),
                s = r(9404),
                o = r(82678),
                a = BigInt(0);

            function l(e, t) {
                return function(r) {
                    return null == r ? t : e(r)
                }
            }

            function u(e) {
                return t => {
                    if (!Array.isArray(t)) throw Error("not an array");
                    return t.map(t => e(t))
                }
            }

            function c(e, t) {
                return r => {
                    let n = {};
                    for (let i in e) {
                        let s = i;
                        if (t && i in t && !(s in r)) {
                            for (let e of t[i])
                                if (e in r) {
                                    s = e;
                                    break
                                }
                        }
                        try {
                            let t = e[i](r[s]);
                            void 0 !== t && (n[i] = t)
                        } catch (t) {
                            let e = t instanceof Error ? t.message : "not-an-error";
                            (0, o.assert)(!1, `invalid value for value.${i} (${e})`, "BAD_DATA", {
                                value: r
                            })
                        }
                    }
                    return n
                }
            }

            function d(e) {
                switch (e) {
                    case !0:
                    case "true":
                        return !0;
                    case !1:
                    case "false":
                        return !1
                }(0, o.assertArgument)(!1, `invalid boolean; ${JSON.stringify(e)}`, "value", e)
            }

            function h(e) {
                return (0, o.assertArgument)((0, o.isHexString)(e, !0), "invalid data", "value", e), e
            }

            function f(e) {
                return (0, o.assertArgument)((0, o.isHexString)(e, 32), "invalid hash", "value", e), e
            }
            t.allowNull = l, t.arrayOf = u, t.object = c, t.formatBoolean = d, t.formatData = h, t.formatHash = f, t.formatUint256 = function(e) {
                if (!(0, o.isHexString)(e)) throw Error("invalid uint256");
                return (0, o.zeroPadValue)(e, 32)
            };
            let p = c({
                address: n.getAddress,
                blockHash: f,
                blockNumber: o.getNumber,
                data: h,
                index: o.getNumber,
                removed: l(d, !1),
                topics: u(f),
                transactionHash: f,
                transactionIndex: o.getNumber
            }, {
                index: ["logIndex"]
            });
            t.formatLog = function(e) {
                return p(e)
            };
            let g = c({
                hash: l(f),
                parentHash: f,
                number: o.getNumber,
                timestamp: o.getNumber,
                nonce: l(h),
                difficulty: o.getBigInt,
                gasLimit: o.getBigInt,
                gasUsed: o.getBigInt,
                miner: l(n.getAddress),
                extraData: h,
                baseFeePerGas: l(o.getBigInt)
            });
            t.formatBlock = function(e) {
                let t = g(e);
                return t.transactions = e.transactions.map(e => "string" == typeof e ? e : w(e)), t
            };
            let m = c({
                transactionIndex: o.getNumber,
                blockNumber: o.getNumber,
                transactionHash: f,
                address: n.getAddress,
                topics: u(f),
                data: h,
                index: o.getNumber,
                blockHash: f
            }, {
                index: ["logIndex"]
            });

            function y(e) {
                return m(e)
            }
            t.formatReceiptLog = y;
            let b = c({
                to: l(n.getAddress, null),
                from: l(n.getAddress, null),
                contractAddress: l(n.getAddress, null),
                index: o.getNumber,
                root: l(o.hexlify),
                gasUsed: o.getBigInt,
                logsBloom: l(h),
                blockHash: f,
                hash: f,
                logs: u(y),
                blockNumber: o.getNumber,
                cumulativeGasUsed: o.getBigInt,
                effectiveGasPrice: l(o.getBigInt),
                status: l(o.getNumber),
                type: l(o.getNumber, 0)
            }, {
                effectiveGasPrice: ["gasPrice"],
                hash: ["transactionHash"],
                index: ["transactionIndex"]
            });

            function w(e) {
                e.to && (0, o.getBigInt)(e.to) === a && (e.to = "0x0000000000000000000000000000000000000000");
                let t = c({
                    hash: f,
                    type: e => "0x" === e || null == e ? 0 : (0, o.getNumber)(e),
                    accessList: l(s.accessListify, null),
                    blockHash: l(f, null),
                    blockNumber: l(o.getNumber, null),
                    transactionIndex: l(o.getNumber, null),
                    from: n.getAddress,
                    gasPrice: l(o.getBigInt),
                    maxPriorityFeePerGas: l(o.getBigInt),
                    maxFeePerGas: l(o.getBigInt),
                    gasLimit: o.getBigInt,
                    to: l(n.getAddress, null),
                    value: o.getBigInt,
                    nonce: o.getNumber,
                    data: h,
                    creates: l(n.getAddress, null),
                    chainId: l(o.getBigInt, null)
                }, {
                    data: ["input"],
                    gasLimit: ["gas"]
                })(e);
                if (null == t.to && null == t.creates && (t.creates = (0, n.getCreateAddress)(t)), (1 === e.type || 2 === e.type) && null == e.accessList && (t.accessList = []), e.signature ? t.signature = i.Signature.from(e.signature) : t.signature = i.Signature.from(e), null == t.chainId) {
                    let e = t.signature.legacyChainId;
                    null != e && (t.chainId = e)
                }
                return t.blockHash && (0, o.getBigInt)(t.blockHash) === a && (t.blockHash = null), t
            }
            t.formatTransactionReceipt = function(e) {
                return b(e)
            }, t.formatTransactionResponse = w
        },
        39004: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SocketEventSubscriber = t.SocketPendingSubscriber = t.SocketBlockSubscriber = t.SocketSubscriber = t.WebSocketProvider = t.SocketProvider = t.IpcSocketProvider = t.QuickNodeProvider = t.PocketProvider = t.InfuraWebSocketProvider = t.InfuraProvider = t.EtherscanPlugin = t.EtherscanProvider = t.CloudflareProvider = t.AnkrProvider = t.AlchemyProvider = t.BrowserProvider = t.JsonRpcSigner = t.JsonRpcProvider = t.JsonRpcApiProvider = t.FallbackProvider = t.copyRequest = t.TransactionResponse = t.TransactionReceipt = t.Log = t.FeeData = t.Block = t.FetchUrlFeeDataNetworkPlugin = t.FeeDataNetworkPlugin = t.EnsPlugin = t.GasCostPlugin = t.NetworkPlugin = t.NonceManager = t.Network = t.MulticoinProviderPlugin = t.EnsResolver = t.getDefaultProvider = t.showThrottleMessage = t.VoidSigner = t.AbstractSigner = t.UnmanagedSubscriber = t.AbstractProvider = void 0;
            var n = r(96570);
            Object.defineProperty(t, "AbstractProvider", {
                enumerable: !0,
                get: function() {
                    return n.AbstractProvider
                }
            }), Object.defineProperty(t, "UnmanagedSubscriber", {
                enumerable: !0,
                get: function() {
                    return n.UnmanagedSubscriber
                }
            });
            var i = r(46812);
            Object.defineProperty(t, "AbstractSigner", {
                enumerable: !0,
                get: function() {
                    return i.AbstractSigner
                }
            }), Object.defineProperty(t, "VoidSigner", {
                enumerable: !0,
                get: function() {
                    return i.VoidSigner
                }
            });
            var s = r(26180);
            Object.defineProperty(t, "showThrottleMessage", {
                enumerable: !0,
                get: function() {
                    return s.showThrottleMessage
                }
            });
            var o = r(83105);
            Object.defineProperty(t, "getDefaultProvider", {
                enumerable: !0,
                get: function() {
                    return o.getDefaultProvider
                }
            });
            var a = r(18772);
            Object.defineProperty(t, "EnsResolver", {
                enumerable: !0,
                get: function() {
                    return a.EnsResolver
                }
            }), Object.defineProperty(t, "MulticoinProviderPlugin", {
                enumerable: !0,
                get: function() {
                    return a.MulticoinProviderPlugin
                }
            });
            var l = r(92070);
            Object.defineProperty(t, "Network", {
                enumerable: !0,
                get: function() {
                    return l.Network
                }
            });
            var u = r(45211);
            Object.defineProperty(t, "NonceManager", {
                enumerable: !0,
                get: function() {
                    return u.NonceManager
                }
            });
            var c = r(74);
            Object.defineProperty(t, "NetworkPlugin", {
                enumerable: !0,
                get: function() {
                    return c.NetworkPlugin
                }
            }), Object.defineProperty(t, "GasCostPlugin", {
                enumerable: !0,
                get: function() {
                    return c.GasCostPlugin
                }
            }), Object.defineProperty(t, "EnsPlugin", {
                enumerable: !0,
                get: function() {
                    return c.EnsPlugin
                }
            }), Object.defineProperty(t, "FeeDataNetworkPlugin", {
                enumerable: !0,
                get: function() {
                    return c.FeeDataNetworkPlugin
                }
            }), Object.defineProperty(t, "FetchUrlFeeDataNetworkPlugin", {
                enumerable: !0,
                get: function() {
                    return c.FetchUrlFeeDataNetworkPlugin
                }
            });
            var d = r(16203);
            Object.defineProperty(t, "Block", {
                enumerable: !0,
                get: function() {
                    return d.Block
                }
            }), Object.defineProperty(t, "FeeData", {
                enumerable: !0,
                get: function() {
                    return d.FeeData
                }
            }), Object.defineProperty(t, "Log", {
                enumerable: !0,
                get: function() {
                    return d.Log
                }
            }), Object.defineProperty(t, "TransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return d.TransactionReceipt
                }
            }), Object.defineProperty(t, "TransactionResponse", {
                enumerable: !0,
                get: function() {
                    return d.TransactionResponse
                }
            }), Object.defineProperty(t, "copyRequest", {
                enumerable: !0,
                get: function() {
                    return d.copyRequest
                }
            });
            var h = r(15789);
            Object.defineProperty(t, "FallbackProvider", {
                enumerable: !0,
                get: function() {
                    return h.FallbackProvider
                }
            });
            var f = r(75565);
            Object.defineProperty(t, "JsonRpcApiProvider", {
                enumerable: !0,
                get: function() {
                    return f.JsonRpcApiProvider
                }
            }), Object.defineProperty(t, "JsonRpcProvider", {
                enumerable: !0,
                get: function() {
                    return f.JsonRpcProvider
                }
            }), Object.defineProperty(t, "JsonRpcSigner", {
                enumerable: !0,
                get: function() {
                    return f.JsonRpcSigner
                }
            });
            var p = r(14623);
            Object.defineProperty(t, "BrowserProvider", {
                enumerable: !0,
                get: function() {
                    return p.BrowserProvider
                }
            });
            var g = r(74542);
            Object.defineProperty(t, "AlchemyProvider", {
                enumerable: !0,
                get: function() {
                    return g.AlchemyProvider
                }
            });
            var m = r(66880);
            Object.defineProperty(t, "AnkrProvider", {
                enumerable: !0,
                get: function() {
                    return m.AnkrProvider
                }
            });
            var y = r(85318);
            Object.defineProperty(t, "CloudflareProvider", {
                enumerable: !0,
                get: function() {
                    return y.CloudflareProvider
                }
            });
            var b = r(11284);
            Object.defineProperty(t, "EtherscanProvider", {
                enumerable: !0,
                get: function() {
                    return b.EtherscanProvider
                }
            }), Object.defineProperty(t, "EtherscanPlugin", {
                enumerable: !0,
                get: function() {
                    return b.EtherscanPlugin
                }
            });
            var w = r(76932);
            Object.defineProperty(t, "InfuraProvider", {
                enumerable: !0,
                get: function() {
                    return w.InfuraProvider
                }
            }), Object.defineProperty(t, "InfuraWebSocketProvider", {
                enumerable: !0,
                get: function() {
                    return w.InfuraWebSocketProvider
                }
            });
            var A = r(68502);
            Object.defineProperty(t, "PocketProvider", {
                enumerable: !0,
                get: function() {
                    return A.PocketProvider
                }
            });
            var v = r(3007);
            Object.defineProperty(t, "QuickNodeProvider", {
                enumerable: !0,
                get: function() {
                    return v.QuickNodeProvider
                }
            });
            let E = r(61024);
            Object.defineProperty(t, "IpcSocketProvider", {
                enumerable: !0,
                get: function() {
                    return E.IpcSocketProvider
                }
            });
            var P = r(95452);
            Object.defineProperty(t, "SocketProvider", {
                enumerable: !0,
                get: function() {
                    return P.SocketProvider
                }
            });
            var S = r(52742);
            Object.defineProperty(t, "WebSocketProvider", {
                enumerable: !0,
                get: function() {
                    return S.WebSocketProvider
                }
            });
            var O = r(95452);
            Object.defineProperty(t, "SocketSubscriber", {
                enumerable: !0,
                get: function() {
                    return O.SocketSubscriber
                }
            }), Object.defineProperty(t, "SocketBlockSubscriber", {
                enumerable: !0,
                get: function() {
                    return O.SocketBlockSubscriber
                }
            }), Object.defineProperty(t, "SocketPendingSubscriber", {
                enumerable: !0,
                get: function() {
                    return O.SocketPendingSubscriber
                }
            }), Object.defineProperty(t, "SocketEventSubscriber", {
                enumerable: !0,
                get: function() {
                    return O.SocketEventSubscriber
                }
            })
        },
        92070: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Network = void 0;
            let n = r(9404),
                i = r(82678),
                s = r(74),
                o = new Map;
            class a {#
                Y;#
                Z;#
                T;
                constructor(e, t) {
                    this.#Y = e, this.#Z = (0, i.getBigInt)(t), this.#T = new Map
                }
                toJSON() {
                    return {
                        name: this.name,
                        chainId: String(this.chainId)
                    }
                }
                get name() {
                    return this.#Y
                }
                set name(e) {
                    this.#Y = e
                }
                get chainId() {
                    return this.#Z
                }
                set chainId(e) {
                    this.#Z = (0, i.getBigInt)(e, "chainId")
                }
                matches(e) {
                    if (null == e) return !1;
                    if ("string" == typeof e) {
                        try {
                            return this.chainId === (0, i.getBigInt)(e)
                        } catch (e) {}
                        return this.name === e
                    }
                    if ("number" == typeof e || "bigint" == typeof e) {
                        try {
                            return this.chainId === (0, i.getBigInt)(e)
                        } catch (e) {}
                        return !1
                    }
                    if ("object" == typeof e) {
                        if (null != e.chainId) {
                            try {
                                return this.chainId === (0, i.getBigInt)(e.chainId)
                            } catch (e) {}
                            return !1
                        }
                        if (null != e.name) return this.name === e.name
                    }
                    return !1
                }
                get plugins() {
                    return Array.from(this.#T.values())
                }
                attachPlugin(e) {
                    if (this.#T.get(e.name)) throw Error(`cannot replace existing plugin: ${e.name} `);
                    return this.#T.set(e.name, e.clone()), this
                }
                getPlugin(e) {
                    return this.#T.get(e) || null
                }
                getPlugins(e) {
                    return this.plugins.filter(t => t.name.split("#")[0] === e)
                }
                clone() {
                    let e = new a(this.name, this.chainId);
                    return this.plugins.forEach(t => {
                        e.attachPlugin(t.clone())
                    }), e
                }
                computeIntrinsicGas(e) {
                    let t = this.getPlugin("org.ethers.plugins.network.GasCost") || new s.GasCostPlugin,
                        r = t.txBase;
                    if (null == e.to && (r += t.txCreate), e.data)
                        for (let n = 2; n < e.data.length; n += 2) "00" === e.data.substring(n, n + 2) ? r += t.txDataZero : r += t.txDataNonzero;
                    if (e.accessList) {
                        let i = (0, n.accessListify)(e.accessList);
                        for (let e in i) r += t.txAccessListAddress + t.txAccessListStorageKey * i[e].storageKeys.length
                    }
                    return r
                }
                static from(e) {
                    if (function() {
                            var e;

                            function t(e, t, r) {
                                let n = function() {
                                    let n = new a(e, t);
                                    return null != r.ensNetwork && n.attachPlugin(new s.EnsPlugin(null, r.ensNetwork)), n.attachPlugin(new s.GasCostPlugin), (r.plugins || []).forEach(e => {
                                        n.attachPlugin(e)
                                    }), n
                                };
                                a.register(e, n), a.register(t, n), r.altNames && r.altNames.forEach(e => {
                                    a.register(e, n)
                                })
                            }
                            c || (c = !0, t("mainnet", 1, {
                                ensNetwork: 1,
                                altNames: ["homestead"]
                            }), t("ropsten", 3, {
                                ensNetwork: 3
                            }), t("rinkeby", 4, {
                                ensNetwork: 4
                            }), t("goerli", 5, {
                                ensNetwork: 5
                            }), t("kovan", 42, {
                                ensNetwork: 42
                            }), t("sepolia", 11155111, {}), t("classic", 61, {}), t("classicKotti", 6, {}), t("arbitrum", 42161, {
                                ensNetwork: 1
                            }), t("arbitrum-goerli", 421613, {}), t("bnb", 56, {
                                ensNetwork: 1
                            }), t("bnbt", 97, {}), t("linea", 59144, {
                                ensNetwork: 1
                            }), t("linea-goerli", 59140, {}), t("matic", 137, {
                                ensNetwork: 1,
                                plugins: [u("https://gasstation.polygon.technology/v2")]
                            }), t("matic-mumbai", 80001, {
                                altNames: ["maticMumbai", "maticmum"],
                                plugins: [u("https://gasstation-testnet.polygon.technology/v2")]
                            }), t("optimism", 10, {
                                ensNetwork: 1,
                                plugins: [(e = BigInt("1000000"), new s.FetchUrlFeeDataNetworkPlugin("data:", async (t, r, n) => {
                                    let i = await t();
                                    if (null == i.maxFeePerGas || null == i.maxPriorityFeePerGas) return i;
                                    let s = i.maxFeePerGas - i.maxPriorityFeePerGas;
                                    return {
                                        gasPrice: i.gasPrice,
                                        maxFeePerGas: s + e,
                                        maxPriorityFeePerGas: e
                                    }
                                }))]
                            }), t("optimism-goerli", 420, {}), t("xdai", 100, {
                                ensNetwork: 1
                            }))
                        }(), null == e) return a.from("mainnet");
                    if ("number" == typeof e && (e = BigInt(e)), "string" == typeof e || "bigint" == typeof e) {
                        let t = o.get(e);
                        if (t) return t();
                        if ("bigint" == typeof e) return new a("unknown", e);
                        (0, i.assertArgument)(!1, "unknown network", "network", e)
                    }
                    if ("function" == typeof e.clone) {
                        let t = e.clone();
                        return t
                    }
                    if ("object" == typeof e) {
                        (0, i.assertArgument)("string" == typeof e.name && "number" == typeof e.chainId, "invalid network object name or chainId", "network", e);
                        let t = new a(e.name, e.chainId);
                        return (e.ensAddress || null != e.ensNetwork) && t.attachPlugin(new s.EnsPlugin(e.ensAddress, e.ensNetwork)), t
                    }(0, i.assertArgument)(!1, "invalid network", "network", e)
                }
                static register(e, t) {
                    "number" == typeof e && (e = BigInt(e));
                    let r = o.get(e);
                    r && (0, i.assertArgument)(!1, `conflicting network for ${JSON.stringify(r.name)}`, "nameOrChainId", e), o.set(e, t)
                }
            }

            function l(e, t) {
                let r = String(e);
                if (!r.match(/^[0-9.]+$/)) throw Error(`invalid gwei value: ${e}`);
                let n = r.split(".");
                if (1 === n.length && n.push(""), 2 !== n.length) throw Error(`invalid gwei value: ${e}`);
                for (; n[1].length < t;) n[1] += "0";
                if (n[1].length > 9) {
                    let e = BigInt(n[1].substring(0, 9));
                    !n[1].substring(9).match(/^0+$/) && e++, n[1] = e.toString()
                }
                return BigInt(n[0] + n[1])
            }

            function u(e) {
                return new s.FetchUrlFeeDataNetworkPlugin(e, async (e, t, r) => {
                    let n;
                    r.setHeader("User-Agent", "ethers");
                    try {
                        let [t, i] = await Promise.all([r.send(), e()]);
                        n = t;
                        let s = n.bodyJson.standard,
                            o = {
                                gasPrice: i.gasPrice,
                                maxFeePerGas: l(s.maxFee, 9),
                                maxPriorityFeePerGas: l(s.maxPriorityFee, 9)
                            };
                        return o
                    } catch (e) {
                        (0, i.assert)(!1, `error encountered with polygon gas station (${JSON.stringify(r.url)})`, "SERVER_ERROR", {
                            request: r,
                            response: n,
                            error: e
                        })
                    }
                })
            }
            t.Network = a;
            let c = !1
        },
        74: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FetchUrlFeeDataNetworkPlugin = t.FeeDataNetworkPlugin = t.EnsPlugin = t.GasCostPlugin = t.NetworkPlugin = void 0;
            let n = r(17693),
                i = r(82678);
            class s {
                name;
                constructor(e) {
                    (0, n.defineProperties)(this, {
                        name: e
                    })
                }
                clone() {
                    return new s(this.name)
                }
            }
            t.NetworkPlugin = s;
            class o extends s {
                effectiveBlock;
                txBase;
                txCreate;
                txDataZero;
                txDataNonzero;
                txAccessListStorageKey;
                txAccessListAddress;
                constructor(e, t) {
                    null == e && (e = 0), super(`org.ethers.network.plugins.GasCost#${e||0}`);
                    let r = {
                        effectiveBlock: e
                    };

                    function s(e, n) {
                        let s = (t || {})[e];
                        null == s && (s = n), (0, i.assertArgument)("number" == typeof s, `invalud value for ${e}`, "costs", t), r[e] = s
                    }
                    s("txBase", 21e3), s("txCreate", 32e3), s("txDataZero", 4), s("txDataNonzero", 16), s("txAccessListStorageKey", 1900), s("txAccessListAddress", 2400), (0, n.defineProperties)(this, r)
                }
                clone() {
                    return new o(this.effectiveBlock, this)
                }
            }
            t.GasCostPlugin = o;
            class a extends s {
                address;
                targetNetwork;
                constructor(e, t) {
                    super("org.ethers.plugins.network.Ens"), (0, n.defineProperties)(this, {
                        address: e || "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        targetNetwork: null == t ? 1 : t
                    })
                }
                clone() {
                    return new a(this.address, this.targetNetwork)
                }
            }
            t.EnsPlugin = a;
            class l extends s {#
                X;
                get feeDataFunc() {
                    return this.#X
                }
                constructor(e) {
                    super("org.ethers.plugins.network.FeeData"), this.#X = e
                }
                async getFeeData(e) {
                    return await this.#X(e)
                }
                clone() {
                    return new l(this.#X)
                }
            }
            t.FeeDataNetworkPlugin = l, t.FetchUrlFeeDataNetworkPlugin = class extends s {#
                ee;#
                et;
                get url() {
                    return this.#ee
                }
                get processFunc() {
                    return this.#et
                }
                constructor(e, t) {
                    super("org.ethers.plugins.network.FetchUrlFeeDataPlugin"), this.#ee = e, this.#et = t
                }
                clone() {
                    return this
                }
            }
        },
        74542: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AlchemyProvider = void 0;
            let n = r(82678),
                i = r(26180),
                s = r(92070),
                o = r(75565),
                a = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
            class l extends o.JsonRpcProvider {
                apiKey;
                constructor(e, t) {
                    null == e && (e = "mainnet");
                    let r = s.Network.from(e);
                    null == t && (t = a);
                    let i = l.getRequest(r, t);
                    super(i, r, {
                        staticNetwork: r
                    }), (0, n.defineProperties)(this, {
                        apiKey: t
                    })
                }
                _getProvider(e) {
                    try {
                        return new l(e, this.apiKey)
                    } catch (e) {}
                    return super._getProvider(e)
                }
                async _perform(e) {
                    if ("getTransactionResult" === e.method) {
                        let t;
                        let {
                            trace: r,
                            tx: i
                        } = await (0, n.resolveProperties)({
                            trace: this.send("trace_transaction", [e.hash]),
                            tx: this.getTransaction(e.hash)
                        });
                        if (null == r || null == i) return null;
                        let s = !1;
                        try {
                            t = r[0].result.output, s = "Reverted" === r[0].error
                        } catch (e) {}
                        if (t) return (0, n.assert)(!s, "an error occurred during transaction executions", "CALL_EXCEPTION", {
                            action: "getTransactionResult",
                            data: t,
                            reason: null,
                            transaction: i,
                            invocation: null,
                            revert: null
                        }), t;
                        (0, n.assert)(!1, "could not parse trace result", "BAD_DATA", {
                            value: r
                        })
                    }
                    return await super._perform(e)
                }
                isCommunityResource() {
                    return this.apiKey === a
                }
                static getRequest(e, t) {
                    null == t && (t = a);
                    let r = new n.FetchRequest(`https://${function(e){switch(e){case"mainnet":return"eth-mainnet.alchemyapi.io";case"goerli":return"eth-goerli.g.alchemy.com";case"sepolia":return"eth-sepolia.g.alchemy.com";case"arbitrum":return"arb-mainnet.g.alchemy.com";case"arbitrum-goerli":return"arb-goerli.g.alchemy.com";case"matic":return"polygon-mainnet.g.alchemy.com";case"matic-mumbai":return"polygon-mumbai.g.alchemy.com";case"optimism":return"opt-mainnet.g.alchemy.com";case"optimism-goerli":return"opt-goerli.g.alchemy.com"}(0,n.assertArgument)(!1,"unsupported network","network",e)}(e.name)}/v2/${t}`);
                    return r.allowGzip = !0, t === a && (r.retryFunc = async (e, t, r) => ((0, i.showThrottleMessage)("alchemy"), !0)), r
                }
            }
            t.AlchemyProvider = l
        },
        66880: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AnkrProvider = void 0;
            let n = r(82678),
                i = r(26180),
                s = r(92070),
                o = r(75565),
                a = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
            class l extends o.JsonRpcProvider {
                apiKey;
                constructor(e, t) {
                    null == e && (e = "mainnet");
                    let r = s.Network.from(e);
                    null == t && (t = a);
                    let i = l.getRequest(r, t);
                    super(i, r, {
                        polling: !0,
                        staticNetwork: r
                    }), (0, n.defineProperties)(this, {
                        apiKey: t
                    })
                }
                _getProvider(e) {
                    try {
                        return new l(e, this.apiKey)
                    } catch (e) {}
                    return super._getProvider(e)
                }
                static getRequest(e, t) {
                    null == t && (t = a);
                    let r = new n.FetchRequest(`https://${function(e){switch(e){case"mainnet":return"rpc.ankr.com/eth";case"goerli":return"rpc.ankr.com/eth_goerli";case"matic":return"rpc.ankr.com/polygon";case"arbitrum":return"rpc.ankr.com/arbitrum"}(0,n.assertArgument)(!1,"unsupported network","network",e)}(e.name)}/${t}`);
                    return r.allowGzip = !0, t === a && (r.retryFunc = async (e, t, r) => ((0, i.showThrottleMessage)("AnkrProvider"), !0)), r
                }
                getRpcError(e, t) {
                    return "eth_sendRawTransaction" === e.method && t && t.error && "INTERNAL_ERROR: could not replace existing tx" === t.error.message && (t.error.message = "replacement transaction underpriced"), super.getRpcError(e, t)
                }
                isCommunityResource() {
                    return this.apiKey === a
                }
            }
            t.AnkrProvider = l
        },
        14623: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BrowserProvider = void 0;
            let n = r(82678),
                i = r(75565);
            class s extends i.JsonRpcApiPollingProvider {#
                er;
                constructor(e, t) {
                    super(t, {
                        batchMaxCount: 1
                    }), this.#er = async (t, r) => {
                        let n = {
                            method: t,
                            params: r
                        };
                        this.emit("debug", {
                            action: "sendEip1193Request",
                            payload: n
                        });
                        try {
                            let t = await e.request(n);
                            return this.emit("debug", {
                                action: "receiveEip1193Result",
                                result: t
                            }), t
                        } catch (t) {
                            let e = Error(t.message);
                            throw e.code = t.code, e.data = t.data, e.payload = n, this.emit("debug", {
                                action: "receiveEip1193Error",
                                error: e
                            }), e
                        }
                    }
                }
                async send(e, t) {
                    return await this._start(), await super.send(e, t)
                }
                async _send(e) {
                    (0, n.assertArgument)(!Array.isArray(e), "EIP-1193 does not support batch request", "payload", e);
                    try {
                        let t = await this.#er(e.method, e.params || []);
                        return [{
                            id: e.id,
                            result: t
                        }]
                    } catch (t) {
                        return [{
                            id: e.id,
                            error: {
                                code: t.code,
                                data: t.data,
                                message: t.message
                            }
                        }]
                    }
                }
                getRpcError(e, t) {
                    switch ((t = JSON.parse(JSON.stringify(t))).error.code || -1) {
                        case 4001:
                            t.error.message = `ethers-user-denied: ${t.error.message}`;
                            break;
                        case 4200:
                            t.error.message = `ethers-unsupported: ${t.error.message}`
                    }
                    return super.getRpcError(e, t)
                }
                async hasSigner(e) {
                    null == e && (e = 0);
                    let t = await this.send("eth_accounts", []);
                    return "number" == typeof e ? t.length > e : (e = e.toLowerCase(), 0 !== t.filter(t => t.toLowerCase() === e).length)
                }
                async getSigner(e) {
                    if (null == e && (e = 0), !await this.hasSigner(e)) try {
                        await this.#er("eth_requestAccounts", [])
                    } catch (t) {
                        let e = t.payload;
                        throw this.getRpcError(e, {
                            id: e.id,
                            error: t
                        })
                    }
                    return await super.getSigner(e)
                }
            }
            t.BrowserProvider = s
        },
        85318: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CloudflareProvider = void 0;
            let n = r(82678),
                i = r(92070),
                s = r(75565);
            class o extends s.JsonRpcProvider {
                constructor(e) {
                    null == e && (e = "mainnet");
                    let t = i.Network.from(e);
                    (0, n.assertArgument)("mainnet" === t.name, "unsupported network", "network", e), super("https://cloudflare-eth.com/", t, {
                        staticNetwork: t
                    })
                }
            }
            t.CloudflareProvider = o
        },
        11284: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EtherscanProvider = t.EtherscanPlugin = void 0;
            let n = r(14403),
                i = r(81374),
                s = r(9404),
                o = r(82678),
                a = r(96570),
                l = r(92070),
                u = r(74),
                c = r(26180),
                d = "org.ethers.plugins.provider.Etherscan";
            class h extends u.NetworkPlugin {
                baseUrl;
                constructor(e) {
                    super(d), (0, o.defineProperties)(this, {
                        baseUrl: e
                    })
                }
                clone() {
                    return new h(this.baseUrl)
                }
            }
            t.EtherscanPlugin = h;
            let f = ["enableCcipRead"],
                p = 1;
            class g extends a.AbstractProvider {
                network;
                apiKey;#
                en;
                constructor(e, t) {
                    let r = null != t ? t : null;
                    super();
                    let n = l.Network.from(e);
                    this.#en = n.getPlugin(d), (0, o.defineProperties)(this, {
                        apiKey: r,
                        network: n
                    }), this.getBaseUrl()
                }
                getBaseUrl() {
                    if (this.#en) return this.#en.baseUrl;
                    switch (this.network.name) {
                        case "mainnet":
                            return "https://api.etherscan.io";
                        case "goerli":
                            return "https://api-goerli.etherscan.io";
                        case "sepolia":
                            return "https://api-sepolia.etherscan.io";
                        case "arbitrum":
                            return "https://api.arbiscan.io";
                        case "arbitrum-goerli":
                            return "https://api-goerli.arbiscan.io";
                        case "matic":
                            return "https://api.polygonscan.com";
                        case "matic-mumbai":
                            return "https://api-testnet.polygonscan.com";
                        case "optimism":
                            return "https://api-optimistic.etherscan.io";
                        case "optimism-goerli":
                            return "https://api-goerli-optimistic.etherscan.io";
                        case "bnb":
                            return "http://api.bscscan.com";
                        case "bnbt":
                            return "http://api-testnet.bscscan.com"
                    }(0, o.assertArgument)(!1, "unsupported network", "network", this.network)
                }
                getUrl(e, t) {
                    let r = Object.keys(t).reduce((e, r) => {
                            let n = t[r];
                            return null != n && (e += `&${r}=${n}`), e
                        }, ""),
                        n = this.apiKey ? `&apikey=${this.apiKey}` : "";
                    return `${this.getBaseUrl()}/api?module=${e}${r}${n}`
                }
                getPostUrl() {
                    return `${this.getBaseUrl()}/api`
                }
                getPostData(e, t) {
                    return t.module = e, t.apikey = this.apiKey, t
                }
                async detectNetwork() {
                    return this.network
                }
                async fetch(e, t, r) {
                    let n = p++,
                        i = r ? this.getPostUrl() : this.getUrl(e, t),
                        s = r ? this.getPostData(e, t) : null;
                    this.emit("debug", {
                        action: "sendRequest",
                        id: n,
                        url: i,
                        payload: s
                    });
                    let a = new o.FetchRequest(i);
                    a.setThrottleParams({
                        slotInterval: 1e3
                    }), a.retryFunc = (e, t, r) => (this.isCommunityResource() && (0, c.showThrottleMessage)("Etherscan"), Promise.resolve(!0)), a.processFunc = async (t, r) => {
                        let i = r.hasBody() ? JSON.parse((0, o.toUtf8String)(r.body)) : {},
                            s = ("string" == typeof i.result ? i.result : "").toLowerCase().indexOf("rate limit") >= 0;
                        return "proxy" === e ? i && 0 == i.status && "NOTOK" == i.message && s && (this.emit("debug", {
                            action: "receiveError",
                            id: n,
                            reason: "proxy-NOTOK",
                            error: i
                        }), r.throwThrottleError(i.result, 2e3)) : s && (this.emit("debug", {
                            action: "receiveError",
                            id: n,
                            reason: "null result",
                            error: i.result
                        }), r.throwThrottleError(i.result, 2e3)), r
                    }, s && (a.setHeader("content-type", "application/x-www-form-urlencoded; charset=UTF-8"), a.body = Object.keys(s).map(e => `${e}=${s[e]}`).join("&"));
                    let l = await a.send();
                    try {
                        l.assertOk()
                    } catch (e) {
                        this.emit("debug", {
                            action: "receiveError",
                            id: n,
                            error: e,
                            reason: "assertOk"
                        }), (0, o.assert)(!1, "response error", "SERVER_ERROR", {
                            request: a,
                            response: l
                        })
                    }
                    l.hasBody() || (this.emit("debug", {
                        action: "receiveError",
                        id: n,
                        error: "missing body",
                        reason: "null body"
                    }), (0, o.assert)(!1, "missing response", "SERVER_ERROR", {
                        request: a,
                        response: l
                    }));
                    let u = JSON.parse((0, o.toUtf8String)(l.body));
                    return "proxy" === e ? ("2.0" != u.jsonrpc && (this.emit("debug", {
                        action: "receiveError",
                        id: n,
                        result: u,
                        reason: "invalid JSON-RPC"
                    }), (0, o.assert)(!1, "invalid JSON-RPC response (missing jsonrpc='2.0')", "SERVER_ERROR", {
                        request: a,
                        response: l,
                        info: {
                            result: u
                        }
                    })), u.error && (this.emit("debug", {
                        action: "receiveError",
                        id: n,
                        result: u,
                        reason: "JSON-RPC error"
                    }), (0, o.assert)(!1, "error response", "SERVER_ERROR", {
                        request: a,
                        response: l,
                        info: {
                            result: u
                        }
                    })), this.emit("debug", {
                        action: "receiveRequest",
                        id: n,
                        result: u
                    }), u.result) : 0 == u.status && ("No records found" === u.message || "No transactions found" === u.message) ? (this.emit("debug", {
                        action: "receiveRequest",
                        id: n,
                        result: u
                    }), u.result) : (1 == u.status && ("string" != typeof u.message || u.message.match(/^OK/)) || (this.emit("debug", {
                        action: "receiveError",
                        id: n,
                        result: u
                    }), (0, o.assert)(!1, "error response", "SERVER_ERROR", {
                        request: a,
                        response: l,
                        info: {
                            result: u
                        }
                    })), this.emit("debug", {
                        action: "receiveRequest",
                        id: n,
                        result: u
                    }), u.result)
                }
                _getTransactionPostData(e) {
                    let t = {};
                    for (let r in e) {
                        if (f.indexOf(r) >= 0 || null == e[r]) continue;
                        let n = e[r];
                        ("type" !== r || 0 !== n) && (n = ({
                            type: !0,
                            gasLimit: !0,
                            gasPrice: !0,
                            maxFeePerGs: !0,
                            maxPriorityFeePerGas: !0,
                            nonce: !0,
                            value: !0
                        })[r] ? (0, o.toQuantity)(n) : "accessList" === r ? "[" + (0, s.accessListify)(n).map(e => `{address:"${e.address}",storageKeys:["${e.storageKeys.join('","')}"]}`).join(",") + "]" : (0, o.hexlify)(n), t[r] = n)
                    }
                    return t
                }
                _checkError(e, t, r) {
                    let i = "";
                    if ((0, o.isError)(t, "SERVER_ERROR")) {
                        try {
                            i = t.info.result.error.message
                        } catch (e) {}
                        if (!i) try {
                            i = t.info.message
                        } catch (e) {}
                    }
                    if ("estimateGas" === e.method && !i.match(/revert/i) && i.match(/insufficient funds/i) && (0, o.assert)(!1, "insufficient funds", "INSUFFICIENT_FUNDS", {
                            transaction: e.transaction
                        }), ("call" === e.method || "estimateGas" === e.method) && i.match(/execution reverted/i)) {
                        let r = "";
                        try {
                            r = t.info.result.error.data
                        } catch (e) {}
                        let i = n.AbiCoder.getBuiltinCallException(e.method, e.transaction, r);
                        throw i.info = {
                            request: e,
                            error: t
                        }, i
                    }
                    if (i && "broadcastTransaction" === e.method) {
                        let t = s.Transaction.from(e.signedTransaction);
                        i.match(/replacement/i) && i.match(/underpriced/i) && (0, o.assert)(!1, "replacement fee too low", "REPLACEMENT_UNDERPRICED", {
                            transaction: t
                        }), i.match(/insufficient funds/) && (0, o.assert)(!1, "insufficient funds for intrinsic transaction cost", "INSUFFICIENT_FUNDS", {
                            transaction: t
                        }), i.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && (0, o.assert)(!1, "nonce has already been used", "NONCE_EXPIRED", {
                            transaction: t
                        })
                    }
                    throw t
                }
                async _detectNetwork() {
                    return this.network
                }
                async _perform(e) {
                    switch (e.method) {
                        case "chainId":
                            return this.network.chainId;
                        case "getBlockNumber":
                            return this.fetch("proxy", {
                                action: "eth_blockNumber"
                            });
                        case "getGasPrice":
                            return this.fetch("proxy", {
                                action: "eth_gasPrice"
                            });
                        case "getBalance":
                            return this.fetch("account", {
                                action: "balance",
                                address: e.address,
                                tag: e.blockTag
                            });
                        case "getTransactionCount":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionCount",
                                address: e.address,
                                tag: e.blockTag
                            });
                        case "getCode":
                            return this.fetch("proxy", {
                                action: "eth_getCode",
                                address: e.address,
                                tag: e.blockTag
                            });
                        case "getStorage":
                            return this.fetch("proxy", {
                                action: "eth_getStorageAt",
                                address: e.address,
                                position: e.position,
                                tag: e.blockTag
                            });
                        case "broadcastTransaction":
                            return this.fetch("proxy", {
                                action: "eth_sendRawTransaction",
                                hex: e.signedTransaction
                            }, !0).catch(t => this._checkError(e, t, e.signedTransaction));
                        case "getBlock":
                            if ("blockTag" in e) return this.fetch("proxy", {
                                action: "eth_getBlockByNumber",
                                tag: e.blockTag,
                                boolean: e.includeTransactions ? "true" : "false"
                            });
                            (0, o.assert)(!1, "getBlock by blockHash not supported by Etherscan", "UNSUPPORTED_OPERATION", {
                                operation: "getBlock(blockHash)"
                            });
                        case "getTransaction":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionByHash",
                                txhash: e.hash
                            });
                        case "getTransactionReceipt":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionReceipt",
                                txhash: e.hash
                            });
                        case "call":
                            {
                                if ("latest" !== e.blockTag) throw Error("EtherscanProvider does not support blockTag for call");
                                let t = this._getTransactionPostData(e.transaction);t.module = "proxy",
                                t.action = "eth_call";
                                try {
                                    return await this.fetch("proxy", t, !0)
                                } catch (t) {
                                    return this._checkError(e, t, e.transaction)
                                }
                            }
                        case "estimateGas":
                            {
                                let t = this._getTransactionPostData(e.transaction);t.module = "proxy",
                                t.action = "eth_estimateGas";
                                try {
                                    return await this.fetch("proxy", t, !0)
                                } catch (t) {
                                    return this._checkError(e, t, e.transaction)
                                }
                            }
                    }
                    return super._perform(e)
                }
                async getNetwork() {
                    return this.network
                }
                async getEtherPrice() {
                    return "mainnet" !== this.network.name ? 0 : parseFloat((await this.fetch("stats", {
                        action: "ethprice"
                    })).ethusd)
                }
                async getContract(e) {
                    var t;
                    let r = this._getAddress(e);
                    (t = r) && "function" == typeof t.then && (r = await r);
                    try {
                        let e = await this.fetch("contract", {
                                action: "getabi",
                                address: r
                            }),
                            t = JSON.parse(e);
                        return new i.Contract(r, t, this)
                    } catch (e) {
                        return null
                    }
                }
                isCommunityResource() {
                    return null == this.apiKey
                }
            }
            t.EtherscanProvider = g
        },
        15789: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FallbackProvider = void 0;
            let n = r(82678),
                i = r(96570),
                s = r(92070),
                o = BigInt("1"),
                a = BigInt("2");

            function l() {
                return new Date().getTime()
            }

            function u(e) {
                return JSON.stringify(e, (e, t) => "bigint" == typeof t ? {
                    type: "bigint",
                    value: t.toString()
                } : t)
            }
            let c = {
                    stallTimeout: 400,
                    priority: 1,
                    weight: 1
                },
                d = {
                    blockNumber: -2,
                    requests: 0,
                    lateResponses: 0,
                    errorResponses: 0,
                    outOfSync: -1,
                    unsupportedEvents: 0,
                    rollingDuration: 0,
                    score: 0,
                    _network: null,
                    _updateNumber: null,
                    _totalTime: 0,
                    _lastFatalError: null,
                    _lastFatalErrorTimestamp: 0
                };
            async function h(e, t) {
                for (;
                    (e.blockNumber < 0 || e.blockNumber < t) && (e._updateNumber || (e._updateNumber = (async () => {
                        try {
                            let t = await e.provider.getBlockNumber();
                            t > e.blockNumber && (e.blockNumber = t)
                        } catch (t) {
                            e.blockNumber = -2, e._lastFatalError = t, e._lastFatalErrorTimestamp = l()
                        }
                        e._updateNumber = null
                    })()), await e._updateNumber, e.outOfSync++, !e._lastFatalError););
            }

            function f(e) {
                if (null == e) return "null";
                if (Array.isArray(e)) return "[" + e.map(f).join(",") + "]";
                if ("object" == typeof e && "function" == typeof e.toJSON) return f(e.toJSON());
                switch (typeof e) {
                    case "boolean":
                    case "symbol":
                        return e.toString();
                    case "bigint":
                    case "number":
                        return BigInt(e).toString();
                    case "string":
                        return JSON.stringify(e);
                    case "object":
                        {
                            let t = Object.keys(e);
                            return t.sort(),
                            "{" + t.map(t => `${JSON.stringify(t)}:${f(e[t])}`).join(",") + "}"
                        }
                }
                throw console.log("Could not serialize", e), Error("Hmm...")
            }

            function p(e) {
                if ("error" in e) {
                    let t = e.error;
                    return {
                        tag: f(t),
                        value: t
                    }
                }
                let t = e.result;
                return {
                    tag: f(t),
                    value: t
                }
            }

            function g(e, t) {
                let r = new Map;
                for (let {
                        value: e,
                        tag: n,
                        weight: i
                    } of t) {
                    let t = r.get(n) || {
                        value: e,
                        weight: 0
                    };
                    t.weight += i, r.set(n, t)
                }
                let n = null;
                for (let t of r.values()) t.weight >= e && (!n || t.weight > n.weight) && (n = t);
                if (n) return n.value
            }

            function m(e, t) {
                let r = 0,
                    n = new Map,
                    i = null,
                    s = [];
                for (let {
                        value: e,
                        tag: o,
                        weight: a
                    } of t)
                    if (e instanceof Error) {
                        let t = n.get(o) || {
                            value: e,
                            weight: 0
                        };
                        t.weight += a, n.set(o, t), (null == i || t.weight > i.weight) && (i = t)
                    } else s.push(BigInt(e)), r += a;
                if (r < e) return i && i.weight >= e ? i.value : void 0;
                s.sort((e, t) => e < t ? -1 : t > e ? 1 : 0);
                let l = Math.floor(s.length / 2);
                return s.length % 2 ? s[l] : (s[l - 1] + s[l] + o) / a
            }

            function y(e, t) {
                let r = g(e, t);
                if (void 0 !== r) return r;
                for (let e of t)
                    if (e.value) return e.value
            }
            class b extends i.AbstractProvider {
                quorum;
                eventQuorum;
                eventWorkers;#
                ei;#
                es;#
                eo;
                constructor(e, t, r) {
                    super(t, r), this.#ei = e.map(e => e instanceof i.AbstractProvider ? Object.assign({
                        provider: e
                    }, c, d) : Object.assign({}, c, e, d)), this.#es = -2, this.#eo = null, r && null != r.quorum ? this.quorum = r.quorum : this.quorum = Math.ceil(this.#ei.reduce((e, t) => e += t.weight, 0) / 2), this.eventQuorum = 1, this.eventWorkers = 1, (0, n.assertArgument)(this.quorum <= this.#ei.reduce((e, t) => e + t.weight, 0), "quorum exceed provider wieght", "quorum", this.quorum)
                }
                get providerConfigs() {
                    return this.#ei.map(e => {
                        let t = Object.assign({}, e);
                        for (let e in t) "_" === e[0] && delete t[e];
                        return t
                    })
                }
                async _detectNetwork() {
                    return s.Network.from((0, n.getBigInt)(await this._perform({
                        method: "chainId"
                    })))
                }
                async _translatePerform(e, t) {
                    switch (t.method) {
                        case "broadcastTransaction":
                            return await e.broadcastTransaction(t.signedTransaction);
                        case "call":
                            return await e.call(Object.assign({}, t.transaction, {
                                blockTag: t.blockTag
                            }));
                        case "chainId":
                            return (await e.getNetwork()).chainId;
                        case "estimateGas":
                            return await e.estimateGas(t.transaction);
                        case "getBalance":
                            return await e.getBalance(t.address, t.blockTag);
                        case "getBlock":
                            {
                                let r = "blockHash" in t ? t.blockHash : t.blockTag;
                                return await e.getBlock(r, t.includeTransactions)
                            }
                        case "getBlockNumber":
                            return await e.getBlockNumber();
                        case "getCode":
                            return await e.getCode(t.address, t.blockTag);
                        case "getGasPrice":
                            return (await e.getFeeData()).gasPrice;
                        case "getLogs":
                            return await e.getLogs(t.filter);
                        case "getStorage":
                            return await e.getStorage(t.address, t.position, t.blockTag);
                        case "getTransaction":
                            return await e.getTransaction(t.hash);
                        case "getTransactionCount":
                            return await e.getTransactionCount(t.address, t.blockTag);
                        case "getTransactionReceipt":
                            return await e.getTransactionReceipt(t.hash);
                        case "getTransactionResult":
                            return await e.getTransactionResult(t.hash)
                    }
                }#
                ea(e) {
                    let t = Array.from(e).map(e => e.config),
                        r = this.#ei.slice();
                    for (let e of (! function(e) {
                            for (let t = e.length - 1; t > 0; t--) {
                                let r = Math.floor(Math.random() * (t + 1)),
                                    n = e[t];
                                e[t] = e[r], e[r] = n
                            }
                        }(r), r.sort((e, t) => e.priority - t.priority), r))
                        if (!e._lastFatalError && -1 === t.indexOf(e)) return e;
                    return null
                }#
                el(e, t) {
                    let r = this.#ea(e);
                    if (null == r) return null;
                    let n = {
                            config: r,
                            result: null,
                            didBump: !1,
                            perform: null,
                            staller: null
                        },
                        i = l();
                    return n.perform = (async () => {
                        try {
                            r.requests++;
                            let e = await this._translatePerform(r.provider, t);
                            n.result = {
                                result: e
                            }
                        } catch (e) {
                            r.errorResponses++, n.result = {
                                error: e
                            }
                        }
                        let e = l() - i;
                        r._totalTime += e, r.rollingDuration = .95 * r.rollingDuration + .05 * e, n.perform = null
                    })(), n.staller = (async () => {
                        var e;
                        await (e = r.stallTimeout, new Promise(t => {
                            setTimeout(t, e)
                        })), n.staller = null
                    })(), e.add(n), n
                }
                async# eu() {
                    let e = this.#eo;
                    if (!e) {
                        let t = [];
                        this.#ei.forEach(e => {
                            t.push((async () => {
                                await h(e, 0), e._lastFatalError || (e._network = await e.provider.getNetwork())
                            })())
                        }), this.#eo = e = (async () => {
                            await Promise.all(t);
                            let e = null;
                            for (let t of this.#ei) {
                                if (t._lastFatalError) continue;
                                let r = t._network;
                                null == e ? e = r.chainId : r.chainId !== e && (0, n.assert)(!1, "cannot mix providers on different networks", "UNSUPPORTED_OPERATION", {
                                    operation: "new FallbackProvider"
                                })
                            }
                        })()
                    }
                    await e
                }
                async# ec(e, t) {
                    let r = [];
                    for (let t of e)
                        if (null != t.result) {
                            let {
                                tag: e,
                                value: n
                            } = p(t.result);
                            r.push({
                                tag: e,
                                value: n,
                                weight: t.config.weight
                            })
                        }
                    if (!(r.reduce((e, t) => e + t.weight, 0) < this.quorum)) {
                        switch (t.method) {
                            case "getBlockNumber":
                                {-2 === this.#es && (this.#es = Math.ceil((0, n.getNumber)(m(this.quorum, this.#ei.filter(e => !e._lastFatalError).map(e => ({
                                        value: e.blockNumber,
                                        tag: (0, n.getNumber)(e.blockNumber).toString(),
                                        weight: e.weight
                                    }))))));
                                    let e = function(e, t) {
                                        let r;
                                        if (1 === e) return (0, n.getNumber)(m(e, t), "%internal");
                                        let i = new Map,
                                            s = (e, t) => {
                                                let r = i.get(e) || {
                                                    result: e,
                                                    weight: 0
                                                };
                                                r.weight += t, i.set(e, r)
                                            };
                                        for (let {
                                                weight: e,
                                                value: r
                                            } of t) {
                                            let t = (0, n.getNumber)(r);
                                            s(t - 1, e), s(t, e), s(t + 1, e)
                                        }
                                        let o = 0;
                                        for (let {
                                                weight: t,
                                                result: n
                                            } of i.values()) t >= e && (t > o || null != r && t === o && n > r) && (o = t, r = n);
                                        return r
                                    }(this.quorum, r);
                                    if (void 0 === e) return;
                                    return e > this.#es && (this.#es = e),
                                    this.#es
                                }
                            case "getGasPrice":
                            case "estimateGas":
                                return m(this.quorum, r);
                            case "getBlock":
                                if ("blockTag" in t && "pending" === t.blockTag) return y(this.quorum, r);
                                return g(this.quorum, r);
                            case "call":
                            case "chainId":
                            case "getBalance":
                            case "getTransactionCount":
                            case "getCode":
                            case "getStorage":
                            case "getTransaction":
                            case "getTransactionReceipt":
                            case "getLogs":
                                return g(this.quorum, r);
                            case "broadcastTransaction":
                                return y(this.quorum, r)
                        }(0, n.assert)(!1, "unsupported method", "UNSUPPORTED_OPERATION", {
                            operation: `_perform(${u(t.method)})`
                        })
                    }
                }
                async# ed(e, t) {
                    if (0 === e.size) throw Error("no runners?!");
                    let r = [],
                        i = 0;
                    for (let t of e) {
                        if (t.perform && r.push(t.perform), t.staller) {
                            r.push(t.staller);
                            continue
                        }!t.didBump && (t.didBump = !0, i++)
                    }
                    let s = await this.#ec(e, t);
                    if (void 0 !== s) {
                        if (s instanceof Error) throw s;
                        return s
                    }
                    for (let r = 0; r < i; r++) this.#el(e, t);
                    return (0, n.assert)(r.length > 0, "quorum not met", "SERVER_ERROR", {
                        request: "%sub-requests",
                        info: {
                            request: t,
                            results: Array.from(e).map(e => u(e.result))
                        }
                    }), await Promise.race(r), await this.#ed(e, t)
                }
                async _perform(e) {
                    if ("broadcastTransaction" === e.method) {
                        let t = await Promise.all(this.#ei.map(async ({
                                provider: t,
                                weight: r
                            }) => {
                                try {
                                    let n = await t._perform(e);
                                    return Object.assign(p({
                                        result: n
                                    }), {
                                        weight: r
                                    })
                                } catch (e) {
                                    return Object.assign(p({
                                        error: e
                                    }), {
                                        weight: r
                                    })
                                }
                            })),
                            r = y(this.quorum, t);
                        if ((0, n.assert)(void 0 !== r, "problem multi-broadcasting", "SERVER_ERROR", {
                                request: "%sub-requests",
                                info: {
                                    request: e,
                                    results: t.map(u)
                                }
                            }), r instanceof Error) throw r;
                        return r
                    }
                    await this.#eu();
                    let t = new Set;
                    for (let r = 0; r < this.quorum; r++) this.#el(t, e);
                    let r = await this.#ed(t, e);
                    for (let e of t) e.perform && null == e.result && e.config.lateResponses++;
                    return r
                }
                async destroy() {
                    for (let {
                            provider: e
                        } of this.#ei) e.destroy();
                    super.destroy()
                }
            }
            t.FallbackProvider = b
        },
        76932: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InfuraProvider = t.InfuraWebSocketProvider = void 0;
            let n = r(82678),
                i = r(26180),
                s = r(92070),
                o = r(75565),
                a = r(52742),
                l = "84842078b09946638c03157f83405213";
            class u extends a.WebSocketProvider {
                projectId;
                projectSecret;
                constructor(e, t) {
                    let r = new c(e, t),
                        i = r._getConnection();
                    (0, n.assert)(!i.credentials, "INFURA WebSocket project secrets unsupported", "UNSUPPORTED_OPERATION", {
                        operation: "InfuraProvider.getWebSocketProvider()"
                    });
                    let s = i.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
                    super(s, e), (0, n.defineProperties)(this, {
                        projectId: r.projectId,
                        projectSecret: r.projectSecret
                    })
                }
                isCommunityResource() {
                    return this.projectId === l
                }
            }
            t.InfuraWebSocketProvider = u;
            class c extends o.JsonRpcProvider {
                projectId;
                projectSecret;
                constructor(e, t, r) {
                    null == e && (e = "mainnet");
                    let i = s.Network.from(e);
                    null == t && (t = l), null == r && (r = null);
                    let o = c.getRequest(i, t, r);
                    super(o, i, {
                        staticNetwork: i
                    }), (0, n.defineProperties)(this, {
                        projectId: t,
                        projectSecret: r
                    })
                }
                _getProvider(e) {
                    try {
                        return new c(e, this.projectId, this.projectSecret)
                    } catch (e) {}
                    return super._getProvider(e)
                }
                isCommunityResource() {
                    return this.projectId === l
                }
                static getWebSocketProvider(e, t) {
                    return new u(e, t)
                }
                static getRequest(e, t, r) {
                    null == t && (t = l), null == r && (r = null);
                    let s = new n.FetchRequest(`https://${function(e){switch(e){case"mainnet":return"mainnet.infura.io";case"goerli":return"goerli.infura.io";case"sepolia":return"sepolia.infura.io";case"arbitrum":return"arbitrum-mainnet.infura.io";case"arbitrum-goerli":return"arbitrum-goerli.infura.io";case"linea":return"linea-mainnet.infura.io";case"linea-goerli":return"linea-goerli.infura.io";case"matic":return"polygon-mainnet.infura.io";case"matic-mumbai":return"polygon-mumbai.infura.io";case"optimism":return"optimism-mainnet.infura.io";case"optimism-goerli":return"optimism-goerli.infura.io"}(0,n.assertArgument)(!1,"unsupported network","network",e)}(e.name)}/v3/${t}`);
                    return s.allowGzip = !0, r && s.setCredentials("", r), t === l && (s.retryFunc = async (e, t, r) => ((0, i.showThrottleMessage)("InfuraProvider"), !0)), s
                }
            }
            t.InfuraProvider = c
        },
        61024: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IpcSocketProvider = void 0, t.IpcSocketProvider = void 0
        },
        75565: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.JsonRpcProvider = t.JsonRpcApiPollingProvider = t.JsonRpcApiProvider = t.JsonRpcSigner = void 0;
            let n = r(14403),
                i = r(29527),
                s = r(94194),
                o = r(9404),
                a = r(82678),
                l = r(96570),
                u = r(46812),
                c = r(92070),
                d = r(15586),
                h = r(58402),
                f = "bigint,boolean,function,number,string,symbol".split(/,/g);

            function p(e) {
                if (null == e || f.indexOf(typeof e) >= 0 || "function" == typeof e.getAddress) return e;
                if (Array.isArray(e)) return e.map(p);
                if ("object" == typeof e) return Object.keys(e).reduce((t, r) => (t[r] = e[r], t), {});
                throw Error(`should not happen: ${e} (${typeof e})`)
            }

            function g(e) {
                return e ? e.toLowerCase() : e
            }

            function m(e) {
                return e && "number" == typeof e.pollingInterval
            }
            let y = {
                polling: !1,
                staticNetwork: null,
                batchStallTime: 10,
                batchMaxSize: 1048576,
                batchMaxCount: 100,
                cacheTimeout: 250,
                pollingInterval: 4e3
            };
            class b extends u.AbstractSigner {
                address;
                constructor(e, t) {
                    super(e), t = (0, i.getAddress)(t), (0, a.defineProperties)(this, {
                        address: t
                    })
                }
                connect(e) {
                    (0, a.assert)(!1, "cannot reconnect JsonRpcSigner", "UNSUPPORTED_OPERATION", {
                        operation: "signer.connect"
                    })
                }
                async getAddress() {
                    return this.address
                }
                async populateTransaction(e) {
                    return await this.populateCall(e)
                }
                async sendUncheckedTransaction(e) {
                    let t = p(e),
                        r = [];
                    if (t.from) {
                        let n = t.from;
                        r.push((async () => {
                            let r = await (0, i.resolveAddress)(n, this.provider);
                            (0, a.assertArgument)(null != r && r.toLowerCase() === this.address.toLowerCase(), "from address mismatch", "transaction", e), t.from = r
                        })())
                    } else t.from = this.address;
                    if (null == t.gasLimit && r.push((async () => {
                            t.gasLimit = await this.provider.estimateGas({ ...t,
                                from: this.address
                            })
                        })()), null != t.to) {
                        let e = t.to;
                        r.push((async () => {
                            t.to = await (0, i.resolveAddress)(e, this.provider)
                        })())
                    }
                    r.length && await Promise.all(r);
                    let n = this.provider.getRpcTransaction(t);
                    return this.provider.send("eth_sendTransaction", [n])
                }
                async sendTransaction(e) {
                    let t = await this.provider.getBlockNumber(),
                        r = await this.sendUncheckedTransaction(e);
                    return await new Promise((e, n) => {
                        let i = [1e3, 100],
                            s = async () => {
                                let n = await this.provider.getTransaction(r);
                                if (null != n) {
                                    e(n.replaceableTransaction(t));
                                    return
                                }
                                this.provider._setTimeout(() => {
                                    s()
                                }, i.pop() || 4e3)
                            };
                        s()
                    })
                }
                async signTransaction(e) {
                    let t = p(e);
                    if (t.from) {
                        let r = await (0, i.resolveAddress)(t.from, this.provider);
                        (0, a.assertArgument)(null != r && r.toLowerCase() === this.address.toLowerCase(), "from address mismatch", "transaction", e), t.from = r
                    } else t.from = this.address;
                    let r = this.provider.getRpcTransaction(t);
                    return await this.provider.send("eth_signTransaction", [r])
                }
                async signMessage(e) {
                    let t = "string" == typeof e ? (0, a.toUtf8Bytes)(e) : e;
                    return await this.provider.send("personal_sign", [(0, a.hexlify)(t), this.address.toLowerCase()])
                }
                async signTypedData(e, t, r) {
                    let n = p(r),
                        o = await s.TypedDataEncoder.resolveNames(e, t, n, async e => {
                            let t = await (0, i.resolveAddress)(e);
                            return (0, a.assertArgument)(null != t, "TypedData does not support null address", "value", e), t
                        });
                    return await this.provider.send("eth_signTypedData_v4", [this.address.toLowerCase(), JSON.stringify(s.TypedDataEncoder.getPayload(o.domain, t, o.value))])
                }
                async unlock(e) {
                    return this.provider.send("personal_unlockAccount", [this.address.toLowerCase(), e, null])
                }
                async _legacySignMessage(e) {
                    let t = "string" == typeof e ? (0, a.toUtf8Bytes)(e) : e;
                    return await this.provider.send("eth_sign", [this.address.toLowerCase(), (0, a.hexlify)(t)])
                }
            }
            t.JsonRpcSigner = b;
            class w extends l.AbstractProvider {#
                m;#
                eh;#
                ef;#
                ep;#
                eg;#
                em;#
                ey() {
                    if (this.#ep) return;
                    let e = 1 === this._getOption("batchMaxCount") ? 0 : this._getOption("batchStallTime");
                    this.#ep = setTimeout(() => {
                        this.#ep = null;
                        let e = this.#ef;
                        for (this.#ef = []; e.length;) {
                            let t = [e.shift()];
                            for (; e.length && t.length !== this.#m.batchMaxCount;) {
                                t.push(e.shift());
                                let r = JSON.stringify(t.map(e => e.payload));
                                if (r.length > this.#m.batchMaxSize) {
                                    e.unshift(t.pop());
                                    break
                                }
                            }(async () => {
                                let e = 1 === t.length ? t[0].payload : t.map(e => e.payload);
                                this.emit("debug", {
                                    action: "sendRpcPayload",
                                    payload: e
                                });
                                try {
                                    let r = await this._send(e);
                                    for (let {
                                            resolve: e,
                                            reject: n,
                                            payload: i
                                        } of (this.emit("debug", {
                                            action: "receiveRpcResult",
                                            result: r
                                        }), t)) {
                                        if (this.destroyed) {
                                            n((0, a.makeError)("provider destroyed; cancelled request", "UNSUPPORTED_OPERATION", {
                                                operation: i.method
                                            }));
                                            continue
                                        }
                                        let t = r.filter(e => e.id === i.id)[0];
                                        if (null == t) {
                                            let e = (0, a.makeError)("missing response for request", "BAD_DATA", {
                                                value: r,
                                                info: {
                                                    payload: i
                                                }
                                            });
                                            this.emit("error", e), n(e);
                                            continue
                                        }
                                        if ("error" in t) {
                                            n(this.getRpcError(i, t));
                                            continue
                                        }
                                        e(t.result)
                                    }
                                } catch (e) {
                                    for (let {
                                            reject: r
                                        } of (this.emit("debug", {
                                            action: "receiveRpcError",
                                            error: e
                                        }), t)) r(e)
                                }
                            })()
                        }
                    }, e)
                }
                constructor(e, t) {
                    super(e, t), this.#eh = 1, this.#m = Object.assign({}, y, t || {}), this.#ef = [], this.#ep = null, this.#em = null; {
                        let e = null,
                            t = new Promise(t => {
                                e = t
                            });
                        this.#eg = {
                            promise: t,
                            resolve: e
                        }
                    }
                    let r = this._getOption("staticNetwork");
                    r && ((0, a.assertArgument)(null == e || r.matches(e), "staticNetwork MUST match network object", "options", t), this.#em = r)
                }
                _getOption(e) {
                    return this.#m[e]
                }
                get _network() {
                    return (0, a.assert)(this.#em, "network is not available yet", "NETWORK_ERROR"), this.#em
                }
                async _perform(e) {
                    if ("call" === e.method || "estimateGas" === e.method) {
                        let t = e.transaction;
                        if (t && null != t.type && (0, a.getBigInt)(t.type) && null == t.maxFeePerGas && null == t.maxPriorityFeePerGas) {
                            let r = await this.getFeeData();
                            null == r.maxFeePerGas && null == r.maxPriorityFeePerGas && (e = Object.assign({}, e, {
                                transaction: Object.assign({}, t, {
                                    type: void 0
                                })
                            }))
                        }
                    }
                    let t = this.getRpcRequest(e);
                    return null != t ? await this.send(t.method, t.args) : super._perform(e)
                }
                async _detectNetwork() {
                    let e;
                    let t = this._getOption("staticNetwork");
                    if (t) return t;
                    if (this.ready) return c.Network.from((0, a.getBigInt)(await this.send("eth_chainId", [])));
                    let r = {
                        id: this.#eh++,
                        method: "eth_chainId",
                        params: [],
                        jsonrpc: "2.0"
                    };
                    this.emit("debug", {
                        action: "sendRpcPayload",
                        payload: r
                    });
                    try {
                        e = (await this._send(r))[0]
                    } catch (e) {
                        throw this.emit("debug", {
                            action: "receiveRpcError",
                            error: e
                        }), e
                    }
                    if (this.emit("debug", {
                            action: "receiveRpcResult",
                            result: e
                        }), "result" in e) return c.Network.from((0, a.getBigInt)(e.result));
                    throw this.getRpcError(r, e)
                }
                _start() {
                    null != this.#eg && null != this.#eg.resolve && (this.#eg.resolve(), this.#eg = null, (async () => {
                        for (; null == this.#em && !this.destroyed;) try {
                            this.#em = await this._detectNetwork()
                        } catch (e) {
                            if (this.destroyed) break;
                            console.log("JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)"), this.emit("error", (0, a.makeError)("failed to bootstrap network detection", "NETWORK_ERROR", {
                                event: "initial-network-discovery",
                                info: {
                                    error: e
                                }
                            })), await new Promise(e => {
                                setTimeout(e, 1e3)
                            })
                        }
                        this.#ey()
                    })())
                }
                async _waitUntilReady() {
                    if (null != this.#eg) return await this.#eg.promise
                }
                _getSubscriber(e) {
                    return "pending" === e.type ? new d.FilterIdPendingSubscriber(this) : "event" === e.type ? this._getOption("polling") ? new h.PollingEventSubscriber(this, e.filter) : new d.FilterIdEventSubscriber(this, e.filter) : "orphan" === e.type && "drop-log" === e.filter.orphan ? new l.UnmanagedSubscriber("orphan") : super._getSubscriber(e)
                }
                get ready() {
                    return null == this.#eg
                }
                getRpcTransaction(e) {
                    let t = {};
                    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(r => {
                        if (null == e[r]) return;
                        let n = r;
                        "gasLimit" === r && (n = "gas"), t[n] = (0, a.toQuantity)((0, a.getBigInt)(e[r], `tx.${r}`))
                    }), ["from", "to", "data"].forEach(r => {
                        null != e[r] && (t[r] = (0, a.hexlify)(e[r]))
                    }), e.accessList && (t.accessList = (0, o.accessListify)(e.accessList)), t
                }
                getRpcRequest(e) {
                    switch (e.method) {
                        case "chainId":
                            return {
                                method: "eth_chainId",
                                args: []
                            };
                        case "getBlockNumber":
                            return {
                                method: "eth_blockNumber",
                                args: []
                            };
                        case "getGasPrice":
                            return {
                                method: "eth_gasPrice",
                                args: []
                            };
                        case "getBalance":
                            return {
                                method: "eth_getBalance",
                                args: [g(e.address), e.blockTag]
                            };
                        case "getTransactionCount":
                            return {
                                method: "eth_getTransactionCount",
                                args: [g(e.address), e.blockTag]
                            };
                        case "getCode":
                            return {
                                method: "eth_getCode",
                                args: [g(e.address), e.blockTag]
                            };
                        case "getStorage":
                            return {
                                method: "eth_getStorageAt",
                                args: [g(e.address), "0x" + e.position.toString(16), e.blockTag]
                            };
                        case "broadcastTransaction":
                            return {
                                method: "eth_sendRawTransaction",
                                args: [e.signedTransaction]
                            };
                        case "getBlock":
                            if ("blockTag" in e) return {
                                method: "eth_getBlockByNumber",
                                args: [e.blockTag, !!e.includeTransactions]
                            };
                            if ("blockHash" in e) return {
                                method: "eth_getBlockByHash",
                                args: [e.blockHash, !!e.includeTransactions]
                            };
                            break;
                        case "getTransaction":
                            return {
                                method: "eth_getTransactionByHash",
                                args: [e.hash]
                            };
                        case "getTransactionReceipt":
                            return {
                                method: "eth_getTransactionReceipt",
                                args: [e.hash]
                            };
                        case "call":
                            return {
                                method: "eth_call",
                                args: [this.getRpcTransaction(e.transaction), e.blockTag]
                            };
                        case "estimateGas":
                            return {
                                method: "eth_estimateGas",
                                args: [this.getRpcTransaction(e.transaction)]
                            };
                        case "getLogs":
                            return e.filter && null != e.filter.address && (Array.isArray(e.filter.address) ? e.filter.address = e.filter.address.map(g) : e.filter.address = g(e.filter.address)), {
                                method: "eth_getLogs",
                                args: [e.filter]
                            }
                    }
                    return null
                }
                getRpcError(e, t) {
                    let {
                        method: r
                    } = e, {
                        error: i
                    } = t;
                    if ("eth_estimateGas" === r && i.message) {
                        let t = i.message;
                        if (!t.match(/revert/i) && t.match(/insufficient funds/i)) return (0, a.makeError)("insufficient funds", "INSUFFICIENT_FUNDS", {
                            transaction: e.params[0],
                            info: {
                                payload: e,
                                error: i
                            }
                        })
                    }
                    if ("eth_call" === r || "eth_estimateGas" === r) {
                        let t = function e(t) {
                                if (null == t) return null;
                                if ("string" == typeof t.message && t.message.match(/revert/i) && (0, a.isHexString)(t.data)) return {
                                    message: t.message,
                                    data: t.data
                                };
                                if ("object" == typeof t) {
                                    for (let r in t) {
                                        let n = e(t[r]);
                                        if (n) return n
                                    }
                                    return null
                                }
                                if ("string" == typeof t) try {
                                    return e(JSON.parse(t))
                                } catch (e) {}
                                return null
                            }(i),
                            s = n.AbiCoder.getBuiltinCallException("eth_call" === r ? "call" : "estimateGas", e.params[0], t ? t.data : null);
                        return s.info = {
                            error: i,
                            payload: e
                        }, s
                    }
                    let s = JSON.stringify(function(e) {
                        let t = [];
                        return ! function e(t, r) {
                            if (null != t) {
                                if ("string" == typeof t.message && r.push(t.message), "object" == typeof t)
                                    for (let n in t) e(t[n], r);
                                if ("string" == typeof t) try {
                                    return e(JSON.parse(t), r)
                                } catch (e) {}
                            }
                        }(e, t), t
                    }(i));
                    if ("string" == typeof i.message && i.message.match(/user denied|ethers-user-denied/i)) return (0, a.makeError)("user rejected action", "ACTION_REJECTED", {
                        action: {
                            eth_sign: "signMessage",
                            personal_sign: "signMessage",
                            eth_signTypedData_v4: "signTypedData",
                            eth_signTransaction: "signTransaction",
                            eth_sendTransaction: "sendTransaction",
                            eth_requestAccounts: "requestAccess",
                            wallet_requestAccounts: "requestAccess"
                        }[r] || "unknown",
                        reason: "rejected",
                        info: {
                            payload: e,
                            error: i
                        }
                    });
                    if ("eth_sendRawTransaction" === r || "eth_sendTransaction" === r) {
                        let t = e.params[0];
                        if (s.match(/insufficient funds|base fee exceeds gas limit/i)) return (0, a.makeError)("insufficient funds for intrinsic transaction cost", "INSUFFICIENT_FUNDS", {
                            transaction: t,
                            info: {
                                error: i
                            }
                        });
                        if (s.match(/nonce/i) && s.match(/too low/i)) return (0, a.makeError)("nonce has already been used", "NONCE_EXPIRED", {
                            transaction: t,
                            info: {
                                error: i
                            }
                        });
                        if (s.match(/replacement transaction/i) && s.match(/underpriced/i)) return (0, a.makeError)("replacement fee too low", "REPLACEMENT_UNDERPRICED", {
                            transaction: t,
                            info: {
                                error: i
                            }
                        });
                        if (s.match(/only replay-protected/i)) return (0, a.makeError)("legacy pre-eip-155 transactions not supported", "UNSUPPORTED_OPERATION", {
                            operation: r,
                            info: {
                                transaction: t,
                                info: {
                                    error: i
                                }
                            }
                        })
                    }
                    let o = !!s.match(/the method .* does not exist/i);
                    return (!o && i && i.details && i.details.startsWith("Unauthorized method:") && (o = !0), o) ? (0, a.makeError)("unsupported operation", "UNSUPPORTED_OPERATION", {
                        operation: e.method,
                        info: {
                            error: i,
                            payload: e
                        }
                    }) : (0, a.makeError)("could not coalesce error", "UNKNOWN_ERROR", {
                        error: i,
                        payload: e
                    })
                }
                send(e, t) {
                    if (this.destroyed) return Promise.reject((0, a.makeError)("provider destroyed; cancelled request", "UNSUPPORTED_OPERATION", {
                        operation: e
                    }));
                    let r = this.#eh++,
                        n = new Promise((n, i) => {
                            this.#ef.push({
                                resolve: n,
                                reject: i,
                                payload: {
                                    method: e,
                                    params: t,
                                    id: r,
                                    jsonrpc: "2.0"
                                }
                            })
                        });
                    return this.#ey(), n
                }
                async getSigner(e) {
                    null == e && (e = 0);
                    let t = this.send("eth_accounts", []);
                    if ("number" == typeof e) {
                        let r = await t;
                        if (e >= r.length) throw Error("no such account");
                        return new b(this, r[e])
                    }
                    let {
                        accounts: r
                    } = await (0, a.resolveProperties)({
                        network: this.getNetwork(),
                        accounts: t
                    });
                    for (let t of (e = (0, i.getAddress)(e), r))
                        if ((0, i.getAddress)(t) === e) return new b(this, e);
                    throw Error("invalid account")
                }
                async listAccounts() {
                    let e = await this.send("eth_accounts", []);
                    return e.map(e => new b(this, e))
                }
                destroy() {
                    for (let {
                            payload: e,
                            reject: t
                        } of (this.#ep && (clearTimeout(this.#ep), this.#ep = null), this.#ef)) t((0, a.makeError)("provider destroyed; cancelled request", "UNSUPPORTED_OPERATION", {
                        operation: e.method
                    }));
                    this.#ef = [], super.destroy()
                }
            }
            t.JsonRpcApiProvider = w;
            class A extends w {#
                eb;
                constructor(e, t) {
                    super(e, t), this.#eb = 4e3
                }
                _getSubscriber(e) {
                    let t = super._getSubscriber(e);
                    return m(t) && (t.pollingInterval = this.#eb), t
                }
                get pollingInterval() {
                    return this.#eb
                }
                set pollingInterval(e) {
                    if (!Number.isInteger(e) || e < 0) throw Error("invalid interval");
                    this.#eb = e, this._forEachSubscriber(e => {
                        m(e) && (e.pollingInterval = this.#eb)
                    })
                }
            }
            t.JsonRpcApiPollingProvider = A, t.JsonRpcProvider = class extends A {#
                ew;
                constructor(e, t, r) {
                    null == e && (e = "http://localhost:8545"), super(t, r), "string" == typeof e ? this.#ew = new a.FetchRequest(e) : this.#ew = e.clone()
                }
                _getConnection() {
                    return this.#ew.clone()
                }
                async send(e, t) {
                    return await this._start(), await super.send(e, t)
                }
                async _send(e) {
                    let t = this._getConnection();
                    t.body = JSON.stringify(e), t.setHeader("content-type", "application/json");
                    let r = await t.send();
                    r.assertOk();
                    let n = r.bodyJson;
                    return Array.isArray(n) || (n = [n]), n
                }
            }
        },
        68502: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PocketProvider = void 0;
            let n = r(82678),
                i = r(26180),
                s = r(92070),
                o = r(75565),
                a = "62e1ad51b37b8e00394bda3b";
            class l extends o.JsonRpcProvider {
                applicationId;
                applicationSecret;
                constructor(e, t, r) {
                    null == e && (e = "mainnet");
                    let i = s.Network.from(e);
                    null == t && (t = a), null == r && (r = null);
                    let o = l.getRequest(i, t, r);
                    super(o, i, {
                        staticNetwork: i
                    }), (0, n.defineProperties)(this, {
                        applicationId: t,
                        applicationSecret: r
                    })
                }
                _getProvider(e) {
                    try {
                        return new l(e, this.applicationId, this.applicationSecret)
                    } catch (e) {}
                    return super._getProvider(e)
                }
                static getRequest(e, t, r) {
                    null == t && (t = a);
                    let s = new n.FetchRequest(`https://${function(e){switch(e){case"mainnet":return"eth-mainnet.gateway.pokt.network";case"goerli":return"eth-goerli.gateway.pokt.network";case"matic":return"poly-mainnet.gateway.pokt.network";case"matic-mumbai":return"polygon-mumbai-rpc.gateway.pokt.network"}(0,n.assertArgument)(!1,"unsupported network","network",e)}(e.name)}/v1/lb/${t}`);
                    return s.allowGzip = !0, r && s.setCredentials("", r), t === a && (s.retryFunc = async (e, t, r) => ((0, i.showThrottleMessage)("PocketProvider"), !0)), s
                }
                isCommunityResource() {
                    return this.applicationId === a
                }
            }
            t.PocketProvider = l
        },
        3007: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.QuickNodeProvider = void 0;
            let n = r(82678),
                i = r(26180),
                s = r(92070),
                o = r(75565),
                a = "919b412a057b5e9c9b6dce193c5a60242d6efadb";
            class l extends o.JsonRpcProvider {
                token;
                constructor(e, t) {
                    null == e && (e = "mainnet");
                    let r = s.Network.from(e);
                    null == t && (t = a);
                    let i = l.getRequest(r, t);
                    super(i, r, {
                        staticNetwork: r
                    }), (0, n.defineProperties)(this, {
                        token: t
                    })
                }
                _getProvider(e) {
                    try {
                        return new l(e, this.token)
                    } catch (e) {}
                    return super._getProvider(e)
                }
                isCommunityResource() {
                    return this.token === a
                }
                static getRequest(e, t) {
                    null == t && (t = a);
                    let r = new n.FetchRequest(`https://${function(e){switch(e){case"mainnet":return"ethers.quiknode.pro";case"goerli":return"ethers.ethereum-goerli.quiknode.pro";case"arbitrum":return"ethers.arbitrum-mainnet.quiknode.pro";case"arbitrum-goerli":return"ethers.arbitrum-goerli.quiknode.pro";case"matic":return"ethers.matic.quiknode.pro";case"matic-mumbai":return"ethers.matic-testnet.quiknode.pro";case"optimism":return"ethers.optimism.quiknode.pro";case"optimism-goerli":return"ethers.optimism-goerli.quiknode.pro"}(0,n.assertArgument)(!1,"unsupported network","network",e)}(e.name)}/${t}`);
                    return r.allowGzip = !0, t === a && (r.retryFunc = async (e, t, r) => ((0, i.showThrottleMessage)("QuickNodeProvider"), !0)), r
                }
            }
            t.QuickNodeProvider = l
        },
        95452: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SocketProvider = t.SocketEventSubscriber = t.SocketPendingSubscriber = t.SocketBlockSubscriber = t.SocketSubscriber = void 0;
            let n = r(96570),
                i = r(82678),
                s = r(75565);
            class o {#
                eA;#
                y;
                get filter() {
                    return JSON.parse(this.#y)
                }#
                ev;#
                eE;#
                eP;
                constructor(e, t) {
                    this.#eA = e, this.#y = JSON.stringify(t), this.#ev = null, this.#eE = null, this.#eP = null
                }
                start() {
                    this.#ev = this.#eA.send("eth_subscribe", this.filter).then(e => (this.#eA._register(e, this), e))
                }
                stop() {
                    this.#ev.then(e => {
                        this.#eA.send("eth_unsubscribe", [e])
                    }), this.#ev = null
                }
                pause(e) {
                    (0, i.assert)(e, "preserve logs while paused not supported by SocketSubscriber yet", "UNSUPPORTED_OPERATION", {
                        operation: "pause(false)"
                    }), this.#eE = !!e
                }
                resume() {
                    this.#eE = null
                }
                _handleMessage(e) {
                    if (null != this.#ev && null === this.#eE) {
                        let t = this.#eP;
                        t = null == t ? this._emit(this.#eA, e) : t.then(async () => {
                            await this._emit(this.#eA, e)
                        }), this.#eP = t.then(() => {
                            this.#eP === t && (this.#eP = null)
                        })
                    }
                }
                async _emit(e, t) {
                    throw Error("sub-classes must implemente this; _emit")
                }
            }
            t.SocketSubscriber = o;
            class a extends o {
                constructor(e) {
                    super(e, ["newHeads"])
                }
                async _emit(e, t) {
                    e.emit("block", parseInt(t.number))
                }
            }
            t.SocketBlockSubscriber = a;
            class l extends o {
                constructor(e) {
                    super(e, ["newPendingTransactions"])
                }
                async _emit(e, t) {
                    e.emit("pending", t)
                }
            }
            t.SocketPendingSubscriber = l;
            class u extends o {#
                eS;
                get logFilter() {
                    return JSON.parse(this.#eS)
                }
                constructor(e, t) {
                    super(e, ["logs", t]), this.#eS = JSON.stringify(t)
                }
                async _emit(e, t) {
                    e.emit(this.logFilter, e._wrapLog(t, e._network))
                }
            }
            t.SocketEventSubscriber = u;
            class c extends s.JsonRpcApiProvider {#
                eO;#
                x;#
                ek;
                constructor(e) {
                    super(e, {
                        batchMaxCount: 1
                    }), this.#eO = new Map, this.#x = new Map, this.#ek = new Map
                }
                _getSubscriber(e) {
                    switch (e.type) {
                        case "close":
                            return new n.UnmanagedSubscriber("close");
                        case "block":
                            return new a(this);
                        case "pending":
                            return new l(this);
                        case "event":
                            return new u(this, e.filter);
                        case "orphan":
                            if ("drop-log" === e.filter.orphan) return new n.UnmanagedSubscriber("drop-log")
                    }
                    return super._getSubscriber(e)
                }
                _register(e, t) {
                    this.#x.set(e, t);
                    let r = this.#ek.get(e);
                    if (r) {
                        for (let e of r) t._handleMessage(e);
                        this.#ek.delete(e)
                    }
                }
                async _send(e) {
                    (0, i.assertArgument)(!Array.isArray(e), "WebSocket does not support batch send", "payload", e);
                    let t = new Promise((t, r) => {
                        this.#eO.set(e.id, {
                            payload: e,
                            resolve: t,
                            reject: r
                        })
                    });
                    return await this._waitUntilReady(), await this._write(JSON.stringify(e)), [await t]
                }
                async _processMessage(e) {
                    let t = JSON.parse(e);
                    if (t && "object" == typeof t && "id" in t) {
                        let e = this.#eO.get(t.id);
                        if (null == e) {
                            this.emit("error", (0, i.makeError)("received result for unknown id", "UNKNOWN_ERROR", {
                                reasonCode: "UNKNOWN_ID",
                                result: t
                            }));
                            return
                        }
                        this.#eO.delete(t.id), e.resolve(t)
                    } else if (t && "eth_subscription" === t.method) {
                        let e = t.params.subscription,
                            r = this.#x.get(e);
                        if (r) r._handleMessage(t.params.result);
                        else {
                            let r = this.#ek.get(e);
                            null == r && (r = [], this.#ek.set(e, r)), r.push(t.params.result)
                        }
                    } else {
                        this.emit("error", (0, i.makeError)("received unexpected message", "UNKNOWN_ERROR", {
                            reasonCode: "UNEXPECTED_MESSAGE",
                            result: t
                        }));
                        return
                    }
                }
                async _write(e) {
                    throw Error("sub-classes must override this")
                }
            }
            t.SocketProvider = c
        },
        52742: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WebSocketProvider = void 0;
            let n = r(2681),
                i = r(95452);
            class s extends i.SocketProvider {#
                ew;#
                eC;
                get websocket() {
                    if (null == this.#eC) throw Error("websocket closed");
                    return this.#eC
                }
                constructor(e, t) {
                    super(t), "string" == typeof e ? (this.#ew = () => new n.WebSocket(e), this.#eC = this.#ew()) : "function" == typeof e ? (this.#ew = e, this.#eC = e()) : (this.#ew = null, this.#eC = e), this.websocket.onopen = async () => {
                        try {
                            await this._start(), this.resume()
                        } catch (e) {
                            console.log("failed to start WebsocketProvider", e)
                        }
                    }, this.websocket.onmessage = e => {
                        this._processMessage(e.data)
                    }
                }
                async _write(e) {
                    this.websocket.send(e)
                }
                async destroy() {
                    null != this.#eC && (this.#eC.close(), this.#eC = null), super.destroy()
                }
            }
            t.WebSocketProvider = s
        },
        16203: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TransactionResponse = t.TransactionReceipt = t.Log = t.Block = t.copyRequest = t.FeeData = void 0;
            let n = r(82678),
                i = r(9404),
                s = BigInt(0);

            function o(e) {
                return null == e ? null : e
            }

            function a(e) {
                return null == e ? null : e.toString()
            }
            t.FeeData = class {
                gasPrice;
                maxFeePerGas;
                maxPriorityFeePerGas;
                constructor(e, t, r) {
                    (0, n.defineProperties)(this, {
                        gasPrice: o(e),
                        maxFeePerGas: o(t),
                        maxPriorityFeePerGas: o(r)
                    })
                }
                toJSON() {
                    let {
                        gasPrice: e,
                        maxFeePerGas: t,
                        maxPriorityFeePerGas: r
                    } = this;
                    return {
                        _type: "FeeData",
                        gasPrice: a(e),
                        maxFeePerGas: a(t),
                        maxPriorityFeePerGas: a(r)
                    }
                }
            }, t.copyRequest = function(e) {
                let t = {};
                for (let r of (e.to && (t.to = e.to), e.from && (t.from = e.from), e.data && (t.data = (0, n.hexlify)(e.data)), "chainId,gasLimit,gasPrice,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/))) r in e && null != e[r] && (t[r] = (0, n.getBigInt)(e[r], `request.${r}`));
                for (let r of "type,nonce".split(/,/)) r in e && null != e[r] && (t[r] = (0, n.getNumber)(e[r], `request.${r}`));
                return e.accessList && (t.accessList = (0, i.accessListify)(e.accessList)), "blockTag" in e && (t.blockTag = e.blockTag), "enableCcipRead" in e && (t.enableCcipRead = !!e.enableCcipRead), "customData" in e && (t.customData = e.customData), t
            };
            class l {
                provider;
                number;
                hash;
                timestamp;
                parentHash;
                nonce;
                difficulty;
                gasLimit;
                gasUsed;
                miner;
                extraData;
                baseFeePerGas;#
                ex;
                constructor(e, t) {
                    this.#ex = e.transactions.map(e => "string" != typeof e ? new d(e, t) : e), (0, n.defineProperties)(this, {
                        provider: t,
                        hash: o(e.hash),
                        number: e.number,
                        timestamp: e.timestamp,
                        parentHash: e.parentHash,
                        nonce: e.nonce,
                        difficulty: e.difficulty,
                        gasLimit: e.gasLimit,
                        gasUsed: e.gasUsed,
                        miner: e.miner,
                        extraData: e.extraData,
                        baseFeePerGas: o(e.baseFeePerGas)
                    })
                }
                get transactions() {
                    return this.#ex.map(e => "string" == typeof e ? e : e.hash)
                }
                get prefetchedTransactions() {
                    let e = this.#ex.slice();
                    return 0 === e.length ? [] : ((0, n.assert)("object" == typeof e[0], "transactions were not prefetched with block request", "UNSUPPORTED_OPERATION", {
                        operation: "transactionResponses()"
                    }), e)
                }
                toJSON() {
                    let {
                        baseFeePerGas: e,
                        difficulty: t,
                        extraData: r,
                        gasLimit: n,
                        gasUsed: i,
                        hash: s,
                        miner: o,
                        nonce: l,
                        number: u,
                        parentHash: c,
                        timestamp: d,
                        transactions: h
                    } = this;
                    return {
                        _type: "Block",
                        baseFeePerGas: a(e),
                        difficulty: a(t),
                        extraData: r,
                        gasLimit: a(n),
                        gasUsed: a(i),
                        hash: s,
                        miner: o,
                        nonce: l,
                        number: u,
                        parentHash: c,
                        timestamp: d,
                        transactions: h
                    }
                }[Symbol.iterator]() {
                    let e = 0,
                        t = this.transactions;
                    return {
                        next: () => e < this.length ? {
                            value: t[e++],
                            done: !1
                        } : {
                            value: void 0,
                            done: !0
                        }
                    }
                }
                get length() {
                    return this.#ex.length
                }
                get date() {
                    return null == this.timestamp ? null : new Date(1e3 * this.timestamp)
                }
                async getTransaction(e) {
                    let t;
                    if ("number" == typeof e) t = this.#ex[e];
                    else {
                        let r = e.toLowerCase();
                        for (let e of this.#ex) {
                            if ("string" == typeof e) {
                                if (e !== r) continue;
                                t = e;
                                break
                            }
                            if (e.hash !== r) {
                                t = e;
                                break
                            }
                        }
                    }
                    if (null == t) throw Error("no such tx");
                    return "string" == typeof t ? await this.provider.getTransaction(t) : t
                }
                getPrefetchedTransaction(e) {
                    let t = this.prefetchedTransactions;
                    if ("number" == typeof e) return t[e];
                    for (let r of (e = e.toLowerCase(), t))
                        if (r.hash === e) return r;
                    (0, n.assertArgument)(!1, "no matching transaction", "indexOrHash", e)
                }
                isMined() {
                    return !!this.hash
                }
                isLondon() {
                    return !!this.baseFeePerGas
                }
                orphanedEvent() {
                    if (!this.isMined()) throw Error("");
                    return {
                        orphan: "drop-block",
                        hash: this.hash,
                        number: this.number
                    }
                }
            }
            t.Block = l;
            class u {
                provider;
                transactionHash;
                blockHash;
                blockNumber;
                removed;
                address;
                data;
                topics;
                index;
                transactionIndex;
                constructor(e, t) {
                    this.provider = t;
                    let r = Object.freeze(e.topics.slice());
                    (0, n.defineProperties)(this, {
                        transactionHash: e.transactionHash,
                        blockHash: e.blockHash,
                        blockNumber: e.blockNumber,
                        removed: e.removed,
                        address: e.address,
                        data: e.data,
                        topics: r,
                        index: e.index,
                        transactionIndex: e.transactionIndex
                    })
                }
                toJSON() {
                    let {
                        address: e,
                        blockHash: t,
                        blockNumber: r,
                        data: n,
                        index: i,
                        removed: s,
                        topics: o,
                        transactionHash: a,
                        transactionIndex: l
                    } = this;
                    return {
                        _type: "log",
                        address: e,
                        blockHash: t,
                        blockNumber: r,
                        data: n,
                        index: i,
                        removed: s,
                        topics: o,
                        transactionHash: a,
                        transactionIndex: l
                    }
                }
                async getBlock() {
                    let e = await this.provider.getBlock(this.blockHash);
                    return (0, n.assert)(!!e, "failed to find transaction", "UNKNOWN_ERROR", {}), e
                }
                async getTransaction() {
                    let e = await this.provider.getTransaction(this.transactionHash);
                    return (0, n.assert)(!!e, "failed to find transaction", "UNKNOWN_ERROR", {}), e
                }
                async getTransactionReceipt() {
                    let e = await this.provider.getTransactionReceipt(this.transactionHash);
                    return (0, n.assert)(!!e, "failed to find transaction receipt", "UNKNOWN_ERROR", {}), e
                }
                removedEvent() {
                    return {
                        orphan: "drop-log",
                        log: {
                            transactionHash: this.transactionHash,
                            blockHash: this.blockHash,
                            blockNumber: this.blockNumber,
                            address: this.address,
                            data: this.data,
                            topics: Object.freeze(this.topics.slice()),
                            index: this.index
                        }
                    }
                }
            }
            t.Log = u;
            class c {
                provider;
                to;
                from;
                contractAddress;
                hash;
                index;
                blockHash;
                blockNumber;
                logsBloom;
                gasUsed;
                cumulativeGasUsed;
                gasPrice;
                type;
                status;
                root;#
                eT;
                constructor(e, t) {
                    this.#eT = Object.freeze(e.logs.map(e => new u(e, t)));
                    let r = s;
                    null != e.effectiveGasPrice ? r = e.effectiveGasPrice : null != e.gasPrice && (r = e.gasPrice), (0, n.defineProperties)(this, {
                        provider: t,
                        to: e.to,
                        from: e.from,
                        contractAddress: e.contractAddress,
                        hash: e.hash,
                        index: e.index,
                        blockHash: e.blockHash,
                        blockNumber: e.blockNumber,
                        logsBloom: e.logsBloom,
                        gasUsed: e.gasUsed,
                        cumulativeGasUsed: e.cumulativeGasUsed,
                        gasPrice: r,
                        type: e.type,
                        status: e.status,
                        root: e.root
                    })
                }
                get logs() {
                    return this.#eT
                }
                toJSON() {
                    let {
                        to: e,
                        from: t,
                        contractAddress: r,
                        hash: n,
                        index: i,
                        blockHash: s,
                        blockNumber: o,
                        logsBloom: l,
                        logs: u,
                        status: c,
                        root: d
                    } = this;
                    return {
                        _type: "TransactionReceipt",
                        blockHash: s,
                        blockNumber: o,
                        contractAddress: r,
                        cumulativeGasUsed: a(this.cumulativeGasUsed),
                        from: t,
                        gasPrice: a(this.gasPrice),
                        gasUsed: a(this.gasUsed),
                        hash: n,
                        index: i,
                        logs: u,
                        logsBloom: l,
                        root: d,
                        status: c,
                        to: e
                    }
                }
                get length() {
                    return this.logs.length
                }[Symbol.iterator]() {
                    let e = 0;
                    return {
                        next: () => e < this.length ? {
                            value: this.logs[e++],
                            done: !1
                        } : {
                            value: void 0,
                            done: !0
                        }
                    }
                }
                get fee() {
                    return this.gasUsed * this.gasPrice
                }
                async getBlock() {
                    let e = await this.provider.getBlock(this.blockHash);
                    if (null == e) throw Error("TODO");
                    return e
                }
                async getTransaction() {
                    let e = await this.provider.getTransaction(this.hash);
                    if (null == e) throw Error("TODO");
                    return e
                }
                async getResult() {
                    return await this.provider.getTransactionResult(this.hash)
                }
                async confirmations() {
                    return await this.provider.getBlockNumber() - this.blockNumber + 1
                }
                removedEvent() {
                    return f(this)
                }
                reorderedEvent(e) {
                    return (0, n.assert)(!e || e.isMined(), "unmined 'other' transction cannot be orphaned", "UNSUPPORTED_OPERATION", {
                        operation: "reorderedEvent(other)"
                    }), h(this, e)
                }
            }
            t.TransactionReceipt = c;
            class d {
                provider;
                blockNumber;
                blockHash;
                index;
                hash;
                type;
                to;
                from;
                nonce;
                gasLimit;
                gasPrice;
                maxPriorityFeePerGas;
                maxFeePerGas;
                data;
                value;
                chainId;
                signature;
                accessList;#
                eN;
                constructor(e, t) {
                    this.provider = t, this.blockNumber = null != e.blockNumber ? e.blockNumber : null, this.blockHash = null != e.blockHash ? e.blockHash : null, this.hash = e.hash, this.index = e.index, this.type = e.type, this.from = e.from, this.to = e.to || null, this.gasLimit = e.gasLimit, this.nonce = e.nonce, this.data = e.data, this.value = e.value, this.gasPrice = e.gasPrice, this.maxPriorityFeePerGas = null != e.maxPriorityFeePerGas ? e.maxPriorityFeePerGas : null, this.maxFeePerGas = null != e.maxFeePerGas ? e.maxFeePerGas : null, this.chainId = e.chainId, this.signature = e.signature, this.accessList = null != e.accessList ? e.accessList : null, this.#eN = -1
                }
                toJSON() {
                    let {
                        blockNumber: e,
                        blockHash: t,
                        index: r,
                        hash: n,
                        type: i,
                        to: s,
                        from: o,
                        nonce: l,
                        data: u,
                        signature: c,
                        accessList: d
                    } = this;
                    return {
                        _type: "TransactionReceipt",
                        accessList: d,
                        blockNumber: e,
                        blockHash: t,
                        chainId: a(this.chainId),
                        data: u,
                        from: o,
                        gasLimit: a(this.gasLimit),
                        gasPrice: a(this.gasPrice),
                        hash: n,
                        maxFeePerGas: a(this.maxFeePerGas),
                        maxPriorityFeePerGas: a(this.maxPriorityFeePerGas),
                        nonce: l,
                        signature: c,
                        to: s,
                        index: r,
                        type: i,
                        value: a(this.value)
                    }
                }
                async getBlock() {
                    let e = this.blockNumber;
                    if (null == e) {
                        let t = await this.getTransaction();
                        t && (e = t.blockNumber)
                    }
                    if (null == e) return null;
                    let t = this.provider.getBlock(e);
                    if (null == t) throw Error("TODO");
                    return t
                }
                async getTransaction() {
                    return this.provider.getTransaction(this.hash)
                }
                async confirmations() {
                    if (null == this.blockNumber) {
                        let {
                            tx: e,
                            blockNumber: t
                        } = await (0, n.resolveProperties)({
                            tx: this.getTransaction(),
                            blockNumber: this.provider.getBlockNumber()
                        });
                        return null == e || null == e.blockNumber ? 0 : t - e.blockNumber + 1
                    }
                    let e = await this.provider.getBlockNumber();
                    return e - this.blockNumber + 1
                }
                async wait(e, t) {
                    let r = null == e ? 1 : e,
                        i = null == t ? 0 : t,
                        o = this.#eN,
                        a = -1,
                        l = -1 === o,
                        u = async () => {
                            if (l) return null;
                            let {
                                blockNumber: e,
                                nonce: t
                            } = await (0, n.resolveProperties)({
                                blockNumber: this.provider.getBlockNumber(),
                                nonce: this.provider.getTransactionCount(this.from)
                            });
                            if (t < this.nonce) {
                                o = e;
                                return
                            }
                            if (l) return null;
                            let i = await this.getTransaction();
                            if (!i || null == i.blockNumber)
                                for (-1 === a && (a = o - 3) < this.#eN && (a = this.#eN); a <= e;) {
                                    if (l) return null;
                                    let t = await this.provider.getBlock(a, !0);
                                    if (null == t) break;
                                    for (let e of t)
                                        if (e === this.hash) return;
                                    for (let i = 0; i < t.length; i++) {
                                        let a = await t.getTransaction(i);
                                        if (a.from === this.from && a.nonce === this.nonce) {
                                            if (l) return null;
                                            let t = await this.provider.getTransactionReceipt(a.hash);
                                            if (null == t || e - t.blockNumber + 1 < r) return;
                                            let i = "replaced";
                                            a.data === this.data && a.to === this.to && a.value === this.value ? i = "repriced" : "0x" === a.data && a.from === a.to && a.value === s && (i = "cancelled"), (0, n.assert)(!1, "transaction was replaced", "TRANSACTION_REPLACED", {
                                                cancelled: "replaced" === i || "cancelled" === i,
                                                reason: i,
                                                replacement: a.replaceableTransaction(o),
                                                hash: a.hash,
                                                receipt: t
                                            })
                                        }
                                    }
                                    a++
                                }
                        },
                        c = e => {
                            if (null == e || 0 !== e.status) return e;
                            (0, n.assert)(!1, "transaction execution reverted", "CALL_EXCEPTION", {
                                action: "sendTransaction",
                                data: null,
                                reason: null,
                                invocation: null,
                                revert: null,
                                transaction: {
                                    to: e.to,
                                    from: e.from,
                                    data: ""
                                },
                                receipt: e
                            })
                        },
                        d = await this.provider.getTransactionReceipt(this.hash);
                    if (0 === r) return c(d);
                    if (d) {
                        if (await d.confirmations() >= r) return c(d)
                    } else if (await u(), 0 === r) return null;
                    let h = new Promise((e, t) => {
                        let s = [],
                            a = () => {
                                s.forEach(e => e())
                            };
                        if (s.push(() => {
                                l = !0
                            }), i > 0) {
                            let e = setTimeout(() => {
                                a(), t((0, n.makeError)("wait for transaction timeout", "TIMEOUT"))
                            }, i);
                            s.push(() => {
                                clearTimeout(e)
                            })
                        }
                        let d = async n => {
                            if (await n.confirmations() >= r) {
                                a();
                                try {
                                    e(c(n))
                                } catch (e) {
                                    t(e)
                                }
                            }
                        };
                        if (s.push(() => {
                                this.provider.off(this.hash, d)
                            }), this.provider.on(this.hash, d), o >= 0) {
                            let e = async () => {
                                try {
                                    await u()
                                } catch (e) {
                                    if ((0, n.isError)(e, "TRANSACTION_REPLACED")) {
                                        a(), t(e);
                                        return
                                    }
                                }
                                l || this.provider.once("block", e)
                            };
                            s.push(() => {
                                this.provider.off("block", e)
                            }), this.provider.once("block", e)
                        }
                    });
                    return await h
                }
                isMined() {
                    return null != this.blockHash
                }
                isLegacy() {
                    return 0 === this.type
                }
                isBerlin() {
                    return 1 === this.type
                }
                isLondon() {
                    return 2 === this.type
                }
                removedEvent() {
                    return (0, n.assert)(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", {
                        operation: "removeEvent()"
                    }), f(this)
                }
                reorderedEvent(e) {
                    return (0, n.assert)(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", {
                        operation: "removeEvent()"
                    }), (0, n.assert)(!e || e.isMined(), "unmined 'other' transaction canot be orphaned", "UNSUPPORTED_OPERATION", {
                        operation: "removeEvent()"
                    }), h(this, e)
                }
                replaceableTransaction(e) {
                    (0, n.assertArgument)(Number.isInteger(e) && e >= 0, "invalid startBlock", "startBlock", e);
                    let t = new d(this, this.provider);
                    return t.#eN = e, t
                }
            }

            function h(e, t) {
                return {
                    orphan: "reorder-transaction",
                    tx: e,
                    other: t
                }
            }

            function f(e) {
                return {
                    orphan: "drop-transaction",
                    tx: e
                }
            }
            t.TransactionResponse = d
        },
        45211: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.NonceManager = void 0;
            let n = r(82678),
                i = r(46812);
            class s extends i.AbstractSigner {
                signer;#
                e_;#
                eB;
                constructor(e) {
                    super(e.provider), (0, n.defineProperties)(this, {
                        signer: e
                    }), this.#e_ = null, this.#eB = 0
                }
                async getAddress() {
                    return this.signer.getAddress()
                }
                connect(e) {
                    return new s(this.signer.connect(e))
                }
                async getNonce(e) {
                    if ("pending" === e) {
                        null == this.#e_ && (this.#e_ = super.getNonce("pending"));
                        let e = this.#eB;
                        return await this.#e_ + e
                    }
                    return super.getNonce(e)
                }
                increment() {
                    this.#eB++
                }
                reset() {
                    this.#eB = 0, this.#e_ = null
                }
                async sendTransaction(e) {
                    let t = this.getNonce("pending");
                    return this.increment(), (e = await this.signer.populateTransaction(e)).nonce = await t, await this.signer.sendTransaction(e)
                }
                signTransaction(e) {
                    return this.signer.signTransaction(e)
                }
                signMessage(e) {
                    return this.signer.signMessage(e)
                }
                signTypedData(e, t, r) {
                    return this.signer.signTypedData(e, t, r)
                }
            }
            t.NonceManager = s
        },
        15586: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FilterIdPendingSubscriber = t.FilterIdEventSubscriber = t.FilterIdSubscriber = void 0;
            let n = r(82678),
                i = r(58402);
            class s {#
                eA;#
                eD;#
                eI;#
                eR;#
                em;#
                eM;
                constructor(e) {
                    this.#eA = e, this.#eD = null, this.#eI = this.#eL.bind(this), this.#eR = !1, this.#em = null, this.#eM = !1
                }
                _subscribe(e) {
                    throw Error("subclasses must override this")
                }
                _emitResults(e, t) {
                    throw Error("subclasses must override this")
                }
                _recover(e) {
                    throw Error("subclasses must override this")
                }
                async# eL(e) {
                    try {
                        null == this.#eD && (this.#eD = this._subscribe(this.#eA));
                        let e = null;
                        try {
                            e = await this.#eD
                        } catch (e) {
                            if (!(0, n.isError)(e, "UNSUPPORTED_OPERATION") || "eth_newFilter" !== e.operation) throw e
                        }
                        if (null == e) {
                            this.#eD = null, this.#eA._recoverSubscriber(this, this._recover(this.#eA));
                            return
                        }
                        let t = await this.#eA.getNetwork();
                        if (this.#em || (this.#em = t), this.#em.chainId !== t.chainId) throw Error("chaid changed");
                        if (this.#eM) return;
                        let r = await this.#eA.send("eth_getFilterChanges", [e]);
                        await this._emitResults(this.#eA, r)
                    } catch (e) {
                        console.log("@TODO", e)
                    }
                    this.#eA.once("block", this.#eI)
                }#
                eU() {
                    let e = this.#eD;
                    e && (this.#eD = null, e.then(e => {
                        this.#eA.send("eth_uninstallFilter", [e])
                    }))
                }
                start() {
                    this.#eR || (this.#eR = !0, this.#eL(-2))
                }
                stop() {
                    this.#eR && (this.#eR = !1, this.#eM = !0, this.#eU(), this.#eA.off("block", this.#eI))
                }
                pause(e) {
                    e && this.#eU(), this.#eA.off("block", this.#eI)
                }
                resume() {
                    this.start()
                }
            }
            t.FilterIdSubscriber = s, t.FilterIdEventSubscriber = class extends s {#
                ej;
                constructor(e, t) {
                    super(e), this.#ej = JSON.parse(JSON.stringify(t))
                }
                _recover(e) {
                    return new i.PollingEventSubscriber(e, this.#ej)
                }
                async _subscribe(e) {
                    let t = await e.send("eth_newFilter", [this.#ej]);
                    return t
                }
                async _emitResults(e, t) {
                    for (let r of t) e.emit(this.#ej, e._wrapLog(r, e._network))
                }
            }, t.FilterIdPendingSubscriber = class extends s {
                async _subscribe(e) {
                    return await e.send("eth_newPendingTransactionFilter", [])
                }
                async _emitResults(e, t) {
                    for (let r of t) e.emit("pending", r)
                }
            }
        },
        58402: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PollingEventSubscriber = t.PollingTransactionSubscriber = t.PollingOrphanSubscriber = t.OnBlockSubscriber = t.PollingBlockSubscriber = t.getPollingSubscriber = void 0;
            let n = r(82678);

            function i(e) {
                return JSON.parse(JSON.stringify(e))
            }
            t.getPollingSubscriber = function(e, t) {
                return "block" === t ? new s(e) : (0, n.isHexString)(t, 32) ? new a(e, t) : void(0, n.assert)(!1, "unsupported polling event", "UNSUPPORTED_OPERATION", {
                    operation: "getPollingSubscriber",
                    info: {
                        event: t
                    }
                })
            };
            class s {#
                eA;#
                eI;#
                eF;#
                eH;
                constructor(e) {
                    this.#eA = e, this.#eI = null, this.#eF = 4e3, this.#eH = -2
                }
                get pollingInterval() {
                    return this.#eF
                }
                set pollingInterval(e) {
                    this.#eF = e
                }
                async# eL() {
                    try {
                        let e = await this.#eA.getBlockNumber();
                        if (-2 === this.#eH) {
                            this.#eH = e;
                            return
                        }
                        if (e !== this.#eH) {
                            for (let t = this.#eH + 1; t <= e; t++) {
                                if (null == this.#eI) return;
                                await this.#eA.emit("block", t)
                            }
                            this.#eH = e
                        }
                    } catch (e) {}
                    null != this.#eI && (this.#eI = this.#eA._setTimeout(this.#eL.bind(this), this.#eF))
                }
                start() {
                    this.#eI || (this.#eI = this.#eA._setTimeout(this.#eL.bind(this), this.#eF), this.#eL())
                }
                stop() {
                    this.#eI && (this.#eA._clearTimeout(this.#eI), this.#eI = null)
                }
                pause(e) {
                    this.stop(), e && (this.#eH = -2)
                }
                resume() {
                    this.start()
                }
            }
            t.PollingBlockSubscriber = s;
            class o {#
                eA;#
                eL;#
                eR;
                constructor(e) {
                    this.#eA = e, this.#eR = !1, this.#eL = e => {
                        this._poll(e, this.#eA)
                    }
                }
                async _poll(e, t) {
                    throw Error("sub-classes must override this")
                }
                start() {
                    this.#eR || (this.#eR = !0, this.#eL(-2), this.#eA.on("block", this.#eL))
                }
                stop() {
                    this.#eR && (this.#eR = !1, this.#eA.off("block", this.#eL))
                }
                pause(e) {
                    this.stop()
                }
                resume() {
                    this.start()
                }
            }
            t.OnBlockSubscriber = o, t.PollingOrphanSubscriber = class extends o {#
                y;
                constructor(e, t) {
                    super(e), this.#y = i(t)
                }
                async _poll(e, t) {
                    throw Error("@TODO")
                }
            };
            class a extends o {#
                e$;
                constructor(e, t) {
                    super(e), this.#e$ = t
                }
                async _poll(e, t) {
                    let r = await t.getTransactionReceipt(this.#e$);
                    r && t.emit(this.#e$, r)
                }
            }
            t.PollingTransactionSubscriber = a, t.PollingEventSubscriber = class {#
                eA;#
                y;#
                eI;#
                eR;#
                eH;
                constructor(e, t) {
                    this.#eA = e, this.#y = i(t), this.#eI = this.#eL.bind(this), this.#eR = !1, this.#eH = -2
                }
                async# eL(e) {
                    if (-2 === this.#eH) return;
                    let t = i(this.#y);
                    t.fromBlock = this.#eH + 1, t.toBlock = e;
                    let r = await this.#eA.getLogs(t);
                    if (0 === r.length) {
                        this.#eH < e - 60 && (this.#eH = e - 60);
                        return
                    }
                    for (let e of r) this.#eA.emit(this.#y, e), this.#eH = e.blockNumber
                }
                start() {
                    this.#eR || (this.#eR = !0, -2 === this.#eH && this.#eA.getBlockNumber().then(e => {
                        this.#eH = e
                    }), this.#eA.on("block", this.#eI))
                }
                stop() {
                    this.#eR && (this.#eR = !1, this.#eA.off("block", this.#eI))
                }
                pause(e) {
                    this.stop(), e && (this.#eH = -2)
                }
                resume() {
                    this.start()
                }
            }
        },
        2681: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WebSocket = void 0;
            let n = function() {
                if ("undefined" != typeof self) return self;
                if ("undefined" != typeof window) return window;
                if (void 0 !== r.g) return r.g;
                throw Error("unable to locate global object")
            }().WebSocket;
            t.WebSocket = n
        },
        58919: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.accessListify = void 0;
            let n = r(29527),
                i = r(82678);

            function s(e, t) {
                return {
                    address: (0, n.getAddress)(e),
                    storageKeys: t.map((e, t) => ((0, i.assertArgument)((0, i.isHexString)(e, 32), "invalid slot", `storageKeys[${t}]`, e), e.toLowerCase()))
                }
            }
            t.accessListify = function(e) {
                if (Array.isArray(e)) return e.map((t, r) => Array.isArray(t) ? ((0, i.assertArgument)(2 === t.length, "invalid slot set", `value[${r}]`, t), s(t[0], t[1])) : ((0, i.assertArgument)(null != t && "object" == typeof t, "invalid address-slot set", "value", e), s(t.address, t.storageKeys)));
                (0, i.assertArgument)(null != e && "object" == typeof e, "invalid access list", "value", e);
                let t = Object.keys(e).map(t => {
                    let r = e[t].reduce((e, t) => (e[t] = !0, e), {});
                    return s(t, Object.keys(r).sort())
                });
                return t.sort((e, t) => e.address.localeCompare(t.address)), t
            }
        },
        96864: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverAddress = t.computeAddress = void 0;
            let n = r(29527),
                i = r(20021);

            function s(e) {
                let t;
                return t = "string" == typeof e ? i.SigningKey.computePublicKey(e, !1) : e.publicKey, (0, n.getAddress)((0, i.keccak256)("0x" + t.substring(4)).substring(26))
            }
            t.computeAddress = s, t.recoverAddress = function(e, t) {
                return s(i.SigningKey.recoverPublicKey(e, t))
            }
        },
        9404: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Transaction = t.recoverAddress = t.computeAddress = t.accessListify = void 0;
            var n = r(58919);
            Object.defineProperty(t, "accessListify", {
                enumerable: !0,
                get: function() {
                    return n.accessListify
                }
            });
            var i = r(96864);
            Object.defineProperty(t, "computeAddress", {
                enumerable: !0,
                get: function() {
                    return i.computeAddress
                }
            }), Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return i.recoverAddress
                }
            });
            var s = r(97660);
            Object.defineProperty(t, "Transaction", {
                enumerable: !0,
                get: function() {
                    return s.Transaction
                }
            })
        },
        97660: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Transaction = void 0;
            let n = r(29527),
                i = r(20021),
                s = r(82678),
                o = r(58919),
                a = r(96864),
                l = BigInt(0),
                u = BigInt(2),
                c = BigInt(27),
                d = BigInt(28),
                h = BigInt(35),
                f = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

            function p(e) {
                return "0x" === e ? null : (0, n.getAddress)(e)
            }

            function g(e, t) {
                try {
                    return (0, o.accessListify)(e)
                } catch (r) {
                    (0, s.assertArgument)(!1, r.message, t, e)
                }
            }

            function m(e, t) {
                return "0x" === e ? 0 : (0, s.getNumber)(e, t)
            }

            function y(e, t) {
                if ("0x" === e) return l;
                let r = (0, s.getBigInt)(e, t);
                return (0, s.assertArgument)(r <= f, "value exceeds uint size", t, r), r
            }

            function b(e, t) {
                let r = (0, s.getBigInt)(e, "value"),
                    n = (0, s.toBeArray)(r);
                return (0, s.assertArgument)(n.length <= 32, "value too large", `tx.${t}`, r), n
            }

            function w(e) {
                return (0, o.accessListify)(e).map(e => [e.address, e.storageKeys])
            }

            function A(e, t) {
                let r = [b(e.nonce || 0, "nonce"), b(e.gasPrice || 0, "gasPrice"), b(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, n.getAddress)(e.to) : "0x", b(e.value || 0, "value"), e.data || "0x"],
                    o = l;
                if (e.chainId != l) o = (0, s.getBigInt)(e.chainId, "tx.chainId"), (0, s.assertArgument)(!t || null == t.networkV || t.legacyChainId === o, "tx.chainId/sig.v mismatch", "sig", t);
                else if (e.signature) {
                    let t = e.signature.legacyChainId;
                    null != t && (o = t)
                }
                if (!t) return o !== l && (r.push((0, s.toBeArray)(o)), r.push("0x"), r.push("0x")), (0, s.encodeRlp)(r);
                let a = BigInt(27 + t.yParity);
                return o !== l ? a = i.Signature.getChainIdV(o, t.v) : BigInt(t.v) !== a && (0, s.assertArgument)(!1, "tx.chainId/sig.v mismatch", "sig", t), r.push((0, s.toBeArray)(a)), r.push((0, s.toBeArray)(t.r)), r.push((0, s.toBeArray)(t.s)), (0, s.encodeRlp)(r)
            }

            function v(e, t) {
                let r;
                try {
                    if (r = m(t[0], "yParity"), 0 !== r && 1 !== r) throw Error("bad yParity")
                } catch (e) {
                    (0, s.assertArgument)(!1, "invalid yParity", "yParity", t[0])
                }
                let n = (0, s.zeroPadValue)(t[1], 32),
                    o = (0, s.zeroPadValue)(t[2], 32),
                    a = i.Signature.from({
                        r: n,
                        s: o,
                        yParity: r
                    });
                e.signature = a
            }

            function E(e, t) {
                let r = [b(e.chainId || 0, "chainId"), b(e.nonce || 0, "nonce"), b(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), b(e.maxFeePerGas || 0, "maxFeePerGas"), b(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, n.getAddress)(e.to) : "0x", b(e.value || 0, "value"), e.data || "0x", w(e.accessList || [])];
                return t && (r.push(b(t.yParity, "yParity")), r.push((0, s.toBeArray)(t.r)), r.push((0, s.toBeArray)(t.s))), (0, s.concat)(["0x02", (0, s.encodeRlp)(r)])
            }

            function P(e, t) {
                let r = [b(e.chainId || 0, "chainId"), b(e.nonce || 0, "nonce"), b(e.gasPrice || 0, "gasPrice"), b(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, n.getAddress)(e.to) : "0x", b(e.value || 0, "value"), e.data || "0x", w(e.accessList || [])];
                return t && (r.push(b(t.yParity, "recoveryParam")), r.push((0, s.toBeArray)(t.r)), r.push((0, s.toBeArray)(t.s))), (0, s.concat)(["0x01", (0, s.encodeRlp)(r)])
            }
            class S {#
                eK;#
                ez;#
                r;#
                eV;#
                eG;#
                eW;#
                eJ;#
                eq;#
                eQ;#
                Z;#
                eY;#
                eZ;
                get type() {
                    return this.#eK
                }
                set type(e) {
                    switch (e) {
                        case null:
                            this.#eK = null;
                            break;
                        case 0:
                        case "legacy":
                            this.#eK = 0;
                            break;
                        case 1:
                        case "berlin":
                        case "eip-2930":
                            this.#eK = 1;
                            break;
                        case 2:
                        case "london":
                        case "eip-1559":
                            this.#eK = 2;
                            break;
                        default:
                            (0, s.assertArgument)(!1, "unsupported transaction type", "type", e)
                    }
                }
                get typeName() {
                    switch (this.type) {
                        case 0:
                            return "legacy";
                        case 1:
                            return "eip-2930";
                        case 2:
                            return "eip-1559"
                    }
                    return null
                }
                get to() {
                    return this.#ez
                }
                set to(e) {
                    this.#ez = null == e ? null : (0, n.getAddress)(e)
                }
                get nonce() {
                    return this.#eV
                }
                set nonce(e) {
                    this.#eV = (0, s.getNumber)(e, "value")
                }
                get gasLimit() {
                    return this.#eG
                }
                set gasLimit(e) {
                    this.#eG = (0, s.getBigInt)(e)
                }
                get gasPrice() {
                    let e = this.#eW;
                    return null == e && (0 === this.type || 1 === this.type) ? l : e
                }
                set gasPrice(e) {
                    this.#eW = null == e ? null : (0, s.getBigInt)(e, "gasPrice")
                }
                get maxPriorityFeePerGas() {
                    let e = this.#eJ;
                    return null == e ? 2 === this.type ? l : null : e
                }
                set maxPriorityFeePerGas(e) {
                    this.#eJ = null == e ? null : (0, s.getBigInt)(e, "maxPriorityFeePerGas")
                }
                get maxFeePerGas() {
                    let e = this.#eq;
                    return null == e ? 2 === this.type ? l : null : e
                }
                set maxFeePerGas(e) {
                    this.#eq = null == e ? null : (0, s.getBigInt)(e, "maxFeePerGas")
                }
                get data() {
                    return this.#r
                }
                set data(e) {
                    this.#r = (0, s.hexlify)(e)
                }
                get value() {
                    return this.#eQ
                }
                set value(e) {
                    this.#eQ = (0, s.getBigInt)(e, "value")
                }
                get chainId() {
                    return this.#Z
                }
                set chainId(e) {
                    this.#Z = (0, s.getBigInt)(e)
                }
                get signature() {
                    return this.#eY || null
                }
                set signature(e) {
                    this.#eY = null == e ? null : i.Signature.from(e)
                }
                get accessList() {
                    let e = this.#eZ || null;
                    return null == e ? 1 === this.type || 2 === this.type ? [] : null : e
                }
                set accessList(e) {
                    this.#eZ = null == e ? null : (0, o.accessListify)(e)
                }
                constructor() {
                    this.#eK = null, this.#ez = null, this.#eV = 0, this.#eG = BigInt(0), this.#eW = null, this.#eJ = null, this.#eq = null, this.#r = "0x", this.#eQ = BigInt(0), this.#Z = BigInt(0), this.#eY = null, this.#eZ = null
                }
                get hash() {
                    return null == this.signature ? null : (0, i.keccak256)(this.serialized)
                }
                get unsignedHash() {
                    return (0, i.keccak256)(this.unsignedSerialized)
                }
                get from() {
                    return null == this.signature ? null : (0, a.recoverAddress)(this.unsignedHash, this.signature)
                }
                get fromPublicKey() {
                    return null == this.signature ? null : i.SigningKey.recoverPublicKey(this.unsignedHash, this.signature)
                }
                isSigned() {
                    return null != this.signature
                }
                get serialized() {
                    switch ((0, s.assert)(null != this.signature, "cannot serialize unsigned transaction; maybe you meant .unsignedSerialized", "UNSUPPORTED_OPERATION", {
                        operation: ".serialized"
                    }), this.inferType()) {
                        case 0:
                            return A(this, this.signature);
                        case 1:
                            return P(this, this.signature);
                        case 2:
                            return E(this, this.signature)
                    }(0, s.assert)(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", {
                        operation: ".serialized"
                    })
                }
                get unsignedSerialized() {
                    switch (this.inferType()) {
                        case 0:
                            return A(this);
                        case 1:
                            return P(this);
                        case 2:
                            return E(this)
                    }(0, s.assert)(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", {
                        operation: ".unsignedSerialized"
                    })
                }
                inferType() {
                    return this.inferTypes().pop()
                }
                inferTypes() {
                    let e = null != this.gasPrice,
                        t = null != this.maxFeePerGas || null != this.maxPriorityFeePerGas,
                        r = null != this.accessList;
                    null != this.maxFeePerGas && null != this.maxPriorityFeePerGas && (0, s.assert)(this.maxFeePerGas >= this.maxPriorityFeePerGas, "priorityFee cannot be more than maxFee", "BAD_DATA", {
                        value: this
                    }), (0, s.assert)(!t || 0 !== this.type && 1 !== this.type, "transaction type cannot have maxFeePerGas or maxPriorityFeePerGas", "BAD_DATA", {
                        value: this
                    }), (0, s.assert)(0 !== this.type || !r, "legacy transaction cannot have accessList", "BAD_DATA", {
                        value: this
                    });
                    let n = [];
                    return null != this.type ? n.push(this.type) : t ? n.push(2) : e ? (n.push(1), r || n.push(0)) : r ? (n.push(1), n.push(2)) : (n.push(0), n.push(1), n.push(2)), n.sort(), n
                }
                isLegacy() {
                    return 0 === this.type
                }
                isBerlin() {
                    return 1 === this.type
                }
                isLondon() {
                    return 2 === this.type
                }
                clone() {
                    return S.from(this)
                }
                toJSON() {
                    let e = e => null == e ? null : e.toString();
                    return {
                        type: this.type,
                        to: this.to,
                        data: this.data,
                        nonce: this.nonce,
                        gasLimit: e(this.gasLimit),
                        gasPrice: e(this.gasPrice),
                        maxPriorityFeePerGas: e(this.maxPriorityFeePerGas),
                        maxFeePerGas: e(this.maxFeePerGas),
                        value: e(this.value),
                        chainId: e(this.chainId),
                        sig: this.signature ? this.signature.toJSON() : null,
                        accessList: this.accessList
                    }
                }
                static from(e) {
                    if (null == e) return new S;
                    if ("string" == typeof e) {
                        let t = (0, s.getBytes)(e);
                        if (t[0] >= 127) return S.from(function(e) {
                            let t = (0, s.decodeRlp)(e);
                            (0, s.assertArgument)(Array.isArray(t) && (9 === t.length || 6 === t.length), "invalid field count for legacy transaction", "data", e);
                            let r = {
                                type: 0,
                                nonce: m(t[0], "nonce"),
                                gasPrice: y(t[1], "gasPrice"),
                                gasLimit: y(t[2], "gasLimit"),
                                to: p(t[3]),
                                value: y(t[4], "value"),
                                data: (0, s.hexlify)(t[5]),
                                chainId: l
                            };
                            if (6 === t.length) return r;
                            let n = y(t[6], "v"),
                                o = y(t[7], "r"),
                                a = y(t[8], "s");
                            if (o === l && a === l) r.chainId = n;
                            else {
                                let o = (n - h) / u;
                                o < l && (o = l), r.chainId = o, (0, s.assertArgument)(o !== l || n === c || n === d, "non-canonical legacy v", "v", t[6]), r.signature = i.Signature.from({
                                    r: (0, s.zeroPadValue)(t[7], 32),
                                    s: (0, s.zeroPadValue)(t[8], 32),
                                    v: n
                                }), r.hash = (0, i.keccak256)(e)
                            }
                            return r
                        }(t));
                        switch (t[0]) {
                            case 1:
                                return S.from(function(e) {
                                    let t = (0, s.decodeRlp)((0, s.getBytes)(e).slice(1));
                                    (0, s.assertArgument)(Array.isArray(t) && (8 === t.length || 11 === t.length), "invalid field count for transaction type: 1", "data", (0, s.hexlify)(e));
                                    let r = {
                                        type: 1,
                                        chainId: y(t[0], "chainId"),
                                        nonce: m(t[1], "nonce"),
                                        gasPrice: y(t[2], "gasPrice"),
                                        gasLimit: y(t[3], "gasLimit"),
                                        to: p(t[4]),
                                        value: y(t[5], "value"),
                                        data: (0, s.hexlify)(t[6]),
                                        accessList: g(t[7], "accessList")
                                    };
                                    return 8 === t.length || (r.hash = (0, i.keccak256)(e), v(r, t.slice(8))), r
                                }(t));
                            case 2:
                                return S.from(function(e) {
                                    let t = (0, s.decodeRlp)((0, s.getBytes)(e).slice(1));
                                    (0, s.assertArgument)(Array.isArray(t) && (9 === t.length || 12 === t.length), "invalid field count for transaction type: 2", "data", (0, s.hexlify)(e));
                                    let r = y(t[2], "maxPriorityFeePerGas"),
                                        n = y(t[3], "maxFeePerGas"),
                                        o = {
                                            type: 2,
                                            chainId: y(t[0], "chainId"),
                                            nonce: m(t[1], "nonce"),
                                            maxPriorityFeePerGas: r,
                                            maxFeePerGas: n,
                                            gasPrice: null,
                                            gasLimit: y(t[4], "gasLimit"),
                                            to: p(t[5]),
                                            value: y(t[6], "value"),
                                            data: (0, s.hexlify)(t[7]),
                                            accessList: g(t[8], "accessList")
                                        };
                                    return 9 === t.length || (o.hash = (0, i.keccak256)(e), v(o, t.slice(9))), o
                                }(t))
                        }(0, s.assert)(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", {
                            operation: "from"
                        })
                    }
                    let t = new S;
                    return null != e.type && (t.type = e.type), null != e.to && (t.to = e.to), null != e.nonce && (t.nonce = e.nonce), null != e.gasLimit && (t.gasLimit = e.gasLimit), null != e.gasPrice && (t.gasPrice = e.gasPrice), null != e.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = e.maxPriorityFeePerGas), null != e.maxFeePerGas && (t.maxFeePerGas = e.maxFeePerGas), null != e.data && (t.data = e.data), null != e.value && (t.value = e.value), null != e.chainId && (t.chainId = e.chainId), null != e.signature && (t.signature = i.Signature.from(e.signature)), null != e.accessList && (t.accessList = e.accessList), null != e.hash && ((0, s.assertArgument)(t.isSigned(), "unsigned transaction cannot define hash", "tx", e), (0, s.assertArgument)(t.hash === e.hash, "hash mismatch", "tx", e)), null != e.from && ((0, s.assertArgument)(t.isSigned(), "unsigned transaction cannot define from", "tx", e), (0, s.assertArgument)(t.from.toLowerCase() === (e.from || "").toLowerCase(), "from mismatch", "tx", e)), t
                }
            }
            t.Transaction = S
        },
        99563: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeBase58 = t.encodeBase58 = void 0;
            let n = r(9263),
                i = r(81602),
                s = r(80306),
                o = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
                a = null,
                l = BigInt(0),
                u = BigInt(58);
            t.encodeBase58 = function(e) {
                let t = (0, s.toBigInt)((0, n.getBytes)(e)),
                    r = "";
                for (; t;) r = o[Number(t % u)] + r, t /= u;
                return r
            }, t.decodeBase58 = function(e) {
                let t = l;
                for (let r = 0; r < e.length; r++) t *= u, t += function(e) {
                    if (null == a) {
                        a = {};
                        for (let e = 0; e < o.length; e++) a[o[e]] = BigInt(e)
                    }
                    let t = a[e];
                    return (0, i.assertArgument)(null != t, "invalid base58 value", "letter", e), t
                }(e[r]);
                return t
            }
        },
        61709: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeBase64 = t.decodeBase64 = void 0;
            let n = r(9263);
            t.decodeBase64 = function(e) {
                e = atob(e);
                let t = new Uint8Array(e.length);
                for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
                return (0, n.getBytes)(t)
            }, t.encodeBase64 = function(e) {
                let t = (0, n.getBytes)(e),
                    r = "";
                for (let e = 0; e < t.length; e++) r += String.fromCharCode(t[e]);
                return btoa(r)
            }
        },
        9263: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroPadBytes = t.zeroPadValue = t.stripZerosLeft = t.dataSlice = t.dataLength = t.concat = t.hexlify = t.isBytesLike = t.isHexString = t.getBytesCopy = t.getBytes = void 0;
            let n = r(81602);

            function i(e, t, r) {
                if (e instanceof Uint8Array) return r ? new Uint8Array(e) : e;
                if ("string" == typeof e && e.match(/^0x([0-9a-f][0-9a-f])*$/i)) {
                    let t = new Uint8Array((e.length - 2) / 2),
                        r = 2;
                    for (let n = 0; n < t.length; n++) t[n] = parseInt(e.substring(r, r + 2), 16), r += 2;
                    return t
                }(0, n.assertArgument)(!1, "invalid BytesLike value", t || "value", e)
            }

            function s(e, t) {
                return i(e, t, !1)
            }

            function o(e, t) {
                return !!("string" == typeof e && e.match(/^0x[0-9A-Fa-f]*$/)) && ("number" != typeof t || e.length === 2 + 2 * t) && (!0 !== t || e.length % 2 == 0)
            }
            t.getBytes = s, t.getBytesCopy = function(e, t) {
                return i(e, t, !0)
            }, t.isHexString = o, t.isBytesLike = function(e) {
                return o(e, !0) || e instanceof Uint8Array
            };
            let a = "0123456789abcdef";

            function l(e) {
                let t = s(e),
                    r = "0x";
                for (let e = 0; e < t.length; e++) {
                    let n = t[e];
                    r += a[(240 & n) >> 4] + a[15 & n]
                }
                return r
            }

            function u(e, t, r) {
                let i = s(e);
                (0, n.assert)(t >= i.length, "padding exceeds data length", "BUFFER_OVERRUN", {
                    buffer: new Uint8Array(i),
                    length: t,
                    offset: t + 1
                });
                let o = new Uint8Array(t);
                return o.fill(0), r ? o.set(i, t - i.length) : o.set(i, 0), l(o)
            }
            t.hexlify = l, t.concat = function(e) {
                return "0x" + e.map(e => l(e).substring(2)).join("")
            }, t.dataLength = function(e) {
                return o(e, !0) ? (e.length - 2) / 2 : s(e).length
            }, t.dataSlice = function(e, t, r) {
                let i = s(e);
                return null != r && r > i.length && (0, n.assert)(!1, "cannot slice beyond data bounds", "BUFFER_OVERRUN", {
                    buffer: i,
                    length: i.length,
                    offset: r
                }), l(i.slice(null == t ? 0 : t, null == r ? i.length : r))
            }, t.stripZerosLeft = function(e) {
                let t = l(e).substring(2);
                for (; t.startsWith("00");) t = t.substring(2);
                return "0x" + t
            }, t.zeroPadValue = function(e, t) {
                return u(e, t, !0)
            }, t.zeroPadBytes = function(e, t) {
                return u(e, t, !1)
            }
        },
        81602: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertPrivate = t.assertNormalize = t.assertArgumentCount = t.assertArgument = t.assert = t.makeError = t.isCallException = t.isError = void 0;
            let n = r(20617),
                i = r(17693);

            function s(e) {
                if (null == e) return "null";
                if (Array.isArray(e)) return "[ " + e.map(s).join(", ") + " ]";
                if (e instanceof Uint8Array) {
                    let t = "0123456789abcdef",
                        r = "0x";
                    for (let n = 0; n < e.length; n++) r += t[e[n] >> 4] + t[15 & e[n]];
                    return r
                }
                if ("object" == typeof e && "function" == typeof e.toJSON) return s(e.toJSON());
                switch (typeof e) {
                    case "boolean":
                    case "symbol":
                    case "number":
                        return e.toString();
                    case "bigint":
                        return BigInt(e).toString();
                    case "string":
                        return JSON.stringify(e);
                    case "object":
                        {
                            let t = Object.keys(e);
                            return t.sort(),
                            "{ " + t.map(t => `${s(t)}: ${s(e[t])}`).join(", ") + " }"
                        }
                }
                return "[ COULD NOT SERIALIZE ]"
            }

            function o(e, t) {
                return e && e.code === t
            }

            function a(e, t, r) {
                let o; {
                    let i = [];
                    if (r) {
                        if ("message" in r || "code" in r || "name" in r) throw Error(`value will overwrite populated values: ${s(r)}`);
                        for (let e in r) {
                            let t = r[e];
                            i.push(e + "=" + s(t))
                        }
                    }
                    i.push(`code=${t}`), i.push(`version=${n.version}`), i.length && (e += " (" + i.join(", ") + ")")
                }
                switch (t) {
                    case "INVALID_ARGUMENT":
                        o = TypeError(e);
                        break;
                    case "NUMERIC_FAULT":
                    case "BUFFER_OVERRUN":
                        o = RangeError(e);
                        break;
                    default:
                        o = Error(e)
                }
                return (0, i.defineProperties)(o, {
                    code: t
                }), r && Object.assign(o, r), o
            }

            function l(e, t, r, n) {
                if (!e) throw a(t, r, n)
            }
            t.isError = o, t.isCallException = function(e) {
                return o(e, "CALL_EXCEPTION")
            }, t.makeError = a, t.assert = l, t.assertArgument = function(e, t, r, n) {
                l(e, t, "INVALID_ARGUMENT", {
                    argument: r,
                    value: n
                })
            }, t.assertArgumentCount = function(e, t, r) {
                null == r && (r = ""), r && (r = ": " + r), l(e >= t, "missing arguemnt" + r, "MISSING_ARGUMENT", {
                    count: e,
                    expectedCount: t
                }), l(e <= t, "too many arguemnts" + r, "UNEXPECTED_ARGUMENT", {
                    count: e,
                    expectedCount: t
                })
            };
            let u = ["NFD", "NFC", "NFKD", "NFKC"].reduce((e, t) => {
                try {
                    if ("test" !== "test".normalize(t)) throw Error("bad");
                    if ("NFD" === t) {
                        let e = String.fromCharCode(233).normalize("NFD"),
                            t = String.fromCharCode(101, 769);
                        if (e !== t) throw Error("broken")
                    }
                    e.push(t)
                } catch (e) {}
                return e
            }, []);
            t.assertNormalize = function(e) {
                l(u.indexOf(e) >= 0, "platform missing String.prototype.normalize", "UNSUPPORTED_OPERATION", {
                    operation: "String.prototype.normalize",
                    info: {
                        form: e
                    }
                })
            }, t.assertPrivate = function(e, t, r) {
                if (null == r && (r = ""), e !== t) {
                    let e = r,
                        t = "new";
                    r && (e += ".", t += " " + r), l(!1, `private constructor; use ${e}from* methods`, "UNSUPPORTED_OPERATION", {
                        operation: t
                    })
                }
            }
        },
        98417: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EventPayload = void 0;
            let n = r(17693);
            t.EventPayload = class {
                filter;
                emitter;#
                eX;
                constructor(e, t, r) {
                    this.#eX = t, (0, n.defineProperties)(this, {
                        emitter: e,
                        filter: r
                    })
                }
                async removeListener() {
                    null != this.#eX && await this.emitter.off(this.filter, this.#eX)
                }
            }
        },
        88223: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FetchResponse = t.FetchRequest = t.FetchCancelSignal = void 0;
            let n = r(61709),
                i = r(9263),
                s = r(81602),
                o = r(17693),
                a = r(76482),
                l = r(16194),
                u = l.getUrl,
                c = RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
                d = RegExp("^ipfs://(ipfs/)?(.*)$", "i"),
                h = !1;
            async function f(e, t) {
                try {
                    var r;
                    let t = e.match(c);
                    if (!t) throw Error("invalid data");
                    return new A(200, "OK", {
                        "content-type": t[1] || "text/plain"
                    }, t[2] ? (0, n.decodeBase64)(t[3]) : (r = t[3], (0, a.toUtf8Bytes)(r.replace(/%([0-9a-f][0-9a-f])/gi, (e, t) => String.fromCharCode(parseInt(t, 16))))))
                } catch (t) {
                    return new A(599, "BAD REQUEST (invalid data: URI)", {}, null, new w(e))
                }
            }

            function p(e) {
                return async function(t, r) {
                    try {
                        let r = t.match(d);
                        if (!r) throw Error("invalid link");
                        return new w(`${e}${r[2]}`)
                    } catch (e) {
                        return new A(599, "BAD REQUEST (invalid IPFS URI)", {}, null, new w(t))
                    }
                }
            }
            let g = {
                    data: f,
                    ipfs: p("https://gateway.ipfs.io/ipfs/")
                },
                m = new WeakMap;
            class y {#
                e0;#
                e1;
                constructor(e) {
                    this.#e0 = [], this.#e1 = !1, m.set(e, () => {
                        if (!this.#e1) {
                            for (let e of (this.#e1 = !0, this.#e0)) setTimeout(() => {
                                e()
                            }, 0);
                            this.#e0 = []
                        }
                    })
                }
                addListener(e) {
                    (0, s.assert)(!this.#e1, "singal already cancelled", "UNSUPPORTED_OPERATION", {
                        operation: "fetchCancelSignal.addCancelListener"
                    }), this.#e0.push(e)
                }
                get cancelled() {
                    return this.#e1
                }
                checkSignal() {
                    (0, s.assert)(!this.cancelled, "cancelled", "CANCELLED", {})
                }
            }

            function b(e) {
                if (null == e) throw Error("missing signal; should not happen");
                return e.checkSignal(), e
            }
            t.FetchCancelSignal = y;
            class w {#
                e2;#
                e3;#
                e4;#
                e5;#
                e6;#
                ee;#
                e8;#
                e9;#
                e7;#
                te;#
                tt;#
                tr;#
                tn;#
                ti;
                get url() {
                    return this.#ee
                }
                set url(e) {
                    this.#ee = String(e)
                }
                get body() {
                    return null == this.#e8 ? null : new Uint8Array(this.#e8)
                }
                set body(e) {
                    if (null == e) this.#e8 = void 0, this.#e9 = void 0;
                    else if ("string" == typeof e) this.#e8 = (0, a.toUtf8Bytes)(e), this.#e9 = "text/plain";
                    else if (e instanceof Uint8Array) this.#e8 = e, this.#e9 = "application/octet-stream";
                    else if ("object" == typeof e) this.#e8 = (0, a.toUtf8Bytes)(JSON.stringify(e)), this.#e9 = "application/json";
                    else throw Error("invalid body")
                }
                hasBody() {
                    return null != this.#e8
                }
                get method() {
                    return this.#e5 ? this.#e5 : this.hasBody() ? "POST" : "GET"
                }
                set method(e) {
                    null == e && (e = ""), this.#e5 = String(e).toUpperCase()
                }
                get headers() {
                    let e = Object.assign({}, this.#e4);
                    return this.#e7 && (e.authorization = `Basic ${(0,n.encodeBase64)((0,a.toUtf8Bytes)(this.#e7))}`), this.allowGzip && (e["accept-encoding"] = "gzip"), null == e["content-type"] && this.#e9 && (e["content-type"] = this.#e9), this.body && (e["content-length"] = String(this.body.length)), e
                }
                getHeader(e) {
                    return this.headers[e.toLowerCase()]
                }
                setHeader(e, t) {
                    this.#e4[String(e).toLowerCase()] = String(t)
                }
                clearHeaders() {
                    this.#e4 = {}
                }[Symbol.iterator]() {
                    let e = this.headers,
                        t = Object.keys(e),
                        r = 0;
                    return {
                        next: () => {
                            if (r < t.length) {
                                let n = t[r++];
                                return {
                                    value: [n, e[n]],
                                    done: !1
                                }
                            }
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                    }
                }
                get credentials() {
                    return this.#e7 || null
                }
                setCredentials(e, t) {
                    (0, s.assertArgument)(!e.match(/:/), "invalid basic authentication username", "username", "[REDACTED]"), this.#e7 = `${e}:${t}`
                }
                get allowGzip() {
                    return this.#e3
                }
                set allowGzip(e) {
                    this.#e3 = !!e
                }
                get allowInsecureAuthentication() {
                    return !!this.#e2
                }
                set allowInsecureAuthentication(e) {
                    this.#e2 = !!e
                }
                get timeout() {
                    return this.#e6
                }
                set timeout(e) {
                    (0, s.assertArgument)(e >= 0, "timeout must be non-zero", "timeout", e), this.#e6 = e
                }
                get preflightFunc() {
                    return this.#te || null
                }
                set preflightFunc(e) {
                    this.#te = e
                }
                get processFunc() {
                    return this.#tt || null
                }
                set processFunc(e) {
                    this.#tt = e
                }
                get retryFunc() {
                    return this.#tr || null
                }
                set retryFunc(e) {
                    this.#tr = e
                }
                constructor(e) {
                    this.#ee = String(e), this.#e2 = !1, this.#e3 = !0, this.#e4 = {}, this.#e5 = "", this.#e6 = 3e5, this.#ti = {
                        slotInterval: 250,
                        maxAttempts: 12
                    }
                }
                toString() {
                    return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#e8?(0,i.hexlify)(this.#e8):"null"}>`
                }
                setThrottleParams(e) {
                    null != e.slotInterval && (this.#ti.slotInterval = e.slotInterval), null != e.maxAttempts && (this.#ti.maxAttempts = e.maxAttempts)
                }
                async# ts(e, t, r, n, i) {
                    if (e >= this.#ti.maxAttempts) return i.makeServerError("exceeded maximum retry limit");
                    (0, s.assert)(v() <= t, "timeout", "TIMEOUT", {
                        operation: "request.send",
                        reason: "timeout",
                        request: n
                    }), r > 0 && await new Promise(e => setTimeout(e, r));
                    let o = this.clone(),
                        a = (o.url.split(":")[0] || "").toLowerCase();
                    if (a in g) {
                        let e = await g[a](o.url, b(n.#tn));
                        if (e instanceof A) {
                            let t = e;
                            if (this.processFunc) {
                                b(n.#tn);
                                try {
                                    t = await this.processFunc(o, t)
                                } catch (e) {
                                    (null == e.throttle || "number" != typeof e.stall) && t.makeServerError("error in post-processing function", e).assertOk()
                                }
                            }
                            return t
                        }
                        o = e
                    }
                    this.preflightFunc && (o = await this.preflightFunc(o));
                    let l = await u(o, b(n.#tn)),
                        c = new A(l.statusCode, l.statusMessage, l.headers, l.body, n);
                    if (301 === c.statusCode || 302 === c.statusCode) {
                        try {
                            let r = c.headers.location || "";
                            return o.redirect(r).#ts(e + 1, t, 0, n, c)
                        } catch (e) {}
                        return c
                    }
                    if (429 === c.statusCode && (null == this.retryFunc || await this.retryFunc(o, c, e))) {
                        let r = c.headers["retry-after"],
                            i = this.#ti.slotInterval * Math.trunc(Math.random() * Math.pow(2, e));
                        return "string" == typeof r && r.match(/^[1-9][0-9]*$/) && (i = parseInt(r)), o.clone().#ts(e + 1, t, i, n, c)
                    }
                    if (this.processFunc) {
                        b(n.#tn);
                        try {
                            c = await this.processFunc(o, c)
                        } catch (i) {
                            (null == i.throttle || "number" != typeof i.stall) && c.makeServerError("error in post-processing function", i).assertOk();
                            let r = this.#ti.slotInterval * Math.trunc(Math.random() * Math.pow(2, e));
                            return i.stall >= 0 && (r = i.stall), o.clone().#ts(e + 1, t, r, n, c)
                        }
                    }
                    return c
                }
                send() {
                    return (0, s.assert)(null == this.#tn, "request already sent", "UNSUPPORTED_OPERATION", {
                        operation: "fetchRequest.send"
                    }), this.#tn = new y(this), this.#ts(0, v() + this.timeout, 0, this, new A(0, "", {}, null, this))
                }
                cancel() {
                    (0, s.assert)(null != this.#tn, "request has not been sent", "UNSUPPORTED_OPERATION", {
                        operation: "fetchRequest.cancel"
                    });
                    let e = m.get(this);
                    if (!e) throw Error("missing signal; should not happen");
                    e()
                }
                redirect(e) {
                    let t = this.url.split(":")[0].toLowerCase(),
                        r = e.split(":")[0].toLowerCase();
                    (0, s.assert)("GET" === this.method && ("https" !== t || "http" !== r) && e.match(/^https?:/), "unsupported redirect", "UNSUPPORTED_OPERATION", {
                        operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(e)})`
                    });
                    let n = new w(e);
                    return n.method = "GET", n.allowGzip = this.allowGzip, n.timeout = this.timeout, n.#e4 = Object.assign({}, this.#e4), this.#e8 && (n.#e8 = new Uint8Array(this.#e8)), n.#e9 = this.#e9, n
                }
                clone() {
                    let e = new w(this.url);
                    return e.#e5 = this.#e5, this.#e8 && (e.#e8 = this.#e8), e.#e9 = this.#e9, e.#e4 = Object.assign({}, this.#e4), e.#e7 = this.#e7, this.allowGzip && (e.allowGzip = !0), e.timeout = this.timeout, this.allowInsecureAuthentication && (e.allowInsecureAuthentication = !0), e.#te = this.#te, e.#tt = this.#tt, e.#tr = this.#tr, e
                }
                static lockConfig() {
                    h = !0
                }
                static getGateway(e) {
                    return g[e.toLowerCase()] || null
                }
                static registerGateway(e, t) {
                    if ("http" === (e = e.toLowerCase()) || "https" === e) throw Error(`cannot intercept ${e}; use registerGetUrl`);
                    if (h) throw Error("gateways locked");
                    g[e] = t
                }
                static registerGetUrl(e) {
                    if (h) throw Error("gateways locked");
                    u = e
                }
                static createDataGateway() {
                    return f
                }
                static createIpfsGatewayFunc(e) {
                    return p(e)
                }
            }
            t.FetchRequest = w;
            class A {#
                to;#
                ta;#
                e4;#
                e8;#
                er;#
                tl;
                toString() {
                    return `<FetchResponse status=${this.statusCode} body=${this.#e8?(0,i.hexlify)(this.#e8):"null"}>`
                }
                get statusCode() {
                    return this.#to
                }
                get statusMessage() {
                    return this.#ta
                }
                get headers() {
                    return Object.assign({}, this.#e4)
                }
                get body() {
                    return null == this.#e8 ? null : new Uint8Array(this.#e8)
                }
                get bodyText() {
                    try {
                        return null == this.#e8 ? "" : (0, a.toUtf8String)(this.#e8)
                    } catch (e) {
                        (0, s.assert)(!1, "response body is not valid UTF-8 data", "UNSUPPORTED_OPERATION", {
                            operation: "bodyText",
                            info: {
                                response: this
                            }
                        })
                    }
                }
                get bodyJson() {
                    try {
                        return JSON.parse(this.bodyText)
                    } catch (e) {
                        (0, s.assert)(!1, "response body is not valid JSON", "UNSUPPORTED_OPERATION", {
                            operation: "bodyJson",
                            info: {
                                response: this
                            }
                        })
                    }
                }[Symbol.iterator]() {
                    let e = this.headers,
                        t = Object.keys(e),
                        r = 0;
                    return {
                        next: () => {
                            if (r < t.length) {
                                let n = t[r++];
                                return {
                                    value: [n, e[n]],
                                    done: !1
                                }
                            }
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                    }
                }
                constructor(e, t, r, n, i) {
                    this.#to = e, this.#ta = t, this.#e4 = Object.keys(r).reduce((e, t) => (e[t.toLowerCase()] = String(r[t]), e), {}), this.#e8 = null == n ? null : new Uint8Array(n), this.#er = i || null, this.#tl = {
                        message: ""
                    }
                }
                makeServerError(e, t) {
                    let r;
                    r = e ? `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${e})` : `CLIENT ESCALATED SERVER ERROR (${e=`${this.statusCode} ${this.statusMessage}`})`;
                    let n = new A(599, r, this.headers, this.body, this.#er || void 0);
                    return n.#tl = {
                        message: e,
                        error: t
                    }, n
                }
                throwThrottleError(e, t) {
                    null == t ? t = -1 : (0, s.assertArgument)(Number.isInteger(t) && t >= 0, "invalid stall timeout", "stall", t);
                    let r = Error(e || "throttling requests");
                    throw (0, o.defineProperties)(r, {
                        stall: t,
                        throttle: !0
                    }), r
                }
                getHeader(e) {
                    return this.headers[e.toLowerCase()]
                }
                hasBody() {
                    return null != this.#e8
                }
                get request() {
                    return this.#er
                }
                ok() {
                    return "" === this.#tl.message && this.statusCode >= 200 && this.statusCode < 300
                }
                assertOk() {
                    if (this.ok()) return;
                    let {
                        message: e,
                        error: t
                    } = this.#tl;
                    "" === e && (e = `server response ${this.statusCode} ${this.statusMessage}`), (0, s.assert)(!1, e, "SERVER_ERROR", {
                        request: this.request || "unknown request",
                        response: this,
                        error: t
                    })
                }
            }

            function v() {
                return new Date().getTime()
            }
            t.FetchResponse = A
        },
        49051: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FixedNumber = void 0;
            let n = r(9263),
                i = r(81602),
                s = r(80306),
                o = r(17693),
                a = BigInt(-1),
                l = BigInt(0),
                u = BigInt(1),
                c = BigInt(5),
                d = {},
                h = "0000";
            for (; h.length < 80;) h += h;

            function f(e) {
                let t = h;
                for (; t.length < e;) t += t;
                return BigInt("1" + t.substring(0, e))
            }

            function p(e, t, r) {
                let n = BigInt(t.width);
                if (t.signed) {
                    let t = u << n - u;
                    (0, i.assert)(null == r || e >= -t && e < t, "overflow", "NUMERIC_FAULT", {
                        operation: r,
                        fault: "overflow",
                        value: e
                    }), e = e > l ? (0, s.fromTwos)((0, s.mask)(e, n), n) : -(0, s.fromTwos)((0, s.mask)(-e, n), n)
                } else {
                    let t = u << n;
                    (0, i.assert)(null == r || e >= 0 && e < t, "overflow", "NUMERIC_FAULT", {
                        operation: r,
                        fault: "overflow",
                        value: e
                    }), e = (e % t + t) % t & t - u
                }
                return e
            }

            function g(e) {
                "number" == typeof e && (e = `fixed128x${e}`);
                let t = !0,
                    r = 128,
                    n = 18;
                if ("string" == typeof e) {
                    if ("fixed" === e);
                    else if ("ufixed" === e) t = !1;
                    else {
                        let s = e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                        (0, i.assertArgument)(s, "invalid fixed format", "format", e), t = "u" !== s[1], r = parseInt(s[2]), n = parseInt(s[3])
                    }
                } else if (e) {
                    let s = e,
                        o = (e, t, r) => null == s[e] ? r : ((0, i.assertArgument)(typeof s[e] === t, "invalid fixed format (" + e + " not " + t + ")", "format." + e, s[e]), s[e]);
                    t = o("signed", "boolean", t), r = o("width", "number", r), n = o("decimals", "number", n)
                }(0, i.assertArgument)(r % 8 == 0, "invalid FixedNumber width (not byte aligned)", "format.width", r), (0, i.assertArgument)(n <= 80, "invalid FixedNumber decimals (too large)", "format.decimals", n);
                let s = (t ? "" : "u") + "fixed" + String(r) + "x" + String(n);
                return {
                    signed: t,
                    width: r,
                    decimals: n,
                    name: s
                }
            }
            class m {
                format;#
                tu;#
                tc;#
                td;
                _value;
                constructor(e, t, r) {
                    (0, i.assertPrivate)(e, d, "FixedNumber"), this.#tc = t, this.#tu = r;
                    let n = function(e, t) {
                        let r = "";
                        e < l && (r = "-", e *= a);
                        let n = e.toString();
                        if (0 === t) return r + n;
                        for (; n.length <= t;) n = h + n;
                        let i = n.length - t;
                        for (n = n.substring(0, i) + "." + n.substring(i);
                            "0" === n[0] && "." !== n[1];) n = n.substring(1);
                        for (;
                            "0" === n[n.length - 1] && "." !== n[n.length - 2];) n = n.substring(0, n.length - 1);
                        return r + n
                    }(t, r.decimals);
                    (0, o.defineProperties)(this, {
                        format: r.name,
                        _value: n
                    }), this.#td = f(r.decimals)
                }
                get signed() {
                    return this.#tu.signed
                }
                get width() {
                    return this.#tu.width
                }
                get decimals() {
                    return this.#tu.decimals
                }
                get value() {
                    return this.#tc
                }#
                th(e) {
                    (0, i.assertArgument)(this.format === e.format, "incompatible format; use fixedNumber.toFormat", "other", e)
                }#
                tf(e, t) {
                    return e = p(e, this.#tu, t), new m(d, e, this.#tu)
                }#
                tp(e, t) {
                    return this.#th(e), this.#tf(this.#tc + e.#tc, t)
                }
                addUnsafe(e) {
                    return this.#tp(e)
                }
                add(e) {
                    return this.#tp(e, "add")
                }#
                tg(e, t) {
                    return this.#th(e), this.#tf(this.#tc - e.#tc, t)
                }
                subUnsafe(e) {
                    return this.#tg(e)
                }
                sub(e) {
                    return this.#tg(e, "sub")
                }#
                tm(e, t) {
                    return this.#th(e), this.#tf(this.#tc * e.#tc / this.#td, t)
                }
                mulUnsafe(e) {
                    return this.#tm(e)
                }
                mul(e) {
                    return this.#tm(e, "mul")
                }
                mulSignal(e) {
                    this.#th(e);
                    let t = this.#tc * e.#tc;
                    return (0, i.assert)(t % this.#td === l, "precision lost during signalling mul", "NUMERIC_FAULT", {
                        operation: "mulSignal",
                        fault: "underflow",
                        value: this
                    }), this.#tf(t / this.#td, "mulSignal")
                }#
                ty(e, t) {
                    return (0, i.assert)(e.#tc !== l, "division by zero", "NUMERIC_FAULT", {
                        operation: "div",
                        fault: "divide-by-zero",
                        value: this
                    }), this.#th(e), this.#tf(this.#tc * this.#td / e.#tc, t)
                }
                divUnsafe(e) {
                    return this.#ty(e)
                }
                div(e) {
                    return this.#ty(e, "div")
                }
                divSignal(e) {
                    (0, i.assert)(e.#tc !== l, "division by zero", "NUMERIC_FAULT", {
                        operation: "div",
                        fault: "divide-by-zero",
                        value: this
                    }), this.#th(e);
                    let t = this.#tc * this.#td;
                    return (0, i.assert)(t % e.#tc === l, "precision lost during signalling div", "NUMERIC_FAULT", {
                        operation: "divSignal",
                        fault: "underflow",
                        value: this
                    }), this.#tf(t / e.#tc, "divSignal")
                }
                cmp(e) {
                    let t = this.value,
                        r = e.value,
                        n = this.decimals - e.decimals;
                    return (n > 0 ? r *= f(n) : n < 0 && (t *= f(-n)), t < r) ? -1 : t > r ? 1 : 0
                }
                eq(e) {
                    return 0 === this.cmp(e)
                }
                lt(e) {
                    return 0 > this.cmp(e)
                }
                lte(e) {
                    return 0 >= this.cmp(e)
                }
                gt(e) {
                    return this.cmp(e) > 0
                }
                gte(e) {
                    return this.cmp(e) >= 0
                }
                floor() {
                    let e = this.#tc;
                    return this.#tc < l && (e -= this.#td - u), e = this.#tc / this.#td * this.#td, this.#tf(e, "floor")
                }
                ceiling() {
                    let e = this.#tc;
                    return this.#tc > l && (e += this.#td - u), e = this.#tc / this.#td * this.#td, this.#tf(e, "ceiling")
                }
                round(e) {
                    if (null == e && (e = 0), e >= this.decimals) return this;
                    let t = this.decimals - e,
                        r = c * f(t - 1),
                        n = this.value + r,
                        i = f(t);
                    return p(n = n / i * i, this.#tu, "round"), new m(d, n, this.#tu)
                }
                isZero() {
                    return this.#tc === l
                }
                isNegative() {
                    return this.#tc < l
                }
                toString() {
                    return this._value
                }
                toUnsafeFloat() {
                    return parseFloat(this.toString())
                }
                toFormat(e) {
                    return m.fromString(this.toString(), e)
                }
                static fromValue(e, t, r) {
                    let n = null == t ? 0 : (0, s.getNumber)(t),
                        o = g(r),
                        a = (0, s.getBigInt)(e, "value"),
                        u = n - o.decimals;
                    if (u > 0) {
                        let t = f(u);
                        (0, i.assert)(a % t === l, "value loses precision for format", "NUMERIC_FAULT", {
                            operation: "fromValue",
                            fault: "underflow",
                            value: e
                        }), a /= t
                    } else u < 0 && (a *= f(-u));
                    return p(a, o, "fromValue"), new m(d, a, o)
                }
                static fromString(e, t) {
                    let r = e.match(/^(-?)([0-9]*)\.?([0-9]*)$/);
                    (0, i.assertArgument)(r && r[2].length + r[3].length > 0, "invalid FixedNumber string value", "value", e);
                    let n = g(t),
                        s = r[2] || "0",
                        o = r[3] || "";
                    for (; o.length < n.decimals;) o += h;
                    (0, i.assert)(o.substring(n.decimals).match(/^0*$/), "too many decimals for format", "NUMERIC_FAULT", {
                        operation: "fromString",
                        fault: "underflow",
                        value: e
                    }), o = o.substring(0, n.decimals);
                    let a = BigInt(r[1] + s + o);
                    return p(a, n, "fromString"), new m(d, a, n)
                }
                static fromBytes(e, t) {
                    let r = (0, s.toBigInt)((0, n.getBytes)(e, "value")),
                        i = g(t);
                    return i.signed && (r = (0, s.fromTwos)(r, i.width)), p(r, i, "fromBytes"), new m(d, r, i)
                }
            }
            t.FixedNumber = m
        },
        16194: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getUrl = void 0;
            let n = r(81602);
            async function i(e, t) {
                let r;
                let i = e.url.split(":")[0].toLowerCase();
                if ((0, n.assert)("http" === i || "https" === i, `unsupported protocol ${i}`, "UNSUPPORTED_OPERATION", {
                        info: {
                            protocol: i
                        },
                        operation: "request"
                    }), (0, n.assert)("https" === i || !e.credentials || e.allowInsecureAuthentication, "insecure authorized connections unsupported", "UNSUPPORTED_OPERATION", {
                        operation: "request"
                    }), t) {
                    let e = new AbortController;
                    r = e.signal, t.addListener(() => {
                        e.abort()
                    })
                }
                let s = {
                        method: e.method,
                        headers: new Headers(Array.from(e)),
                        body: e.body || void 0,
                        signal: r
                    },
                    o = await fetch(e.url, s),
                    a = {};
                o.headers.forEach((e, t) => {
                    a[t.toLowerCase()] = e
                });
                let l = await o.arrayBuffer(),
                    u = null == l ? null : new Uint8Array(l);
                return {
                    statusCode: o.status,
                    statusMessage: o.statusText,
                    headers: a,
                    body: u
                }
            }
            t.getUrl = i
        },
        82678: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.toUtf8String = t.toUtf8CodePoints = t.toUtf8Bytes = t.parseUnits = t.formatUnits = t.parseEther = t.formatEther = t.encodeRlp = t.decodeRlp = t.defineProperties = t.resolveProperties = t.toQuantity = t.toBeArray = t.toBeHex = t.toNumber = t.toBigInt = t.getUint = t.getNumber = t.getBigInt = t.mask = t.toTwos = t.fromTwos = t.FixedNumber = t.FetchCancelSignal = t.FetchResponse = t.FetchRequest = t.EventPayload = t.makeError = t.assertNormalize = t.assertPrivate = t.assertArgumentCount = t.assertArgument = t.assert = t.isError = t.isCallException = t.zeroPadBytes = t.zeroPadValue = t.stripZerosLeft = t.dataSlice = t.dataLength = t.concat = t.hexlify = t.isBytesLike = t.isHexString = t.getBytesCopy = t.getBytes = t.encodeBase64 = t.decodeBase64 = t.encodeBase58 = t.decodeBase58 = void 0, t.uuidV4 = t.Utf8ErrorFuncs = void 0;
            var n = r(99563);
            Object.defineProperty(t, "decodeBase58", {
                enumerable: !0,
                get: function() {
                    return n.decodeBase58
                }
            }), Object.defineProperty(t, "encodeBase58", {
                enumerable: !0,
                get: function() {
                    return n.encodeBase58
                }
            });
            var i = r(61709);
            Object.defineProperty(t, "decodeBase64", {
                enumerable: !0,
                get: function() {
                    return i.decodeBase64
                }
            }), Object.defineProperty(t, "encodeBase64", {
                enumerable: !0,
                get: function() {
                    return i.encodeBase64
                }
            });
            var s = r(9263);
            Object.defineProperty(t, "getBytes", {
                enumerable: !0,
                get: function() {
                    return s.getBytes
                }
            }), Object.defineProperty(t, "getBytesCopy", {
                enumerable: !0,
                get: function() {
                    return s.getBytesCopy
                }
            }), Object.defineProperty(t, "isHexString", {
                enumerable: !0,
                get: function() {
                    return s.isHexString
                }
            }), Object.defineProperty(t, "isBytesLike", {
                enumerable: !0,
                get: function() {
                    return s.isBytesLike
                }
            }), Object.defineProperty(t, "hexlify", {
                enumerable: !0,
                get: function() {
                    return s.hexlify
                }
            }), Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return s.concat
                }
            }), Object.defineProperty(t, "dataLength", {
                enumerable: !0,
                get: function() {
                    return s.dataLength
                }
            }), Object.defineProperty(t, "dataSlice", {
                enumerable: !0,
                get: function() {
                    return s.dataSlice
                }
            }), Object.defineProperty(t, "stripZerosLeft", {
                enumerable: !0,
                get: function() {
                    return s.stripZerosLeft
                }
            }), Object.defineProperty(t, "zeroPadValue", {
                enumerable: !0,
                get: function() {
                    return s.zeroPadValue
                }
            }), Object.defineProperty(t, "zeroPadBytes", {
                enumerable: !0,
                get: function() {
                    return s.zeroPadBytes
                }
            });
            var o = r(81602);
            Object.defineProperty(t, "isCallException", {
                enumerable: !0,
                get: function() {
                    return o.isCallException
                }
            }), Object.defineProperty(t, "isError", {
                enumerable: !0,
                get: function() {
                    return o.isError
                }
            }), Object.defineProperty(t, "assert", {
                enumerable: !0,
                get: function() {
                    return o.assert
                }
            }), Object.defineProperty(t, "assertArgument", {
                enumerable: !0,
                get: function() {
                    return o.assertArgument
                }
            }), Object.defineProperty(t, "assertArgumentCount", {
                enumerable: !0,
                get: function() {
                    return o.assertArgumentCount
                }
            }), Object.defineProperty(t, "assertPrivate", {
                enumerable: !0,
                get: function() {
                    return o.assertPrivate
                }
            }), Object.defineProperty(t, "assertNormalize", {
                enumerable: !0,
                get: function() {
                    return o.assertNormalize
                }
            }), Object.defineProperty(t, "makeError", {
                enumerable: !0,
                get: function() {
                    return o.makeError
                }
            });
            var a = r(98417);
            Object.defineProperty(t, "EventPayload", {
                enumerable: !0,
                get: function() {
                    return a.EventPayload
                }
            });
            var l = r(88223);
            Object.defineProperty(t, "FetchRequest", {
                enumerable: !0,
                get: function() {
                    return l.FetchRequest
                }
            }), Object.defineProperty(t, "FetchResponse", {
                enumerable: !0,
                get: function() {
                    return l.FetchResponse
                }
            }), Object.defineProperty(t, "FetchCancelSignal", {
                enumerable: !0,
                get: function() {
                    return l.FetchCancelSignal
                }
            });
            var u = r(49051);
            Object.defineProperty(t, "FixedNumber", {
                enumerable: !0,
                get: function() {
                    return u.FixedNumber
                }
            });
            var c = r(80306);
            Object.defineProperty(t, "fromTwos", {
                enumerable: !0,
                get: function() {
                    return c.fromTwos
                }
            }), Object.defineProperty(t, "toTwos", {
                enumerable: !0,
                get: function() {
                    return c.toTwos
                }
            }), Object.defineProperty(t, "mask", {
                enumerable: !0,
                get: function() {
                    return c.mask
                }
            }), Object.defineProperty(t, "getBigInt", {
                enumerable: !0,
                get: function() {
                    return c.getBigInt
                }
            }), Object.defineProperty(t, "getNumber", {
                enumerable: !0,
                get: function() {
                    return c.getNumber
                }
            }), Object.defineProperty(t, "getUint", {
                enumerable: !0,
                get: function() {
                    return c.getUint
                }
            }), Object.defineProperty(t, "toBigInt", {
                enumerable: !0,
                get: function() {
                    return c.toBigInt
                }
            }), Object.defineProperty(t, "toNumber", {
                enumerable: !0,
                get: function() {
                    return c.toNumber
                }
            }), Object.defineProperty(t, "toBeHex", {
                enumerable: !0,
                get: function() {
                    return c.toBeHex
                }
            }), Object.defineProperty(t, "toBeArray", {
                enumerable: !0,
                get: function() {
                    return c.toBeArray
                }
            }), Object.defineProperty(t, "toQuantity", {
                enumerable: !0,
                get: function() {
                    return c.toQuantity
                }
            });
            var d = r(17693);
            Object.defineProperty(t, "resolveProperties", {
                enumerable: !0,
                get: function() {
                    return d.resolveProperties
                }
            }), Object.defineProperty(t, "defineProperties", {
                enumerable: !0,
                get: function() {
                    return d.defineProperties
                }
            });
            var h = r(44674);
            Object.defineProperty(t, "decodeRlp", {
                enumerable: !0,
                get: function() {
                    return h.decodeRlp
                }
            });
            var f = r(37980);
            Object.defineProperty(t, "encodeRlp", {
                enumerable: !0,
                get: function() {
                    return f.encodeRlp
                }
            });
            var p = r(42256);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return p.formatEther
                }
            }), Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return p.parseEther
                }
            }), Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return p.formatUnits
                }
            }), Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return p.parseUnits
                }
            });
            var g = r(76482);
            Object.defineProperty(t, "toUtf8Bytes", {
                enumerable: !0,
                get: function() {
                    return g.toUtf8Bytes
                }
            }), Object.defineProperty(t, "toUtf8CodePoints", {
                enumerable: !0,
                get: function() {
                    return g.toUtf8CodePoints
                }
            }), Object.defineProperty(t, "toUtf8String", {
                enumerable: !0,
                get: function() {
                    return g.toUtf8String
                }
            }), Object.defineProperty(t, "Utf8ErrorFuncs", {
                enumerable: !0,
                get: function() {
                    return g.Utf8ErrorFuncs
                }
            });
            var m = r(89385);
            Object.defineProperty(t, "uuidV4", {
                enumerable: !0,
                get: function() {
                    return m.uuidV4
                }
            })
        },
        80306: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.toQuantity = t.toBeArray = t.toBeHex = t.toNumber = t.getNumber = t.toBigInt = t.getUint = t.getBigInt = t.mask = t.toTwos = t.fromTwos = void 0;
            let n = r(9263),
                i = r(81602),
                s = BigInt(0),
                o = BigInt(1);

            function a(e, t) {
                switch (typeof e) {
                    case "bigint":
                        return e;
                    case "number":
                        return (0, i.assertArgument)(Number.isInteger(e), "underflow", t || "value", e), (0, i.assertArgument)(e >= -9007199254740991 && e <= 9007199254740991, "overflow", t || "value", e), BigInt(e);
                    case "string":
                        try {
                            if ("" === e) throw Error("empty string");
                            if ("-" === e[0] && "-" !== e[1]) return -BigInt(e.substring(1));
                            return BigInt(e)
                        } catch (r) {
                            (0, i.assertArgument)(!1, `invalid BigNumberish string: ${r.message}`, t || "value", e)
                        }
                }(0, i.assertArgument)(!1, "invalid BigNumberish value", t || "value", e)
            }

            function l(e, t) {
                let r = a(e, t);
                return (0, i.assert)(r >= s, "unsigned value cannot be negative", "NUMERIC_FAULT", {
                    fault: "overflow",
                    operation: "getUint",
                    value: e
                }), r
            }
            t.fromTwos = function(e, t) {
                let r = l(e, "value"),
                    n = BigInt(d(t, "width"));
                if ((0, i.assert)(r >> n === s, "overflow", "NUMERIC_FAULT", {
                        operation: "fromTwos",
                        fault: "overflow",
                        value: e
                    }), r >> n - o) {
                    let e = (o << n) - o;
                    return -((~r & e) + o)
                }
                return r
            }, t.toTwos = function(e, t) {
                let r = a(e, "value"),
                    n = BigInt(d(t, "width")),
                    l = o << n - o;
                return r < s ? (r = -r, (0, i.assert)(r <= l, "too low", "NUMERIC_FAULT", {
                    operation: "toTwos",
                    fault: "overflow",
                    value: e
                }), (~r & (o << n) - o) + o) : ((0, i.assert)(r < l, "too high", "NUMERIC_FAULT", {
                    operation: "toTwos",
                    fault: "overflow",
                    value: e
                }), r)
            }, t.mask = function(e, t) {
                let r = l(e, "value"),
                    n = BigInt(d(t, "bits"));
                return r & (o << n) - o
            }, t.getBigInt = a, t.getUint = l;
            let u = "0123456789abcdef";

            function c(e) {
                if (e instanceof Uint8Array) {
                    let t = "0x0";
                    for (let r of e) t += u[r >> 4] + u[15 & r];
                    return BigInt(t)
                }
                return a(e)
            }

            function d(e, t) {
                switch (typeof e) {
                    case "bigint":
                        return (0, i.assertArgument)(e >= -9007199254740991 && e <= 9007199254740991, "overflow", t || "value", e), Number(e);
                    case "number":
                        return (0, i.assertArgument)(Number.isInteger(e), "underflow", t || "value", e), (0, i.assertArgument)(e >= -9007199254740991 && e <= 9007199254740991, "overflow", t || "value", e), e;
                    case "string":
                        try {
                            if ("" === e) throw Error("empty string");
                            return d(BigInt(e), t)
                        } catch (r) {
                            (0, i.assertArgument)(!1, `invalid numeric string: ${r.message}`, t || "value", e)
                        }
                }(0, i.assertArgument)(!1, "invalid numeric value", t || "value", e)
            }

            function h(e) {
                let t = l(e, "value");
                if (t === s) return new Uint8Array([]);
                let r = t.toString(16);
                r.length % 2 && (r = "0" + r);
                let n = new Uint8Array(r.length / 2);
                for (let e = 0; e < n.length; e++) {
                    let t = 2 * e;
                    n[e] = parseInt(r.substring(t, t + 2), 16)
                }
                return n
            }
            t.toBigInt = c, t.getNumber = d, t.toNumber = function(e) {
                return d(c(e))
            }, t.toBeHex = function(e, t) {
                let r = l(e, "value"),
                    n = r.toString(16);
                if (null == t) n.length % 2 && (n = "0" + n);
                else {
                    let r = d(t, "width");
                    for ((0, i.assert)(2 * r >= n.length, `value exceeds width (${r} bits)`, "NUMERIC_FAULT", {
                            operation: "toBeHex",
                            fault: "overflow",
                            value: e
                        }); n.length < 2 * r;) n = "0" + n
                }
                return "0x" + n
            }, t.toBeArray = h, t.toQuantity = function(e) {
                let t = (0, n.hexlify)((0, n.isBytesLike)(e) ? e : h(e)).substring(2);
                for (; t.startsWith("0");) t = t.substring(1);
                return "" === t && (t = "0"), "0x" + t
            }
        },
        17693: function(e, t) {
            "use strict";
            async function r(e) {
                let t = Object.keys(e),
                    r = await Promise.all(t.map(t => Promise.resolve(e[t])));
                return r.reduce((e, r, n) => (e[t[n]] = r, e), {})
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineProperties = t.resolveProperties = void 0, t.resolveProperties = r, t.defineProperties = function(e, t, r) {
                for (let n in t) {
                    let i = t[n],
                        s = r ? r[n] : null;
                    s && function(e, t, r) {
                        let n = t.split("|").map(e => e.trim());
                        for (let r = 0; r < n.length; r++) switch (t) {
                            case "any":
                                return;
                            case "bigint":
                            case "boolean":
                            case "number":
                            case "string":
                                if (typeof e === t) return
                        }
                        let i = Error(`invalid value for type ${t}`);
                        throw i.code = "INVALID_ARGUMENT", i.argument = `value.${r}`, i.value = e, i
                    }(i, s, n), Object.defineProperty(e, n, {
                        enumerable: !0,
                        value: i,
                        writable: !1
                    })
                }
            }
        },
        44674: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeRlp = void 0;
            let n = r(9263),
                i = r(81602),
                s = r(9263);

            function o(e, t, r) {
                let n = 0;
                for (let i = 0; i < r; i++) n = 256 * n + e[t + i];
                return n
            }

            function a(e, t, r, n) {
                let s = [];
                for (; r < t + 1 + n;) {
                    let o = l(e, r);
                    s.push(o.result), r += o.consumed, (0, i.assert)(r <= t + 1 + n, "child data too short", "BUFFER_OVERRUN", {
                        buffer: e,
                        length: n,
                        offset: t
                    })
                }
                return {
                    consumed: 1 + n,
                    result: s
                }
            }

            function l(e, t) {
                (0, i.assert)(0 !== e.length, "data too short", "BUFFER_OVERRUN", {
                    buffer: e,
                    length: 0,
                    offset: 1
                });
                let r = t => {
                    (0, i.assert)(t <= e.length, "data short segment too short", "BUFFER_OVERRUN", {
                        buffer: e,
                        length: e.length,
                        offset: t
                    })
                };
                if (e[t] >= 248) {
                    let n = e[t] - 247;
                    r(t + 1 + n);
                    let i = o(e, t + 1, n);
                    return r(t + 1 + n + i), a(e, t, t + 1 + n, n + i)
                }
                if (e[t] >= 192) {
                    let n = e[t] - 192;
                    return r(t + 1 + n), a(e, t, t + 1, n)
                }
                if (e[t] >= 184) {
                    let i = e[t] - 183;
                    r(t + 1 + i);
                    let s = o(e, t + 1, i);
                    r(t + 1 + i + s);
                    let a = (0, n.hexlify)(e.slice(t + 1 + i, t + 1 + i + s));
                    return {
                        consumed: 1 + i + s,
                        result: a
                    }
                }
                if (e[t] >= 128) {
                    let i = e[t] - 128;
                    r(t + 1 + i);
                    let s = (0, n.hexlify)(e.slice(t + 1, t + 1 + i));
                    return {
                        consumed: 1 + i,
                        result: s
                    }
                }
                return {
                    consumed: 1,
                    result: function(e) {
                        let t = e.toString(16);
                        for (; t.length < 2;) t = "0" + t;
                        return "0x" + t
                    }(e[t])
                }
            }
            t.decodeRlp = function(e) {
                let t = (0, s.getBytes)(e, "data"),
                    r = l(t, 0);
                return (0, i.assertArgument)(r.consumed === t.length, "unexpected junk after rlp payload", "data", e), r.result
            }
        },
        37980: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeRlp = void 0;
            let n = r(9263);

            function i(e) {
                let t = [];
                for (; e;) t.unshift(255 & e), e >>= 8;
                return t
            }
            let s = "0123456789abcdef";
            t.encodeRlp = function(e) {
                let t = "0x";
                for (let r of function e(t) {
                        if (Array.isArray(t)) {
                            let r = [];
                            if (t.forEach(function(t) {
                                    r = r.concat(e(t))
                                }), r.length <= 55) return r.unshift(192 + r.length), r;
                            let n = i(r.length);
                            return n.unshift(247 + n.length), n.concat(r)
                        }
                        let r = Array.prototype.slice.call((0, n.getBytes)(t, "object"));
                        if (1 === r.length && r[0] <= 127) return r;
                        if (r.length <= 55) return r.unshift(128 + r.length), r;
                        let s = i(r.length);
                        return s.unshift(183 + s.length), s.concat(r)
                    }(e)) t += s[r >> 4] + s[15 & r];
                return t
            }
        },
        42256: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseEther = t.formatEther = t.parseUnits = t.formatUnits = void 0;
            let n = r(81602),
                i = r(49051),
                s = r(80306),
                o = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];

            function a(e, t) {
                let r = 18;
                if ("string" == typeof t) {
                    let e = o.indexOf(t);
                    (0, n.assertArgument)(e >= 0, "invalid unit", "unit", t), r = 3 * e
                } else null != t && (r = (0, s.getNumber)(t, "unit"));
                return i.FixedNumber.fromValue(e, r, {
                    decimals: r,
                    width: 512
                }).toString()
            }

            function l(e, t) {
                (0, n.assertArgument)("string" == typeof e, "value must be a string", "value", e);
                let r = 18;
                if ("string" == typeof t) {
                    let e = o.indexOf(t);
                    (0, n.assertArgument)(e >= 0, "invalid unit", "unit", t), r = 3 * e
                } else null != t && (r = (0, s.getNumber)(t, "unit"));
                return i.FixedNumber.fromString(e, {
                    decimals: r,
                    width: 512
                }).value
            }
            t.formatUnits = a, t.parseUnits = l, t.formatEther = function(e) {
                return a(e, 18)
            }, t.parseEther = function(e) {
                return l(e, 18)
            }
        },
        76482: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.toUtf8CodePoints = t.toUtf8String = t.toUtf8Bytes = t.Utf8ErrorFuncs = void 0;
            let n = r(9263),
                i = r(81602);

            function s(e, t, r, n, i) {
                if ("BAD_PREFIX" === e || "UNEXPECTED_CONTINUE" === e) {
                    let e = 0;
                    for (let n = t + 1; n < r.length && r[n] >> 6 == 2; n++) e++;
                    return e
                }
                return "OVERRUN" === e ? r.length - t - 1 : 0
            }

            function o(e, r) {
                null == r && (r = t.Utf8ErrorFuncs.error);
                let i = (0, n.getBytes)(e, "bytes"),
                    s = [],
                    o = 0;
                for (; o < i.length;) {
                    let e = i[o++];
                    if (e >> 7 == 0) {
                        s.push(e);
                        continue
                    }
                    let t = null,
                        n = null;
                    if ((224 & e) == 192) t = 1, n = 127;
                    else if ((240 & e) == 224) t = 2, n = 2047;
                    else if ((248 & e) == 240) t = 3, n = 65535;
                    else {
                        (192 & e) == 128 ? o += r("UNEXPECTED_CONTINUE", o - 1, i, s) : o += r("BAD_PREFIX", o - 1, i, s);
                        continue
                    }
                    if (o - 1 + t >= i.length) {
                        o += r("OVERRUN", o - 1, i, s);
                        continue
                    }
                    let a = e & (1 << 8 - t - 1) - 1;
                    for (let e = 0; e < t; e++) {
                        let e = i[o];
                        if ((192 & e) != 128) {
                            o += r("MISSING_CONTINUE", o, i, s), a = null;
                            break
                        }
                        a = a << 6 | 63 & e, o++
                    }
                    if (null !== a) {
                        if (a > 1114111) {
                            o += r("OUT_OF_RANGE", o - 1 - t, i, s, a);
                            continue
                        }
                        if (a >= 55296 && a <= 57343) {
                            o += r("UTF16_SURROGATE", o - 1 - t, i, s, a);
                            continue
                        }
                        if (a <= n) {
                            o += r("OVERLONG", o - 1 - t, i, s, a);
                            continue
                        }
                        s.push(a)
                    }
                }
                return s
            }

            function a(e, t) {
                null != t && ((0, i.assertNormalize)(t), e = e.normalize(t));
                let r = [];
                for (let t = 0; t < e.length; t++) {
                    let n = e.charCodeAt(t);
                    if (n < 128) r.push(n);
                    else if (n < 2048) r.push(n >> 6 | 192), r.push(63 & n | 128);
                    else if ((64512 & n) == 55296) {
                        t++;
                        let s = e.charCodeAt(t);
                        (0, i.assertArgument)(t < e.length && (64512 & s) == 56320, "invalid surrogate pair", "str", e);
                        let o = 65536 + ((1023 & n) << 10) + (1023 & s);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(63 & n | 128)
                }
                return new Uint8Array(r)
            }
            t.Utf8ErrorFuncs = Object.freeze({
                error: function(e, t, r, n, s) {
                    (0, i.assertArgument)(!1, `invalid codepoint at offset ${t}; ${e}`, "bytes", r)
                },
                ignore: s,
                replace: function(e, t, r, n, o) {
                    return "OVERLONG" === e ? ((0, i.assertArgument)("number" == typeof o, "invalid bad code point for replacement", "badCodepoint", o), n.push(o), 0) : (n.push(65533), s(e, t, r, n, o))
                }
            }), t.toUtf8Bytes = a, t.toUtf8String = function(e, t) {
                return o(e, t).map(e => e <= 65535 ? String.fromCharCode(e) : String.fromCharCode(((e -= 65536) >> 10 & 1023) + 55296, (1023 & e) + 56320)).join("")
            }, t.toUtf8CodePoints = function(e, t) {
                return o(a(e, t))
            }
        },
        89385: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uuidV4 = void 0;
            let n = r(9263);
            t.uuidV4 = function(e) {
                let t = (0, n.getBytes)(e, "randomBytes");
                t[6] = 15 & t[6] | 64, t[8] = 63 & t[8] | 128;
                let r = (0, n.hexlify)(t);
                return [r.substring(2, 10), r.substring(10, 14), r.substring(14, 18), r.substring(18, 22), r.substring(22, 34)].join("-")
            }
        },
        67707: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseWallet = void 0;
            let n = r(29527),
                i = r(94194),
                s = r(39004),
                o = r(9404),
                a = r(82678);
            class l extends s.AbstractSigner {
                address;#
                tb;
                constructor(e, t) {
                    super(t), (0, a.assertArgument)(e && "function" == typeof e.sign, "invalid private key", "privateKey", "[ REDACTED ]"), this.#tb = e;
                    let r = (0, o.computeAddress)(this.signingKey.publicKey);
                    (0, a.defineProperties)(this, {
                        address: r
                    })
                }
                get signingKey() {
                    return this.#tb
                }
                get privateKey() {
                    return this.signingKey.privateKey
                }
                async getAddress() {
                    return this.address
                }
                connect(e) {
                    return new l(this.#tb, e)
                }
                async signTransaction(e) {
                    let {
                        to: t,
                        from: r
                    } = await (0, a.resolveProperties)({
                        to: e.to ? (0, n.resolveAddress)(e.to, this.provider) : void 0,
                        from: e.from ? (0, n.resolveAddress)(e.from, this.provider) : void 0
                    });
                    null != t && (e.to = t), null != r && (e.from = r), null != e.from && ((0, a.assertArgument)((0, n.getAddress)(e.from) === this.address, "transaction from address mismatch", "tx.from", e.from), delete e.from);
                    let i = o.Transaction.from(e);
                    return i.signature = this.signingKey.sign(i.unsignedHash), i.serialized
                }
                async signMessage(e) {
                    return this.signMessageSync(e)
                }
                signMessageSync(e) {
                    return this.signingKey.sign((0, i.hashMessage)(e)).serialized
                }
                async signTypedData(e, t, r) {
                    let n = await i.TypedDataEncoder.resolveNames(e, t, r, async e => {
                        (0, a.assert)(null != this.provider, "cannot resolve ENS names without a provider", "UNSUPPORTED_OPERATION", {
                            operation: "resolveName",
                            info: {
                                name: e
                            }
                        });
                        let t = await this.provider.resolveName(e);
                        return (0, a.assert)(null != t, "unconfigured ENS name", "UNCONFIGURED_NAME", {
                            value: e
                        }), t
                    });
                    return this.signingKey.sign(i.TypedDataEncoder.hash(n.domain, t, n.value)).serialized
                }
            }
            t.BaseWallet = l
        },
        70347: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getIndexedAccountPath = t.getAccountPath = t.HDNodeVoidWallet = t.HDNodeWallet = t.defaultPath = void 0;
            let n = r(20021),
                i = r(39004),
                s = r(9404),
                o = r(82678),
                a = r(37542),
                l = r(67707),
                u = r(16577),
                c = r(39174);
            t.defaultPath = "m/44'/60'/0'/0/0";
            let d = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]),
                h = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");

            function f(e, t) {
                let r = "";
                for (; e;) r = "0123456789abcdef" [e % 16] + r, e = Math.trunc(e / 16);
                for (; r.length < 2 * t;) r = "0" + r;
                return "0x" + r
            }

            function p(e) {
                let t = (0, o.getBytes)(e),
                    r = (0, o.dataSlice)((0, n.sha256)((0, n.sha256)(t)), 0, 4),
                    i = (0, o.concat)([t, r]);
                return (0, o.encodeBase58)(i)
            }
            let g = {};

            function m(e, t, r, i) {
                let s = new Uint8Array(37);
                2147483648 & e ? ((0, o.assert)(null != i, "cannot derive child of neutered node", "UNSUPPORTED_OPERATION", {
                    operation: "deriveChild"
                }), s.set((0, o.getBytes)(i), 1)) : s.set((0, o.getBytes)(r));
                for (let t = 24; t >= 0; t -= 8) s[33 + (t >> 3)] = e >> 24 - t & 255;
                let a = (0, o.getBytes)((0, n.computeHmac)("sha512", t, s));
                return {
                    IL: a.slice(0, 32),
                    IR: a.slice(32)
                }
            }

            function y(e, t) {
                let r = t.split("/");
                (0, o.assertArgument)(r.length > 0 && ("m" === r[0] || e.depth > 0), "invalid path", "path", t), "m" === r[0] && r.shift();
                let n = e;
                for (let e = 0; e < r.length; e++) {
                    let t = r[e];
                    if (t.match(/^[0-9]+'$/)) {
                        let r = parseInt(t.substring(0, t.length - 1));
                        (0, o.assertArgument)(r < 2147483648, "invalid path index", `path[${e}]`, t), n = n.deriveChild(2147483648 + r)
                    } else if (t.match(/^[0-9]+$/)) {
                        let r = parseInt(t);
                        (0, o.assertArgument)(r < 2147483648, "invalid path index", `path[${e}]`, t), n = n.deriveChild(r)
                    } else(0, o.assertArgument)(!1, "invalid path component", `path[${e}]`, t)
                }
                return n
            }
            class b extends l.BaseWallet {
                publicKey;
                fingerprint;
                parentFingerprint;
                mnemonic;
                chainCode;
                path;
                index;
                depth;
                constructor(e, t, r, i, s, a, l, u, c) {
                    super(t, c), (0, o.assertPrivate)(e, g, "HDNodeWallet"), (0, o.defineProperties)(this, {
                        publicKey: t.compressedPublicKey
                    });
                    let d = (0, o.dataSlice)((0, n.ripemd160)((0, n.sha256)(this.publicKey)), 0, 4);
                    (0, o.defineProperties)(this, {
                        parentFingerprint: r,
                        fingerprint: d,
                        chainCode: i,
                        path: s,
                        index: a,
                        depth: l
                    }), (0, o.defineProperties)(this, {
                        mnemonic: u
                    })
                }
                connect(e) {
                    return new b(g, this.signingKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.mnemonic, e)
                }#
                tw() {
                    let e = {
                            address: this.address,
                            privateKey: this.privateKey
                        },
                        t = this.mnemonic;
                    return this.path && t && "en" === t.wordlist.locale && "" === t.password && (e.mnemonic = {
                        path: this.path,
                        locale: "en",
                        entropy: t.entropy
                    }), e
                }
                async encrypt(e, t) {
                    return await (0, c.encryptKeystoreJson)(this.#tw(), e, {
                        progressCallback: t
                    })
                }
                encryptSync(e) {
                    return (0, c.encryptKeystoreJsonSync)(this.#tw(), e)
                }
                get extendedKey() {
                    return (0, o.assert)(this.depth < 256, "Depth too deep", "UNSUPPORTED_OPERATION", {
                        operation: "extendedKey"
                    }), p((0, o.concat)(["0x0488ADE4", f(this.depth, 1), this.parentFingerprint, f(this.index, 4), this.chainCode, (0, o.concat)(["0x00", this.privateKey])]))
                }
                hasPath() {
                    return null != this.path
                }
                neuter() {
                    return new w(g, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.provider)
                }
                deriveChild(e) {
                    let t = (0, o.getNumber)(e, "index");
                    (0, o.assertArgument)(t <= 4294967295, "invalid index", "index", t);
                    let r = this.path;
                    r && (r += "/" + (2147483647 & t), 2147483648 & t && (r += "'"));
                    let {
                        IR: i,
                        IL: s
                    } = m(t, this.chainCode, this.publicKey, this.privateKey), a = new n.SigningKey((0, o.toBeHex)(((0, o.toBigInt)(s) + BigInt(this.privateKey)) % h, 32));
                    return new b(g, a, this.fingerprint, (0, o.hexlify)(i), r, t, this.depth + 1, this.mnemonic, this.provider)
                }
                derivePath(e) {
                    return y(this, e)
                }
                static# tA(e, t) {
                    (0, o.assertArgument)((0, o.isBytesLike)(e), "invalid seed", "seed", "[REDACTED]");
                    let r = (0, o.getBytes)(e, "seed");
                    (0, o.assertArgument)(r.length >= 16 && r.length <= 64, "invalid seed", "seed", "[REDACTED]");
                    let i = (0, o.getBytes)((0, n.computeHmac)("sha512", d, r)),
                        s = new n.SigningKey((0, o.hexlify)(i.slice(0, 32)));
                    return new b(g, s, "0x00000000", (0, o.hexlify)(i.slice(32)), "m", 0, 0, t, null)
                }
                static fromExtendedKey(e) {
                    let t = (0, o.toBeArray)((0, o.decodeBase58)(e));
                    (0, o.assertArgument)(82 === t.length || p(t.slice(0, 78)) === e, "invalid extended key", "extendedKey", "[ REDACTED ]");
                    let r = t[4],
                        i = (0, o.hexlify)(t.slice(5, 9)),
                        a = parseInt((0, o.hexlify)(t.slice(9, 13)).substring(2), 16),
                        l = (0, o.hexlify)(t.slice(13, 45)),
                        u = t.slice(45, 78);
                    switch ((0, o.hexlify)(t.slice(0, 4))) {
                        case "0x0488b21e":
                        case "0x043587cf":
                            {
                                let e = (0, o.hexlify)(u);
                                return new w(g, (0, s.computeAddress)(e), e, i, l, null, a, r, null)
                            }
                        case "0x0488ade4":
                        case "0x04358394 ":
                            if (0 !== u[0]) break;
                            return new b(g, new n.SigningKey(u.slice(1)), i, l, null, a, r, null, null)
                    }(0, o.assertArgument)(!1, "invalid extended key prefix", "extendedKey", "[ REDACTED ]")
                }
                static createRandom(e, r, i) {
                    null == e && (e = ""), null == r && (r = t.defaultPath), null == i && (i = a.LangEn.wordlist());
                    let s = u.Mnemonic.fromEntropy((0, n.randomBytes)(16), e, i);
                    return b.#tA(s.computeSeed(), s).derivePath(r)
                }
                static fromMnemonic(e, r) {
                    return r || (r = t.defaultPath), b.#tA(e.computeSeed(), e).derivePath(r)
                }
                static fromPhrase(e, r, n, i) {
                    null == r && (r = ""), null == n && (n = t.defaultPath), null == i && (i = a.LangEn.wordlist());
                    let s = u.Mnemonic.fromPhrase(e, r, i);
                    return b.#tA(s.computeSeed(), s).derivePath(n)
                }
                static fromSeed(e) {
                    return b.#tA(e, null)
                }
            }
            t.HDNodeWallet = b;
            class w extends i.VoidSigner {
                publicKey;
                fingerprint;
                parentFingerprint;
                chainCode;
                path;
                index;
                depth;
                constructor(e, t, r, i, s, a, l, u, c) {
                    super(t, c), (0, o.assertPrivate)(e, g, "HDNodeVoidWallet"), (0, o.defineProperties)(this, {
                        publicKey: r
                    });
                    let d = (0, o.dataSlice)((0, n.ripemd160)((0, n.sha256)(r)), 0, 4);
                    (0, o.defineProperties)(this, {
                        publicKey: r,
                        fingerprint: d,
                        parentFingerprint: i,
                        chainCode: s,
                        path: a,
                        index: l,
                        depth: u
                    })
                }
                connect(e) {
                    return new w(g, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, e)
                }
                get extendedKey() {
                    return (0, o.assert)(this.depth < 256, "Depth too deep", "UNSUPPORTED_OPERATION", {
                        operation: "extendedKey"
                    }), p((0, o.concat)(["0x0488B21E", f(this.depth, 1), this.parentFingerprint, f(this.index, 4), this.chainCode, this.publicKey]))
                }
                hasPath() {
                    return null != this.path
                }
                deriveChild(e) {
                    let t = (0, o.getNumber)(e, "index");
                    (0, o.assertArgument)(t <= 4294967295, "invalid index", "index", t);
                    let r = this.path;
                    r && (r += "/" + (2147483647 & t), 2147483648 & t && (r += "'"));
                    let {
                        IR: i,
                        IL: a
                    } = m(t, this.chainCode, this.publicKey, null), l = n.SigningKey.addPoints(a, this.publicKey, !0), u = (0, s.computeAddress)(l);
                    return new w(g, u, l, this.fingerprint, (0, o.hexlify)(i), r, t, this.depth + 1, this.provider)
                }
                derivePath(e) {
                    return y(this, e)
                }
            }
            t.HDNodeVoidWallet = w, t.getAccountPath = function(e) {
                let t = (0, o.getNumber)(e, "index");
                return (0, o.assertArgument)(t >= 0 && t < 2147483648, "invalid account index", "index", t), `m/44'/60'/${t}'/0/0`
            }, t.getIndexedAccountPath = function(e) {
                let t = (0, o.getNumber)(e, "index");
                return (0, o.assertArgument)(t >= 0 && t < 2147483648, "invalid account index", "index", t), `m/44'/60'/0'/0/${t}`
            }
        },
        36989: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Wallet = t.Mnemonic = t.encryptKeystoreJsonSync = t.encryptKeystoreJson = t.decryptKeystoreJson = t.decryptKeystoreJsonSync = t.isKeystoreJson = t.decryptCrowdsaleJson = t.isCrowdsaleJson = t.HDNodeVoidWallet = t.HDNodeWallet = t.getIndexedAccountPath = t.getAccountPath = t.defaultPath = t.BaseWallet = void 0;
            var n = r(67707);
            Object.defineProperty(t, "BaseWallet", {
                enumerable: !0,
                get: function() {
                    return n.BaseWallet
                }
            });
            var i = r(70347);
            Object.defineProperty(t, "defaultPath", {
                enumerable: !0,
                get: function() {
                    return i.defaultPath
                }
            }), Object.defineProperty(t, "getAccountPath", {
                enumerable: !0,
                get: function() {
                    return i.getAccountPath
                }
            }), Object.defineProperty(t, "getIndexedAccountPath", {
                enumerable: !0,
                get: function() {
                    return i.getIndexedAccountPath
                }
            }), Object.defineProperty(t, "HDNodeWallet", {
                enumerable: !0,
                get: function() {
                    return i.HDNodeWallet
                }
            }), Object.defineProperty(t, "HDNodeVoidWallet", {
                enumerable: !0,
                get: function() {
                    return i.HDNodeVoidWallet
                }
            });
            var s = r(95035);
            Object.defineProperty(t, "isCrowdsaleJson", {
                enumerable: !0,
                get: function() {
                    return s.isCrowdsaleJson
                }
            }), Object.defineProperty(t, "decryptCrowdsaleJson", {
                enumerable: !0,
                get: function() {
                    return s.decryptCrowdsaleJson
                }
            });
            var o = r(39174);
            Object.defineProperty(t, "isKeystoreJson", {
                enumerable: !0,
                get: function() {
                    return o.isKeystoreJson
                }
            }), Object.defineProperty(t, "decryptKeystoreJsonSync", {
                enumerable: !0,
                get: function() {
                    return o.decryptKeystoreJsonSync
                }
            }), Object.defineProperty(t, "decryptKeystoreJson", {
                enumerable: !0,
                get: function() {
                    return o.decryptKeystoreJson
                }
            }), Object.defineProperty(t, "encryptKeystoreJson", {
                enumerable: !0,
                get: function() {
                    return o.encryptKeystoreJson
                }
            }), Object.defineProperty(t, "encryptKeystoreJsonSync", {
                enumerable: !0,
                get: function() {
                    return o.encryptKeystoreJsonSync
                }
            });
            var a = r(16577);
            Object.defineProperty(t, "Mnemonic", {
                enumerable: !0,
                get: function() {
                    return a.Mnemonic
                }
            });
            var l = r(72998);
            Object.defineProperty(t, "Wallet", {
                enumerable: !0,
                get: function() {
                    return l.Wallet
                }
            })
        },
        95035: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decryptCrowdsaleJson = t.isCrowdsaleJson = void 0;
            let n = r(90659),
                i = r(29527),
                s = r(20021),
                o = r(94194),
                a = r(82678),
                l = r(26207);
            t.isCrowdsaleJson = function(e) {
                try {
                    let t = JSON.parse(e);
                    if (t.encseed) return !0
                } catch (e) {}
                return !1
            }, t.decryptCrowdsaleJson = function(e, t) {
                let r = JSON.parse(e),
                    u = (0, l.getPassword)(t),
                    c = (0, i.getAddress)((0, l.spelunk)(r, "ethaddr:string!")),
                    d = (0, l.looseArrayify)((0, l.spelunk)(r, "encseed:string!"));
                (0, a.assertArgument)(d && d.length % 16 == 0, "invalid encseed", "json", e);
                let h = (0, a.getBytes)((0, s.pbkdf2)(u, u, 2e3, 32, "sha256")).slice(0, 16),
                    f = d.slice(0, 16),
                    p = d.slice(16),
                    g = new n.CBC(h, f),
                    m = (0, n.pkcs7Strip)((0, a.getBytes)(g.decrypt(p))),
                    y = "";
                for (let e = 0; e < m.length; e++) y += String.fromCharCode(m[e]);
                return {
                    address: c,
                    privateKey: (0, o.id)(y)
                }
            }
        },
        39174: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encryptKeystoreJson = t.encryptKeystoreJsonSync = t.decryptKeystoreJson = t.decryptKeystoreJsonSync = t.isKeystoreJson = void 0;
            let n = r(90659),
                i = r(29527),
                s = r(20021),
                o = r(9404),
                a = r(82678),
                l = r(26207),
                u = r(20617),
                c = "m/44'/60'/0'/0/0";

            function d(e, t) {
                let r = (0, a.getBytes)(t),
                    u = (0, l.spelunk)(e, "crypto.ciphertext:data!"),
                    d = (0, a.hexlify)((0, s.keccak256)((0, a.concat)([r.slice(16, 32), u]))).substring(2);
                (0, a.assertArgument)(d === (0, l.spelunk)(e, "crypto.mac:string!").toLowerCase(), "incorrect password", "password", "[ REDACTED ]");
                let h = function(e, t, r) {
                        let i = (0, l.spelunk)(e, "crypto.cipher:string");
                        if ("aes-128-ctr" === i) {
                            let i = (0, l.spelunk)(e, "crypto.cipherparams.iv:data!"),
                                s = new n.CTR(t, i);
                            return (0, a.hexlify)(s.decrypt(r))
                        }(0, a.assert)(!1, "unsupported cipher", "UNSUPPORTED_OPERATION", {
                            operation: "decrypt"
                        })
                    }(e, r.slice(0, 16), u),
                    f = (0, o.computeAddress)(h);
                if (e.address) {
                    let t = e.address.toLowerCase();
                    t.startsWith("0x") || (t = "0x" + t), (0, a.assertArgument)((0, i.getAddress)(t) === f, "keystore address/privateKey mismatch", "address", e.address)
                }
                let p = {
                        address: f,
                        privateKey: h
                    },
                    g = (0, l.spelunk)(e, "x-ethers.version:string");
                if ("0.1" === g) {
                    let t = r.slice(32, 64),
                        i = (0, l.spelunk)(e, "x-ethers.mnemonicCiphertext:data!"),
                        s = (0, l.spelunk)(e, "x-ethers.mnemonicCounter:data!"),
                        o = new n.CTR(t, s);
                    p.mnemonic = {
                        path: (0, l.spelunk)(e, "x-ethers.path:string") || c,
                        locale: (0, l.spelunk)(e, "x-ethers.locale:string") || "en",
                        entropy: (0, a.hexlify)((0, a.getBytes)(o.decrypt(i)))
                    }
                }
                return p
            }

            function h(e) {
                let t = (0, l.spelunk)(e, "crypto.kdf:string");
                if (t && "string" == typeof t) {
                    if ("scrypt" === t.toLowerCase()) {
                        let r = (0, l.spelunk)(e, "crypto.kdfparams.salt:data!"),
                            n = (0, l.spelunk)(e, "crypto.kdfparams.n:int!"),
                            i = (0, l.spelunk)(e, "crypto.kdfparams.r:int!"),
                            s = (0, l.spelunk)(e, "crypto.kdfparams.p:int!");
                        (0, a.assertArgument)(n > 0 && (n & n - 1) == 0, "invalid kdf.N", "kdf.N", n), (0, a.assertArgument)(i > 0 && s > 0, "invalid kdf", "kdf", t);
                        let o = (0, l.spelunk)(e, "crypto.kdfparams.dklen:int!");
                        return (0, a.assertArgument)(32 === o, "invalid kdf.dklen", "kdf.dflen", o), {
                            name: "scrypt",
                            salt: r,
                            N: n,
                            r: i,
                            p: s,
                            dkLen: 64
                        }
                    }
                    if ("pbkdf2" === t.toLowerCase()) {
                        let t = (0, l.spelunk)(e, "crypto.kdfparams.salt:data!"),
                            r = (0, l.spelunk)(e, "crypto.kdfparams.prf:string!"),
                            n = r.split("-").pop();
                        (0, a.assertArgument)("sha256" === n || "sha512" === n, "invalid kdf.pdf", "kdf.pdf", r);
                        let i = (0, l.spelunk)(e, "crypto.kdfparams.c:int!"),
                            s = (0, l.spelunk)(e, "crypto.kdfparams.dklen:int!");
                        return (0, a.assertArgument)(32 === s, "invalid kdf.dklen", "kdf.dklen", s), {
                            name: "pbkdf2",
                            salt: t,
                            count: i,
                            dkLen: s,
                            algorithm: n
                        }
                    }
                }(0, a.assertArgument)(!1, "unsupported key-derivation function", "kdf", t)
            }

            function f(e) {
                return new Promise(t => {
                    setTimeout(() => {
                        t()
                    }, e)
                })
            }
            async function p(e, t, r) {
                let n = JSON.parse(e),
                    i = (0, l.getPassword)(t),
                    o = h(n);
                if ("pbkdf2" === o.name) {
                    r && (r(0), await f(0));
                    let {
                        salt: e,
                        count: t,
                        dkLen: a,
                        algorithm: l
                    } = o, u = (0, s.pbkdf2)(i, e, t, a, l);
                    return r && (r(1), await f(0)), d(n, u)
                }(0, a.assert)("scrypt" === o.name, "cannot be reached", "UNKNOWN_ERROR", {
                    params: o
                });
                let {
                    salt: u,
                    N: c,
                    r: p,
                    p: g,
                    dkLen: m
                } = o, y = await (0, s.scrypt)(i, u, c, p, g, m, r);
                return d(n, y)
            }

            function g(e) {
                let t = null != e.salt ? (0, a.getBytes)(e.salt, "options.salt") : (0, s.randomBytes)(32),
                    r = 131072,
                    n = 8,
                    i = 1;
                return e.scrypt && (e.scrypt.N && (r = e.scrypt.N), e.scrypt.r && (n = e.scrypt.r), e.scrypt.p && (i = e.scrypt.p)), (0, a.assertArgument)("number" == typeof r && r > 0 && Number.isSafeInteger(r) && (BigInt(r) & BigInt(r - 1)) === BigInt(0), "invalid scrypt N parameter", "options.N", r), (0, a.assertArgument)("number" == typeof n && n > 0 && Number.isSafeInteger(n), "invalid scrypt r parameter", "options.r", n), (0, a.assertArgument)("number" == typeof i && i > 0 && Number.isSafeInteger(i), "invalid scrypt p parameter", "options.p", i), {
                    name: "scrypt",
                    dkLen: 32,
                    salt: t,
                    N: r,
                    r: n,
                    p: i
                }
            }

            function m(e, t, r, i) {
                let o = (0, a.getBytes)(r.privateKey, "privateKey"),
                    d = null != i.iv ? (0, a.getBytes)(i.iv, "options.iv") : (0, s.randomBytes)(16);
                (0, a.assertArgument)(16 === d.length, "invalid options.iv length", "options.iv", i.iv);
                let h = null != i.uuid ? (0, a.getBytes)(i.uuid, "options.uuid") : (0, s.randomBytes)(16);
                (0, a.assertArgument)(16 === h.length, "invalid options.uuid length", "options.uuid", i.iv);
                let f = e.slice(0, 16),
                    p = e.slice(16, 32),
                    g = new n.CTR(f, d),
                    m = (0, a.getBytes)(g.encrypt(o)),
                    y = (0, s.keccak256)((0, a.concat)([p, m])),
                    b = {
                        address: r.address.substring(2).toLowerCase(),
                        id: (0, a.uuidV4)(h),
                        version: 3,
                        Crypto: {
                            cipher: "aes-128-ctr",
                            cipherparams: {
                                iv: (0, a.hexlify)(d).substring(2)
                            },
                            ciphertext: (0, a.hexlify)(m).substring(2),
                            kdf: "scrypt",
                            kdfparams: {
                                salt: (0, a.hexlify)(t.salt).substring(2),
                                n: t.N,
                                dklen: 32,
                                p: t.p,
                                r: t.r
                            },
                            mac: y.substring(2)
                        }
                    };
                if (r.mnemonic) {
                    let t = null != i.client ? i.client : `ethers/${u.version}`,
                        o = r.mnemonic.path || c,
                        d = r.mnemonic.locale || "en",
                        h = e.slice(32, 64),
                        f = (0, a.getBytes)(r.mnemonic.entropy, "account.mnemonic.entropy"),
                        p = (0, s.randomBytes)(16),
                        g = new n.CTR(h, p),
                        m = (0, a.getBytes)(g.encrypt(f)),
                        y = new Date,
                        w = y.getUTCFullYear() + "-" + (0, l.zpad)(y.getUTCMonth() + 1, 2) + "-" + (0, l.zpad)(y.getUTCDate(), 2) + "T" + (0, l.zpad)(y.getUTCHours(), 2) + "-" + (0, l.zpad)(y.getUTCMinutes(), 2) + "-" + (0, l.zpad)(y.getUTCSeconds(), 2) + ".0Z",
                        A = "UTC--" + w + "--" + b.address;
                    b["x-ethers"] = {
                        client: t,
                        gethFilename: A,
                        path: o,
                        locale: d,
                        mnemonicCounter: (0, a.hexlify)(p).substring(2),
                        mnemonicCiphertext: (0, a.hexlify)(m).substring(2),
                        version: "0.1"
                    }
                }
                return JSON.stringify(b)
            }
            async function y(e, t, r) {
                null == r && (r = {});
                let n = (0, l.getPassword)(t),
                    i = g(r),
                    o = await (0, s.scrypt)(n, i.salt, i.N, i.r, i.p, 64, r.progressCallback);
                return m((0, a.getBytes)(o), i, e, r)
            }
            t.isKeystoreJson = function(e) {
                try {
                    let t = JSON.parse(e),
                        r = null != t.version ? parseInt(t.version) : 0;
                    if (3 === r) return !0
                } catch (e) {}
                return !1
            }, t.decryptKeystoreJsonSync = function(e, t) {
                let r = JSON.parse(e),
                    n = (0, l.getPassword)(t),
                    i = h(r);
                if ("pbkdf2" === i.name) {
                    let {
                        salt: e,
                        count: t,
                        dkLen: o,
                        algorithm: a
                    } = i, l = (0, s.pbkdf2)(n, e, t, o, a);
                    return d(r, l)
                }(0, a.assert)("scrypt" === i.name, "cannot be reached", "UNKNOWN_ERROR", {
                    params: i
                });
                let {
                    salt: o,
                    N: u,
                    r: c,
                    p: f,
                    dkLen: p
                } = i, g = (0, s.scryptSync)(n, o, u, c, f, p);
                return d(r, g)
            }, t.decryptKeystoreJson = p, t.encryptKeystoreJsonSync = function(e, t, r) {
                null == r && (r = {});
                let n = (0, l.getPassword)(t),
                    i = g(r),
                    o = (0, s.scryptSync)(n, i.salt, i.N, i.r, i.p, 64);
                return m((0, a.getBytes)(o), i, e, r)
            }, t.encryptKeystoreJson = y
        },
        16577: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Mnemonic = void 0;
            let n = r(20021),
                i = r(82678),
                s = r(37542);

            function o(e) {
                return (1 << e) - 1 << 8 - e & 255
            }

            function a(e, t) {
                (0, i.assertNormalize)("NFKD"), null == t && (t = s.LangEn.wordlist());
                let r = t.split(e);
                (0, i.assertArgument)(r.length % 3 == 0 && r.length >= 12 && r.length <= 24, "invalid mnemonic length", "mnemonic", "[ REDACTED ]");
                let a = new Uint8Array(Math.ceil(11 * r.length / 8)),
                    l = 0;
                for (let e = 0; e < r.length; e++) {
                    let n = t.getWordIndex(r[e].normalize("NFKD"));
                    (0, i.assertArgument)(n >= 0, `invalid mnemonic word at index ${e}`, "mnemonic", "[ REDACTED ]");
                    for (let e = 0; e < 11; e++) n & 1 << 10 - e && (a[l >> 3] |= 1 << 7 - l % 8), l++
                }
                let u = 32 * r.length / 3,
                    c = r.length / 3,
                    d = o(c),
                    h = (0, i.getBytes)((0, n.sha256)(a.slice(0, u / 8)))[0] & d;
                return (0, i.assertArgument)(h === (a[a.length - 1] & d), "invalid mnemonic checksum", "mnemonic", "[ REDACTED ]"), (0, i.hexlify)(a.slice(0, u / 8))
            }

            function l(e, t) {
                (0, i.assertArgument)(e.length % 4 == 0 && e.length >= 16 && e.length <= 32, "invalid entropy size", "entropy", "[ REDACTED ]"), null == t && (t = s.LangEn.wordlist());
                let r = [0],
                    a = 11;
                for (let t = 0; t < e.length; t++) a > 8 ? (r[r.length - 1] <<= 8, r[r.length - 1] |= e[t], a -= 8) : (r[r.length - 1] <<= a, r[r.length - 1] |= e[t] >> 8 - a, r.push(e[t] & ((1 << 8 - a) - 1 & 255)), a += 3);
                let l = e.length / 4,
                    u = parseInt((0, n.sha256)(e).substring(2, 4), 16) & o(l);
                return r[r.length - 1] <<= l, r[r.length - 1] |= u >> 8 - l, t.join(r.map(e => t.getWord(e)))
            }
            let u = {};
            class c {
                phrase;
                password;
                wordlist;
                entropy;
                constructor(e, t, r, n, o) {
                    null == n && (n = ""), null == o && (o = s.LangEn.wordlist()), (0, i.assertPrivate)(e, u, "Mnemonic"), (0, i.defineProperties)(this, {
                        phrase: r,
                        password: n,
                        wordlist: o,
                        entropy: t
                    })
                }
                computeSeed() {
                    let e = (0, i.toUtf8Bytes)("mnemonic" + this.password, "NFKD");
                    return (0, n.pbkdf2)((0, i.toUtf8Bytes)(this.phrase, "NFKD"), e, 2048, 64, "sha512")
                }
                static fromPhrase(e, t, r) {
                    let n = a(e, r);
                    return e = l((0, i.getBytes)(n), r), new c(u, n, e, t, r)
                }
                static fromEntropy(e, t, r) {
                    let n = (0, i.getBytes)(e, "entropy"),
                        s = l(n, r);
                    return new c(u, (0, i.hexlify)(n), s, t, r)
                }
                static entropyToPhrase(e, t) {
                    let r = (0, i.getBytes)(e, "entropy");
                    return l(r, t)
                }
                static phraseToEntropy(e, t) {
                    return a(e, t)
                }
                static isValidMnemonic(e, t) {
                    try {
                        return a(e, t), !0
                    } catch (e) {}
                    return !1
                }
            }
            t.Mnemonic = c
        },
        26207: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.spelunk = t.getPassword = t.zpad = t.looseArrayify = void 0;
            let n = r(82678);

            function i(e) {
                return "string" != typeof e || e.startsWith("0x") || (e = "0x" + e), (0, n.getBytesCopy)(e)
            }
            t.looseArrayify = i, t.zpad = function(e, t) {
                for (e = String(e); e.length < t;) e = "0" + e;
                return e
            }, t.getPassword = function(e) {
                return "string" == typeof e ? (0, n.toUtf8Bytes)(e, "NFKC") : (0, n.getBytesCopy)(e)
            }, t.spelunk = function(e, t) {
                let r = t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);
                (0, n.assertArgument)(null != r, "invalid path", "path", t);
                let s = r[1],
                    o = r[3],
                    a = "!" === r[4],
                    l = e;
                for (let e of s.toLowerCase().split(".")) {
                    if (Array.isArray(l)) {
                        if (!e.match(/^[0-9]+$/)) break;
                        l = l[parseInt(e)]
                    } else if ("object" == typeof l) {
                        let t = null;
                        for (let r in l)
                            if (r.toLowerCase() === e) {
                                t = l[r];
                                break
                            }
                        l = t
                    } else l = null;
                    if (null == l) break
                }
                if ((0, n.assertArgument)(!a || null != l, "missing required value", "path", s), o && null != l) {
                    if ("int" === o) {
                        if ("string" == typeof l && l.match(/^-?[0-9]+$/)) return parseInt(l);
                        if (Number.isSafeInteger(l)) return l
                    }
                    if ("number" === o && "string" == typeof l && l.match(/^-?[0-9.]*$/)) return parseFloat(l);
                    if ("data" === o && "string" == typeof l) return i(l);
                    if ("array" === o && Array.isArray(l) || o === typeof l) return l;
                    (0, n.assertArgument)(!1, `wrong type found for ${o} `, "path", s)
                }
                return l
            }
        },
        72998: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Wallet = void 0;
            let n = r(20021),
                i = r(82678),
                s = r(67707),
                o = r(70347),
                a = r(95035),
                l = r(39174),
                u = r(16577);

            function c(e) {
                return new Promise(t => {
                    setTimeout(() => {
                        t()
                    }, e)
                })
            }
            class d extends s.BaseWallet {
                constructor(e, t) {
                    "string" != typeof e || e.startsWith("0x") || (e = "0x" + e), super("string" == typeof e ? new n.SigningKey(e) : e, t)
                }
                connect(e) {
                    return new d(this.signingKey, e)
                }
                async encrypt(e, t) {
                    let r = {
                        address: this.address,
                        privateKey: this.privateKey
                    };
                    return await (0, l.encryptKeystoreJson)(r, e, {
                        progressCallback: t
                    })
                }
                encryptSync(e) {
                    let t = {
                        address: this.address,
                        privateKey: this.privateKey
                    };
                    return (0, l.encryptKeystoreJsonSync)(t, e)
                }
                static# tv(e) {
                    if ((0, i.assertArgument)(e, "invalid JSON wallet", "json", "[ REDACTED ]"), "mnemonic" in e && e.mnemonic && "en" === e.mnemonic.locale) {
                        let t = u.Mnemonic.fromEntropy(e.mnemonic.entropy),
                            r = o.HDNodeWallet.fromMnemonic(t, e.mnemonic.path);
                        if (r.address === e.address && r.privateKey === e.privateKey) return r;
                        console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key")
                    }
                    let t = new d(e.privateKey);
                    return (0, i.assertArgument)(t.address === e.address, "address/privateKey mismatch", "json", "[ REDACTED ]"), t
                }
                static async fromEncryptedJson(e, t, r) {
                    let n = null;
                    return (0, l.isKeystoreJson)(e) ? n = await (0, l.decryptKeystoreJson)(e, t, r) : (0, a.isCrowdsaleJson)(e) && (r && (r(0), await c(0)), n = (0, a.decryptCrowdsaleJson)(e, t), r && (r(1), await c(0))), d.#tv(n)
                }
                static fromEncryptedJsonSync(e, t) {
                    let r = null;
                    return (0, l.isKeystoreJson)(e) ? r = (0, l.decryptKeystoreJsonSync)(e, t) : (0, a.isCrowdsaleJson)(e) ? r = (0, a.decryptCrowdsaleJson)(e, t) : (0, i.assertArgument)(!1, "invalid JSON wallet", "json", "[ REDACTED ]"), d.#tv(r)
                }
                static createRandom(e) {
                    let t = o.HDNodeWallet.createRandom();
                    return e ? t.connect(e) : t
                }
                static fromPhrase(e, t) {
                    let r = o.HDNodeWallet.fromPhrase(e);
                    return t ? r.connect(t) : r
                }
            }
            t.Wallet = d
        },
        80643: function(e, t) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeBits = void 0, t.decodeBits = function(e, t) {
                let r = (1 << e) - 1,
                    n = [],
                    i = 0,
                    s = 0,
                    o = 0;
                for (let a = 0; a < t.length; a++)
                    for (i = i << 6 | ")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".indexOf(t[a]), s += 6; s >= e;) {
                        let t = i >> s - e;
                        i &= (1 << s - e) - 1, s -= e, 0 === t ? o += r : (n.push(t + o), o = 0)
                    }
                return n
            }
        },
        98723: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeOwl = t.decode = void 0;
            let n = r(82678),
                i = " !#$%&'()*+,-./<=>?@[]^_`{|}~",
                s = /^[a-z]*$/i;

            function o(e, t) {
                let r = 97;
                return e.reduce((e, n) => (n === t ? r++ : n.match(s) ? e.push(String.fromCharCode(r) + n) : (r = 97, e.push(n)), e), [])
            }

            function a(e, t) {
                for (let r = i.length - 1; r >= 0; r--) e = e.split(i[r]).join(t.substring(2 * r, 2 * r + 2));
                let r = [],
                    n = e.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (e, t, n, i) => {
                        if (n)
                            for (let e = parseInt(n); e >= 0; e--) r.push(";");
                        else r.push(t.toLowerCase());
                        return ""
                    });
                if (n) throw Error(`leftovers: ${JSON.stringify(n)}`);
                return o(o(r, ";"), ":")
            }
            t.decode = a, t.decodeOwl = function(e) {
                return (0, n.assertArgument)("0" === e[0], "unsupported auwl data", "data", e), a(e.substring(1 + 2 * i.length), e.substring(1, 1 + 2 * i.length))
            }
        },
        5490: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeOwlA = void 0;
            let n = r(82678),
                i = r(80643),
                s = r(98723);
            t.decodeOwlA = function(e, t) {
                let r = (0, s.decodeOwl)(e).join(",");
                return t.split(/,/g).forEach(e => {
                    let s = e.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);
                    (0, n.assertArgument)(null !== s, "internal error parsing accents", "accents", t);
                    let o = 0,
                        a = (0, i.decodeBits)(parseInt(s[3]), s[4]),
                        l = parseInt(s[2]),
                        u = RegExp(`([${s[1]}])`, "g");
                    r = r.replace(u, (e, t) => {
                        let r = --a[o];
                        return 0 === r && (t = String.fromCharCode(t.charCodeAt(0), l), o++), t
                    })
                }), r.split(",")
            }
        },
        96773: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wordlists = t.WordlistOwlA = t.WordlistOwl = t.LangEn = t.Wordlist = void 0;
            var n = r(96379);
            Object.defineProperty(t, "Wordlist", {
                enumerable: !0,
                get: function() {
                    return n.Wordlist
                }
            });
            var i = r(37542);
            Object.defineProperty(t, "LangEn", {
                enumerable: !0,
                get: function() {
                    return i.LangEn
                }
            });
            var s = r(55466);
            Object.defineProperty(t, "WordlistOwl", {
                enumerable: !0,
                get: function() {
                    return s.WordlistOwl
                }
            });
            var o = r(84581);
            Object.defineProperty(t, "WordlistOwlA", {
                enumerable: !0,
                get: function() {
                    return o.WordlistOwlA
                }
            });
            var a = r(86432);
            Object.defineProperty(t, "wordlists", {
                enumerable: !0,
                get: function() {
                    return a.wordlists
                }
            })
        },
        37542: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.LangEn = void 0;
            let n = r(55466),
                i = null;
            class s extends n.WordlistOwl {
                constructor() {
                    super("en", "0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO", "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60")
                }
                static wordlist() {
                    return null == i && (i = new s), i
                }
            }
            t.LangEn = s
        },
        55466: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WordlistOwl = void 0;
            let n = r(94194),
                i = r(82678),
                s = r(98723),
                o = r(96379);
            class a extends o.Wordlist {#
                r;#
                tE;
                constructor(e, t, r) {
                    super(e), this.#r = t, this.#tE = r, this.#tP = null
                }
                get _data() {
                    return this.#r
                }
                _decodeWords() {
                    return (0, s.decodeOwl)(this.#r)
                }#
                tP;#
                tS() {
                    if (null == this.#tP) {
                        let e = this._decodeWords(),
                            t = (0, n.id)(e.join("\n") + "\n");
                        if (t !== this.#tE) throw Error(`BIP39 Wordlist for ${this.locale} FAILED`);
                        this.#tP = e
                    }
                    return this.#tP
                }
                getWord(e) {
                    let t = this.#tS();
                    return (0, i.assertArgument)(e >= 0 && e < t.length, `invalid word index: ${e}`, "index", e), t[e]
                }
                getWordIndex(e) {
                    return this.#tS().indexOf(e)
                }
            }
            t.WordlistOwl = a
        },
        84581: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WordlistOwlA = void 0;
            let n = r(55466),
                i = r(5490);
            class s extends n.WordlistOwl {#
                tO;
                constructor(e, t, r, n) {
                    super(e, t, n), this.#tO = r
                }
                get _accent() {
                    return this.#tO
                }
                _decodeWords() {
                    return (0, i.decodeOwlA)(this._data, this._accent)
                }
            }
            t.WordlistOwlA = s
        },
        96379: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Wordlist = void 0;
            let n = r(82678);
            t.Wordlist = class {
                locale;
                constructor(e) {
                    (0, n.defineProperties)(this, {
                        locale: e
                    })
                }
                split(e) {
                    return e.toLowerCase().split(/\s+/g)
                }
                join(e) {
                    return e.join(" ")
                }
            }
        },
        86432: function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wordlists = void 0;
            let n = r(37542);
            t.wordlists = {
                en: n.LangEn.wordlist()
            }
        },
        33450: function(e, t, r) {
            "use strict";
            r.d(t, {
                v: function() {
                    return L
                }
            });
            var n, i, s, o = r(27024),
                a = r(66900),
                l = r(52239),
                u = r(8192),
                c = r(98735),
                d = r(3003),
                h = r(76518),
                f = r(61049),
                p = r(85914),
                g = r(42336),
                m = r(81111),
                y = r(87773),
                b = r(19140),
                w = r(80817),
                A = r(32935),
                v = r(95569),
                E = r(29955),
                P = r(87312),
                S = r(66731),
                O = r(71808),
                k = ((n = k || {})[n.Open = 0] = "Open", n[n.Closed = 1] = "Closed", n),
                C = ((i = C || {})[i.Pointer = 0] = "Pointer", i[i.Other = 1] = "Other", i),
                x = ((s = x || {})[s.OpenMenu = 0] = "OpenMenu", s[s.CloseMenu = 1] = "CloseMenu", s[s.GoToItem = 2] = "GoToItem", s[s.Search = 3] = "Search", s[s.ClearSearch = 4] = "ClearSearch", s[s.RegisterItem = 5] = "RegisterItem", s[s.UnregisterItem = 6] = "UnregisterItem", s);

            function T(e, t = e => e) {
                let r = null !== e.activeItemIndex ? e.items[e.activeItemIndex] : null,
                    n = (0, y.z2)(t(e.items.slice()), e => e.dataRef.current.domRef.current),
                    i = r ? n.indexOf(r) : null;
                return -1 === i && (i = null), {
                    items: n,
                    activeItemIndex: i
                }
            }
            let N = {
                    1: e => 1 === e.menuState ? e : { ...e,
                        activeItemIndex: null,
                        menuState: 1
                    },
                    0: e => 0 === e.menuState ? e : { ...e,
                        __demoMode: !1,
                        menuState: 0
                    },
                    2: (e, t) => {
                        var r;
                        let n = T(e),
                            i = (0, g.d)(t, {
                                resolveItems: () => n.items,
                                resolveActiveIndex: () => n.activeItemIndex,
                                resolveId: e => e.id,
                                resolveDisabled: e => e.dataRef.current.disabled
                            });
                        return { ...e,
                            ...n,
                            searchQuery: "",
                            activeItemIndex: i,
                            activationTrigger: null != (r = t.trigger) ? r : 1
                        }
                    },
                    3: (e, t) => {
                        let r = "" !== e.searchQuery ? 0 : 1,
                            n = e.searchQuery + t.value.toLowerCase(),
                            i = (null !== e.activeItemIndex ? e.items.slice(e.activeItemIndex + r).concat(e.items.slice(0, e.activeItemIndex + r)) : e.items).find(e => {
                                var t;
                                return (null == (t = e.dataRef.current.textValue) ? void 0 : t.startsWith(n)) && !e.dataRef.current.disabled
                            }),
                            s = i ? e.items.indexOf(i) : -1;
                        return -1 === s || s === e.activeItemIndex ? { ...e,
                            searchQuery: n
                        } : { ...e,
                            searchQuery: n,
                            activeItemIndex: s,
                            activationTrigger: 1
                        }
                    },
                    4: e => "" === e.searchQuery ? e : { ...e,
                        searchQuery: "",
                        searchActiveItemIndex: null
                    },
                    5: (e, t) => {
                        let r = T(e, e => [...e, {
                            id: t.id,
                            dataRef: t.dataRef
                        }]);
                        return { ...e,
                            ...r
                        }
                    },
                    6: (e, t) => {
                        let r = T(e, e => {
                            let r = e.findIndex(e => e.id === t.id);
                            return -1 !== r && e.splice(r, 1), e
                        });
                        return { ...e,
                            ...r,
                            activationTrigger: 1
                        }
                    }
                },
                _ = (0, o.createContext)(null);

            function B(e) {
                let t = (0, o.useContext)(_);
                if (null === t) {
                    let t = Error(`<${e} /> is missing a parent <Menu /> component.`);
                    throw Error.captureStackTrace && Error.captureStackTrace(t, B), t
                }
                return t
            }

            function D(e, t) {
                return (0, a.E)(t.type, N, e, t)
            }
            _.displayName = "MenuContext";
            let I = o.Fragment,
                R = l.AN.RenderStrategy | l.AN.Static,
                M = o.Fragment,
                L = Object.assign((0, l.yV)(function(e, t) {
                    let {
                        __demoMode: r = !1,
                        ...n
                    } = e, i = (0, o.useReducer)(D, {
                        __demoMode: r,
                        menuState: r ? 0 : 1,
                        buttonRef: (0, o.createRef)(),
                        itemsRef: (0, o.createRef)(),
                        items: [],
                        searchQuery: "",
                        activeItemIndex: null,
                        activationTrigger: 1
                    }), [{
                        menuState: s,
                        itemsRef: u,
                        buttonRef: c
                    }, d] = i, f = (0, h.T)(t);
                    (0, b.O)([c, u], (e, t) => {
                        var r;
                        d({
                            type: 1
                        }), (0, y.sP)(t, y.tJ.Loose) || (e.preventDefault(), null == (r = c.current) || r.focus())
                    }, 0 === s);
                    let p = (0, P.z)(() => {
                            d({
                                type: 1
                            })
                        }),
                        g = (0, o.useMemo)(() => ({
                            open: 0 === s,
                            close: p
                        }), [s, p]);
                    return o.createElement(_.Provider, {
                        value: i
                    }, o.createElement(A.up, {
                        value: (0, a.E)(s, {
                            0: A.ZM.Open,
                            1: A.ZM.Closed
                        })
                    }, (0, l.sY)({
                        ourProps: {
                            ref: f
                        },
                        theirProps: n,
                        slot: g,
                        defaultTag: I,
                        name: "Menu"
                    })))
                }), {
                    Button: (0, l.yV)(function(e, t) {
                        var r;
                        let n = (0, f.M)(),
                            {
                                id: i = `headlessui-menu-button-${n}`,
                                ...s
                            } = e,
                            [a, u] = B("Menu.Button"),
                            d = (0, h.T)(a.buttonRef, t),
                            y = (0, c.G)(),
                            b = (0, P.z)(e => {
                                switch (e.key) {
                                    case p.R.Space:
                                    case p.R.Enter:
                                    case p.R.ArrowDown:
                                        e.preventDefault(), e.stopPropagation(), u({
                                            type: 0
                                        }), y.nextFrame(() => u({
                                            type: 2,
                                            focus: g.T.First
                                        }));
                                        break;
                                    case p.R.ArrowUp:
                                        e.preventDefault(), e.stopPropagation(), u({
                                            type: 0
                                        }), y.nextFrame(() => u({
                                            type: 2,
                                            focus: g.T.Last
                                        }))
                                }
                            }),
                            w = (0, P.z)(e => {
                                e.key === p.R.Space && e.preventDefault()
                            }),
                            A = (0, P.z)(t => {
                                if ((0, m.P)(t.currentTarget)) return t.preventDefault();
                                e.disabled || (0 === a.menuState ? (u({
                                    type: 1
                                }), y.nextFrame(() => {
                                    var e;
                                    return null == (e = a.buttonRef.current) ? void 0 : e.focus({
                                        preventScroll: !0
                                    })
                                })) : (t.preventDefault(), u({
                                    type: 0
                                })))
                            }),
                            E = (0, o.useMemo)(() => ({
                                open: 0 === a.menuState
                            }), [a]),
                            S = {
                                ref: d,
                                id: i,
                                type: (0, v.f)(e, a.buttonRef),
                                "aria-haspopup": "menu",
                                "aria-controls": null == (r = a.itemsRef.current) ? void 0 : r.id,
                                "aria-expanded": 0 === a.menuState,
                                onKeyDown: b,
                                onKeyUp: w,
                                onClick: A
                            };
                        return (0, l.sY)({
                            ourProps: S,
                            theirProps: s,
                            slot: E,
                            defaultTag: "button",
                            name: "Menu.Button"
                        })
                    }),
                    Items: (0, l.yV)(function(e, t) {
                        var r, n;
                        let i = (0, f.M)(),
                            {
                                id: s = `headlessui-menu-items-${i}`,
                                ...a
                            } = e,
                            [m, b] = B("Menu.Items"),
                            v = (0, h.T)(m.itemsRef, t),
                            S = (0, E.i)(m.itemsRef),
                            O = (0, c.G)(),
                            k = (0, A.oJ)(),
                            C = null !== k ? (k & A.ZM.Open) === A.ZM.Open : 0 === m.menuState;
                        (0, o.useEffect)(() => {
                            let e = m.itemsRef.current;
                            e && 0 === m.menuState && e !== (null == S ? void 0 : S.activeElement) && e.focus({
                                preventScroll: !0
                            })
                        }, [m.menuState, m.itemsRef, S]),
                        function({
                            container: e,
                            accept: t,
                            walk: r,
                            enabled: n = !0
                        }) {
                            let i = (0, o.useRef)(t),
                                s = (0, o.useRef)(r);
                            (0, o.useEffect)(() => {
                                i.current = t, s.current = r
                            }, [t, r]), (0, d.e)(() => {
                                if (!e || !n) return;
                                let t = (0, w.r)(e);
                                if (!t) return;
                                let r = i.current,
                                    o = s.current,
                                    a = Object.assign(e => r(e), {
                                        acceptNode: r
                                    }),
                                    l = t.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, a, !1);
                                for (; l.nextNode();) o(l.currentNode)
                            }, [e, n, i, s])
                        }({
                            container: m.itemsRef.current,
                            enabled: 0 === m.menuState,
                            accept: e => "menuitem" === e.getAttribute("role") ? NodeFilter.FILTER_REJECT : e.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT,
                            walk(e) {
                                e.setAttribute("role", "none")
                            }
                        });
                        let x = (0, P.z)(e => {
                                var t, r;
                                switch (O.dispose(), e.key) {
                                    case p.R.Space:
                                        if ("" !== m.searchQuery) return e.preventDefault(), e.stopPropagation(), b({
                                            type: 3,
                                            value: e.key
                                        });
                                    case p.R.Enter:
                                        if (e.preventDefault(), e.stopPropagation(), b({
                                                type: 1
                                            }), null !== m.activeItemIndex) {
                                            let {
                                                dataRef: e
                                            } = m.items[m.activeItemIndex];
                                            null == (r = null == (t = e.current) ? void 0 : t.domRef.current) || r.click()
                                        }(0, y.wI)(m.buttonRef.current);
                                        break;
                                    case p.R.ArrowDown:
                                        return e.preventDefault(), e.stopPropagation(), b({
                                            type: 2,
                                            focus: g.T.Next
                                        });
                                    case p.R.ArrowUp:
                                        return e.preventDefault(), e.stopPropagation(), b({
                                            type: 2,
                                            focus: g.T.Previous
                                        });
                                    case p.R.Home:
                                    case p.R.PageUp:
                                        return e.preventDefault(), e.stopPropagation(), b({
                                            type: 2,
                                            focus: g.T.First
                                        });
                                    case p.R.End:
                                    case p.R.PageDown:
                                        return e.preventDefault(), e.stopPropagation(), b({
                                            type: 2,
                                            focus: g.T.Last
                                        });
                                    case p.R.Escape:
                                        e.preventDefault(), e.stopPropagation(), b({
                                            type: 1
                                        }), (0, u.k)().nextFrame(() => {
                                            var e;
                                            return null == (e = m.buttonRef.current) ? void 0 : e.focus({
                                                preventScroll: !0
                                            })
                                        });
                                        break;
                                    case p.R.Tab:
                                        e.preventDefault(), e.stopPropagation(), b({
                                            type: 1
                                        }), (0, u.k)().nextFrame(() => {
                                            (0, y.EO)(m.buttonRef.current, e.shiftKey ? y.TO.Previous : y.TO.Next)
                                        });
                                        break;
                                    default:
                                        1 === e.key.length && (b({
                                            type: 3,
                                            value: e.key
                                        }), O.setTimeout(() => b({
                                            type: 4
                                        }), 350))
                                }
                            }),
                            T = (0, P.z)(e => {
                                e.key === p.R.Space && e.preventDefault()
                            }),
                            N = (0, o.useMemo)(() => ({
                                open: 0 === m.menuState
                            }), [m]),
                            _ = {
                                "aria-activedescendant": null === m.activeItemIndex || null == (r = m.items[m.activeItemIndex]) ? void 0 : r.id,
                                "aria-labelledby": null == (n = m.buttonRef.current) ? void 0 : n.id,
                                id: s,
                                onKeyDown: x,
                                onKeyUp: T,
                                role: "menu",
                                tabIndex: 0,
                                ref: v
                            };
                        return (0, l.sY)({
                            ourProps: _,
                            theirProps: a,
                            slot: N,
                            defaultTag: "div",
                            features: R,
                            visible: C,
                            name: "Menu.Items"
                        })
                    }),
                    Item: (0, l.yV)(function(e, t) {
                        let r = (0, f.M)(),
                            {
                                id: n = `headlessui-menu-item-${r}`,
                                disabled: i = !1,
                                ...s
                            } = e,
                            [a, c] = B("Menu.Item"),
                            p = null !== a.activeItemIndex && a.items[a.activeItemIndex].id === n,
                            m = (0, o.useRef)(null),
                            b = (0, h.T)(t, m);
                        (0, d.e)(() => {
                            if (a.__demoMode || 0 !== a.menuState || !p || 0 === a.activationTrigger) return;
                            let e = (0, u.k)();
                            return e.requestAnimationFrame(() => {
                                var e, t;
                                null == (t = null == (e = m.current) ? void 0 : e.scrollIntoView) || t.call(e, {
                                    block: "nearest"
                                })
                            }), e.dispose
                        }, [a.__demoMode, m, p, a.menuState, a.activationTrigger, a.activeItemIndex]);
                        let w = (0, O.x)(m),
                            A = (0, o.useRef)({
                                disabled: i,
                                domRef: m,
                                get textValue() {
                                    return w()
                                }
                            });
                        (0, d.e)(() => {
                            A.current.disabled = i
                        }, [A, i]), (0, d.e)(() => (c({
                            type: 5,
                            id: n,
                            dataRef: A
                        }), () => c({
                            type: 6,
                            id: n
                        })), [A, n]);
                        let v = (0, P.z)(() => {
                                c({
                                    type: 1
                                })
                            }),
                            E = (0, P.z)(e => {
                                if (i) return e.preventDefault();
                                c({
                                    type: 1
                                }), (0, y.wI)(a.buttonRef.current)
                            }),
                            k = (0, P.z)(() => {
                                if (i) return c({
                                    type: 2,
                                    focus: g.T.Nothing
                                });
                                c({
                                    type: 2,
                                    focus: g.T.Specific,
                                    id: n
                                })
                            }),
                            C = (0, S.g)(),
                            x = (0, P.z)(e => C.update(e)),
                            T = (0, P.z)(e => {
                                C.wasMoved(e) && (i || p || c({
                                    type: 2,
                                    focus: g.T.Specific,
                                    id: n,
                                    trigger: 0
                                }))
                            }),
                            N = (0, P.z)(e => {
                                C.wasMoved(e) && (i || p && c({
                                    type: 2,
                                    focus: g.T.Nothing
                                }))
                            }),
                            _ = (0, o.useMemo)(() => ({
                                active: p,
                                disabled: i,
                                close: v
                            }), [p, i, v]);
                        return (0, l.sY)({
                            ourProps: {
                                id: n,
                                ref: b,
                                role: "menuitem",
                                tabIndex: !0 === i ? void 0 : -1,
                                "aria-disabled": !0 === i || void 0,
                                disabled: void 0,
                                onClick: E,
                                onFocus: k,
                                onPointerEnter: x,
                                onMouseEnter: x,
                                onPointerMove: T,
                                onMouseMove: T,
                                onPointerLeave: N,
                                onMouseLeave: N
                            },
                            theirProps: s,
                            slot: _,
                            defaultTag: M,
                            name: "Menu.Item"
                        })
                    })
                })
        },
        12373: function(e, t, r) {
            "use strict";
            r.d(t, {
                W: function() {
                    return c
                }
            });
            var n = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                i = {
                    rounded: `SFRounded, ui-rounded, "SF Pro Rounded", ${n}`,
                    system: n
                },
                s = {
                    large: {
                        actionButton: "9999px",
                        connectButton: "12px",
                        modal: "24px",
                        modalMobile: "28px"
                    },
                    medium: {
                        actionButton: "10px",
                        connectButton: "8px",
                        modal: "16px",
                        modalMobile: "18px"
                    },
                    none: {
                        actionButton: "0px",
                        connectButton: "0px",
                        modal: "0px",
                        modalMobile: "0px"
                    },
                    small: {
                        actionButton: "4px",
                        connectButton: "4px",
                        modal: "8px",
                        modalMobile: "8px"
                    }
                },
                o = {
                    large: {
                        modalOverlay: "blur(20px)"
                    },
                    none: {
                        modalOverlay: "blur(0px)"
                    },
                    small: {
                        modalOverlay: "blur(4px)"
                    }
                },
                a = ({
                    borderRadius: e = "large",
                    fontStack: t = "rounded",
                    overlayBlur: r = "none"
                }) => ({
                    blurs: {
                        modalOverlay: o[r].modalOverlay
                    },
                    fonts: {
                        body: i[t]
                    },
                    radii: {
                        actionButton: s[e].actionButton,
                        connectButton: s[e].connectButton,
                        menuButton: s[e].connectButton,
                        modal: s[e].modal,
                        modalMobile: s[e].modalMobile
                    }
                }),
                l = {
                    blue: {
                        accentColor: "#0E76FD",
                        accentColorForeground: "#FFF"
                    },
                    green: {
                        accentColor: "#1DB847",
                        accentColorForeground: "#FFF"
                    },
                    orange: {
                        accentColor: "#FF801F",
                        accentColorForeground: "#FFF"
                    },
                    pink: {
                        accentColor: "#FF5CA0",
                        accentColorForeground: "#FFF"
                    },
                    purple: {
                        accentColor: "#5F5AFA",
                        accentColorForeground: "#FFF"
                    },
                    red: {
                        accentColor: "#FA423C",
                        accentColorForeground: "#FFF"
                    }
                },
                u = l.blue,
                c = ({
                    accentColor: e = u.accentColor,
                    accentColorForeground: t = u.accentColorForeground,
                    ...r
                } = {}) => ({ ...a(r),
                    colors: {
                        accentColor: e,
                        accentColorForeground: t,
                        actionButtonBorder: "rgba(0, 0, 0, 0.04)",
                        actionButtonBorderMobile: "rgba(0, 0, 0, 0.06)",
                        actionButtonSecondaryBackground: "rgba(0, 0, 0, 0.06)",
                        closeButton: "rgba(60, 66, 66, 0.8)",
                        closeButtonBackground: "rgba(0, 0, 0, 0.06)",
                        connectButtonBackground: "#FFF",
                        connectButtonBackgroundError: "#FF494A",
                        connectButtonInnerBackground: "linear-gradient(0deg, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.06))",
                        connectButtonText: "#25292E",
                        connectButtonTextError: "#FFF",
                        connectionIndicator: "#30E000",
                        downloadBottomCardBackground: "linear-gradient(126deg, rgba(255, 255, 255, 0) 9.49%, rgba(171, 171, 171, 0.04) 71.04%), #FFFFFF",
                        downloadTopCardBackground: "linear-gradient(126deg, rgba(171, 171, 171, 0.2) 9.49%, rgba(255, 255, 255, 0) 71.04%), #FFFFFF",
                        error: "#FF494A",
                        generalBorder: "rgba(0, 0, 0, 0.06)",
                        generalBorderDim: "rgba(0, 0, 0, 0.03)",
                        menuItemBackground: "rgba(60, 66, 66, 0.1)",
                        modalBackdrop: "rgba(0, 0, 0, 0.3)",
                        modalBackground: "#FFF",
                        modalBorder: "transparent",
                        modalText: "#25292E",
                        modalTextDim: "rgba(60, 66, 66, 0.3)",
                        modalTextSecondary: "rgba(60, 66, 66, 0.6)",
                        profileAction: "#FFF",
                        profileActionHover: "rgba(255, 255, 255, 0.5)",
                        profileForeground: "rgba(60, 66, 66, 0.06)",
                        selectedOptionBorder: "rgba(60, 66, 66, 0.1)",
                        standby: "#FFD641"
                    },
                    shadows: {
                        connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                        dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                        profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                        selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                        selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.12)",
                        walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)"
                    }
                });
            c.accentColors = l
        },
        11287: function(e, t, r) {
            "use strict";
            r.d(t, {
                a3: function() {
                    return s
                }
            });
            var n = r(94213),
                i = r(3354);
            r(27024);
            var s = e => () => {
                let t = -1,
                    r = [],
                    s = [],
                    o = [],
                    a = [];
                e.forEach(({
                    groupName: e,
                    wallets: r
                }, i) => {
                    r.forEach(r => {
                        if (t++, (null == r ? void 0 : r.iconAccent) && !(0, n.A7)(null == r ? void 0 : r.iconAccent)) throw Error(`Property \`iconAccent\` is not a hex value for wallet: ${r.name}`);
                        let a = { ...r,
                            groupIndex: i,
                            groupName: e,
                            index: t
                        };
                        "function" == typeof r.hidden ? o.push(a) : s.push(a)
                    })
                });
                let l = [...s, ...o];
                return l.forEach(({
                    createConnector: e,
                    groupIndex: t,
                    groupName: s,
                    hidden: o,
                    index: l,
                    ...u
                }) => {
                    let c;
                    if ("function" == typeof o) {
                        let e = o({
                            wallets: [...a.map(({
                                connector: e,
                                id: t,
                                installed: r,
                                name: n
                            }) => ({
                                connector: e,
                                id: t,
                                installed: r,
                                name: n
                            }))]
                        });
                        if (e) return
                    }
                    let {
                        connector: d,
                        ...h
                    } = Object.fromEntries(Object.entries(e()).filter(([e, t]) => void 0 !== t));
                    if ("walletConnect" === u.id && h.qrCode && !(0, n.tq)()) {
                        let {
                            chains: e,
                            options: t
                        } = d;
                        c = new i.z({
                            chains: e,
                            options: { ...t,
                                showQrModal: !0
                            }
                        }), r.push(c)
                    }
                    let f = {
                        connector: d,
                        groupIndex: t,
                        groupName: s,
                        index: l,
                        walletConnectModalConnector: c,
                        ...u,
                        ...h
                    };
                    a.push(f), r.includes(d) || (r.push(d), d._wallets = []), d._wallets.push(f)
                }), r
            };
            n.xZ, n.Bg, n.VQ, n.UG
        },
        48865: function(e, t, r) {
            "use strict";
            r.d(t, {
                D: function() {
                    return s
                }
            });
            var n = r(11823),
                i = r(85317),
                s = ({
                    chains: e,
                    options: t,
                    projectId: s,
                    version: o = "2"
                }) => ({
                    id: "walletConnect",
                    name: "WalletConnect",
                    iconUrl: async () => (await r.e(4745).then(r.bind(r, 64745))).default,
                    iconBackground: "#3b99fc",
                    createConnector: () => {
                        let r = (0, n.gn)(),
                            a = "1" === o ? (0, i.d)({
                                version: "1",
                                chains: e,
                                options: {
                                    qrcode: r,
                                    ...t
                                }
                            }) : (0, i.d)({
                                version: "2",
                                chains: e,
                                projectId: s,
                                options: {
                                    showQrModal: r,
                                    ...t
                                }
                            }),
                            l = async () => (0, i.J)(a, o);
                        return {
                            connector: a,
                            ...r ? {} : {
                                mobile: {
                                    getUri: l
                                },
                                qrCode: {
                                    getUri: l
                                }
                            }
                        }
                    }
                })
        },
        2183: function(e, t, r) {
            "use strict";
            r.d(t, {
                X: function() {
                    return o
                }
            });
            var n = r(11823),
                i = r(85317),
                s = r(42104),
                o = ({
                    chains: e,
                    projectId: t,
                    walletConnectOptions: o,
                    walletConnectVersion: a = "2",
                    ...l
                }) => {
                    let u = "undefined" != typeof window && void 0 !== window.bitkeep && void 0 !== window.bitkeep.ethereum && !0 === window.bitkeep.ethereum.isBitKeep,
                        c = !u;
                    return {
                        id: "bitget",
                        name: "Bitget Wallet",
                        iconUrl: async () => (await r.e(6009).then(r.bind(r, 46009))).default,
                        iconAccent: "#f6851a",
                        iconBackground: "#fff",
                        installed: c ? void 0 : u,
                        downloadUrls: {
                            android: "https://web3.bitget.com/en/wallet-download?type=0",
                            ios: "https://apps.apple.com/app/bitkeep/id1395301115",
                            mobile: "https://web3.bitget.com/en/wallet-download?type=2",
                            qrCode: "https://web3.bitget.com/en/wallet-download",
                            chrome: "https://chrome.google.com/webstore/detail/bitkeep-crypto-nft-wallet/jiidiaalihmmhddjgbnbgdfflelocpak",
                            browserExtension: "https://web3.bitget.com/en/wallet-download"
                        },
                        createConnector: () => {
                            let r = c ? (0, i.d)({
                                    chains: e,
                                    options: o,
                                    projectId: t,
                                    version: a
                                }) : new s._({
                                    chains: e,
                                    options: {
                                        getProvider: () => window.bitkeep.ethereum,
                                        ...l
                                    }
                                }),
                                u = async () => {
                                    let e = await (0, i.J)(r, a);
                                    return (0, n.Dt)() ? e : `bitkeep://wc?uri=${encodeURIComponent(e)}`
                                };
                            return {
                                connector: r,
                                extension: {
                                    instructions: {
                                        learnMoreUrl: "https://web3.bitget.com/en/academy",
                                        steps: [{
                                            description: "wallet_connectors.bitget.extension.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.bitget.extension.step1.title"
                                        }, {
                                            description: "wallet_connectors.bitget.extension.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.bitget.extension.step2.title"
                                        }, {
                                            description: "wallet_connectors.bitget.extension.step3.description",
                                            step: "refresh",
                                            title: "wallet_connectors.bitget.extension.step3.description"
                                        }]
                                    }
                                },
                                mobile: {
                                    getUri: c ? u : void 0
                                },
                                qrCode: c ? {
                                    getUri: async () => (0, i.J)(r, a),
                                    instructions: {
                                        learnMoreUrl: "https://web3.bitget.com/en/academy",
                                        steps: [{
                                            description: "wallet_connectors.bitget.qr_code.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.bitget.qr_code.step1.title"
                                        }, {
                                            description: "wallet_connectors.bitget.qr_code.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.bitget.qr_code.step2.title"
                                        }, {
                                            description: "wallet_connectors.bitget.qr_code.step3.description",
                                            step: "scan",
                                            title: "wallet_connectors.bitget.qr_code.step3.title"
                                        }]
                                    }
                                } : void 0
                            }
                        }
                    }
                }
        },
        52588: function(e, t, r) {
            "use strict";
            r.d(t, {
                c: function() {
                    return o
                }
            });
            var n = r(11823),
                i = r(85317),
                s = r(42104),
                o = ({
                    chains: e,
                    projectId: t,
                    walletConnectOptions: o,
                    walletConnectVersion: a = "2",
                    ...l
                }) => {
                    let u = "undefined" != typeof window && void 0 !== window.okxwallet,
                        c = !u;
                    return {
                        id: "okx",
                        name: "OKX Wallet",
                        iconUrl: async () => (await r.e(6247).then(r.bind(r, 6247))).default,
                        iconAccent: "#000",
                        iconBackground: "#000",
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=com.okinc.okex.gp",
                            ios: "https://itunes.apple.com/app/id1327268470?mt=8",
                            mobile: "https://okx.com/download",
                            qrCode: "https://okx.com/download",
                            chrome: "https://chrome.google.com/webstore/detail/okx-wallet/mcohilncbfahbmgdjkbpemcciiolgcge",
                            edge: "https://microsoftedge.microsoft.com/addons/detail/okx-wallet/pbpjkcldjiffchgbbndmhojiacbgflha",
                            firefox: "https://addons.mozilla.org/firefox/addon/okexwallet/",
                            browserExtension: "https://okx.com/download"
                        },
                        createConnector: () => {
                            let r = c ? (0, i.d)({
                                projectId: t,
                                chains: e,
                                version: a,
                                options: o
                            }) : new s._({
                                chains: e,
                                options: {
                                    getProvider: () => window.okxwallet,
                                    ...l
                                }
                            });
                            return {
                                connector: r,
                                mobile: {
                                    getUri: c ? async () => {
                                        let e = await (0, i.J)(r, a);
                                        return (0, n.Dt)() ? e : `okex://main/wc?uri=${encodeURIComponent(e)}`
                                    } : void 0
                                },
                                qrCode: c ? {
                                    getUri: async () => (0, i.J)(r, a),
                                    instructions: {
                                        learnMoreUrl: "https://okx.com/web3/",
                                        steps: [{
                                            description: "wallet_connectors.okx.qr_code.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.okx.qr_code.step1.title"
                                        }, {
                                            description: "wallet_connectors.okx.qr_code.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.okx.qr_code.step2.title"
                                        }, {
                                            description: "wallet_connectors.okx.qr_code.step3.description",
                                            step: "scan",
                                            title: "wallet_connectors.okx.qr_code.step3.title"
                                        }]
                                    }
                                } : void 0,
                                extension: {
                                    instructions: {
                                        learnMoreUrl: "https://okx.com/web3/",
                                        steps: [{
                                            description: "wallet_connectors.okx.extension.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.okx.extension.step1.title"
                                        }, {
                                            description: "wallet_connectors.okx.extension.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.okx.extension.step2.title"
                                        }, {
                                            description: "wallet_connectors.okx.extension.step3.description",
                                            step: "refresh",
                                            title: "wallet_connectors.okx.extension.step3.title"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                }
        },
        79150: function(e, t, r) {
            "use strict";
            r.d(t, {
                U: function() {
                    return i
                }
            });
            var n = r(42104),
                i = ({
                    chains: e,
                    ...t
                }) => ({
                    id: "injected",
                    name: "Browser Wallet",
                    iconUrl: async () => (await r.e(9695).then(r.bind(r, 39695))).default,
                    iconBackground: "#fff",
                    hidden: ({
                        wallets: e
                    }) => e.some(e => e.installed && e.name === e.connector.name && (e.connector instanceof n._ || "coinbase" === e.id)),
                    createConnector: () => ({
                        connector: new n._({
                            chains: e,
                            options: t
                        })
                    })
                })
        },
        58477: function(e, t, r) {
            "use strict";
            r.d(t, {
                P: function() {
                    return f
                }
            });
            var n, i = r(11823),
                s = r(85317),
                o = r(42104),
                a = r(59880),
                l = r(28832),
                u = r(15988),
                c = r(45375),
                d = class extends o._ {
                    constructor({
                        chains: e,
                        options: t
                    } = {}) {
                        let r = {
                            name: "MetaMask",
                            shimDisconnect: !0,
                            getProvider() {
                                function e(e) {
                                    let t = !!e ? .isMetaMask;
                                    if (t && (!e.isBraveWallet || e._events || e._state) && !e.isApexWallet && !e.isAvalanche && !e.isBitKeep && !e.isBlockWallet && !e.isCoin98 && !e.isFordefi && !e.isMathWallet && !e.isOkxWallet && !e.isOKExWallet && !e.isOneInchIOSWallet && !e.isOneInchAndroidWallet && !e.isOpera && !e.isPortal && !e.isRabby && !e.isDefiant && !e.isTokenPocket && !e.isTokenary && !e.isZeal && !e.isZerion) return e
                                }
                                if ("undefined" == typeof window) return;
                                let t = window.ethereum;
                                return t ? .providers ? t.providers.find(e) : e(t)
                            },
                            ...t
                        };
                        super({
                            chains: e,
                            options: r
                        }), this.id = "metaMask", this.shimDisconnectKey = `${this.id}.shimDisconnect`, (0, l.Ko)(this, n, void 0), (0, l.qx)(this, n, r.UNSTABLE_shimOnConnectSelectAccount)
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = await this.getProvider();
                            if (!t) throw new a.N;
                            t.on && (t.on("accountsChanged", this.onAccountsChanged), t.on("chainChanged", this.onChainChanged), t.on("disconnect", this.onDisconnect)), this.emit("message", {
                                type: "connecting"
                            });
                            let r = null;
                            if ((0, l.ac)(this, n) && this.options ? .shimDisconnect && !this.storage ? .getItem(this.shimDisconnectKey)) {
                                r = await this.getAccount().catch(() => null);
                                let e = !!r;
                                if (e) try {
                                    await t.request({
                                        method: "wallet_requestPermissions",
                                        params: [{
                                            eth_accounts: {}
                                        }]
                                    }), r = await this.getAccount()
                                } catch (e) {
                                    if (this.isUserRejectedRequestError(e)) throw new u.ab(e);
                                    if (e.code === new u.pT(e).code) throw e
                                }
                            }
                            if (!r) {
                                let e = await t.request({
                                    method: "eth_requestAccounts"
                                });
                                r = (0, c.K)(e[0])
                            }
                            let i = await this.getChainId(),
                                s = this.isChainUnsupported(i);
                            if (e && i !== e) {
                                let t = await this.switchChain(e);
                                i = t.id, s = this.isChainUnsupported(i)
                            }
                            return this.options ? .shimDisconnect && this.storage ? .setItem(this.shimDisconnectKey, !0), {
                                account: r,
                                chain: {
                                    id: i,
                                    unsupported: s
                                },
                                provider: t
                            }
                        } catch (e) {
                            if (this.isUserRejectedRequestError(e)) throw new u.ab(e);
                            if (-32002 === e.code) throw new u.pT(e);
                            throw e
                        }
                    }
                };

            function h(e) {
                return !!(null == e ? void 0 : e.isMetaMask) && (!e.isBraveWallet || !!e._events || !!e._state) && !e.isApexWallet && !e.isAvalanche && !e.isBackpack && !e.isBifrost && !e.isBitKeep && !e.isBitski && !e.isBlockWallet && !e.isCoinbaseWallet && !e.isDawn && !e.isEnkrypt && !e.isExodus && !e.isFrame && !e.isFrontier && !e.isGamestop && !e.isHyperPay && !e.isImToken && !e.isKuCoinWallet && !e.isMathWallet && !e.isOkxWallet && !e.isOKExWallet && !e.isOneInchIOSWallet && !e.isOneInchAndroidWallet && !e.isOpera && !e.isPhantom && !e.isPortal && !e.isRabby && !e.isRainbow && !e.isStatus && !e.isTalisman && !e.isTally && !e.isTokenPocket && !e.isTokenary && !e.isTrust && !e.isTrustWallet && !e.isXDEFI && !e.isZeal && !e.isZerion
            }
            n = new WeakMap;
            var f = ({
                chains: e,
                projectId: t,
                walletConnectOptions: n,
                walletConnectVersion: o = "2",
                ...a
            }) => {
                var l, u;
                let c = "undefined" != typeof window && (null == (l = window.ethereum) ? void 0 : l.providers),
                    f = "undefined" != typeof window && void 0 !== window.ethereum && ((null == (u = window.ethereum.providers) ? void 0 : u.some(h)) || window.ethereum.isMetaMask),
                    p = !f;
                return {
                    id: "metaMask",
                    name: "MetaMask",
                    iconUrl: async () => (await r.e(8740).then(r.bind(r, 48740))).default,
                    iconAccent: "#f6851a",
                    iconBackground: "#fff",
                    installed: p ? void 0 : f,
                    downloadUrls: {
                        android: "https://play.google.com/store/apps/details?id=io.metamask",
                        ios: "https://apps.apple.com/us/app/metamask/id1438144202",
                        mobile: "https://metamask.io/download",
                        qrCode: "https://metamask.io/download",
                        chrome: "https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",
                        edge: "https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm",
                        firefox: "https://addons.mozilla.org/firefox/addon/ether-metamask",
                        opera: "https://addons.opera.com/extensions/details/metamask-10",
                        browserExtension: "https://metamask.io/download"
                    },
                    createConnector: () => {
                        let r = p ? (0, s.d)({
                                projectId: t,
                                chains: e,
                                version: o,
                                options: n
                            }) : new d({
                                chains: e,
                                options: {
                                    getProvider: () => c ? c.find(h) : "undefined" != typeof window ? window.ethereum : void 0,
                                    ...a
                                }
                            }),
                            l = async () => {
                                let e = await (0, s.J)(r, o);
                                return (0, i.Dt)() ? e : (0, i.gn)() ? `metamask://wc?uri=${encodeURIComponent(e)}` : `https://metamask.app.link/wc?uri=${encodeURIComponent(e)}`
                            };
                        return {
                            connector: r,
                            mobile: {
                                getUri: p ? l : void 0
                            },
                            qrCode: p ? {
                                getUri: l,
                                instructions: {
                                    learnMoreUrl: "https://metamask.io/faqs/",
                                    steps: [{
                                        description: "wallet_connectors.metamask.qr_code.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.metamask.qr_code.step1.title"
                                    }, {
                                        description: "wallet_connectors.metamask.qr_code.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.metamask.qr_code.step2.title"
                                    }, {
                                        description: "wallet_connectors.metamask.qr_code.step3.description",
                                        step: "refresh",
                                        title: "wallet_connectors.metamask.qr_code.step3.title"
                                    }]
                                }
                            } : void 0,
                            extension: {
                                instructions: {
                                    learnMoreUrl: "https://metamask.io/faqs/",
                                    steps: [{
                                        description: "wallet_connectors.metamask.extension.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.metamask.extension.step1.title"
                                    }, {
                                        description: "wallet_connectors.metamask.extension.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.metamask.extension.step2.title"
                                    }, {
                                        description: "wallet_connectors.metamask.extension.step3.description",
                                        step: "refresh",
                                        title: "wallet_connectors.metamask.extension.step3.title"
                                    }]
                                }
                            }
                        }
                    }
                }
            }
        },
        53109: function(e, t, r) {
            "use strict";
            r.d(t, {
                M: function() {
                    return o
                }
            });
            var n = r(85317),
                i = r(42104);

            function s() {
                var e;
                let t = e => {
                        let t = !!e.isSafePal;
                        return t
                    },
                    r = "undefined" != typeof window && void 0 !== window.ethereum;
                return r ? window.safepalProvider ? window.safepalProvider : t(window.ethereum) ? window.ethereum : (null == (e = window.ethereum) ? void 0 : e.providers) ? window.ethereum.providers.find(t) : void 0 : void 0
            }
            var o = ({
                chains: e,
                projectId: t,
                walletConnectOptions: o,
                walletConnectVersion: a = "2",
                ...l
            }) => {
                let u = !!s(),
                    c = !u;
                return {
                    id: "safepal",
                    name: "SafePal Wallet",
                    iconUrl: async () => (await r.e(6250).then(r.bind(r, 16250))).default,
                    installed: u || void 0,
                    iconAccent: "#3375BB",
                    iconBackground: "#fff",
                    downloadUrls: {
                        android: "https://play.google.com/store/apps/details?id=io.safepal.wallet&referrer=utm_source%3Drainbowkit%26utm_medium%3Ddisplay%26utm_campaign%3Ddownload",
                        ios: "https://apps.apple.com/app/apple-store/id1548297139?pt=122504219&ct=rainbowkit&mt=8",
                        mobile: "https://www.safepal.com/en/download",
                        qrCode: "https://www.safepal.com/en/download",
                        chrome: "https://chrome.google.com/webstore/detail/safepal-extension-wallet/lgmpcpglpngdoalbgeoldeajfclnhafa",
                        browserExtension: "https://www.safepal.com/download?product=2"
                    },
                    createConnector: () => {
                        let r;
                        let u = async () => {
                                let e = await (0, n.J)(h, a);
                                return `safepalwallet://wc?uri=${encodeURIComponent(e)}`
                            },
                            d = async () => {
                                let e = await (0, n.J)(h, a);
                                return e
                            },
                            h = c ? (0, n.d)({
                                projectId: t,
                                chains: e,
                                version: a,
                                options: o
                            }) : new i._({
                                chains: e,
                                options: {
                                    getProvider: s,
                                    ...l
                                }
                            });
                        return c && (r = {
                            getUri: d,
                            instructions: {
                                learnMoreUrl: "https://safepal.com/",
                                steps: [{
                                    description: "wallet_connectors.safepal.qr_code.step1.description",
                                    step: "install",
                                    title: "wallet_connectors.safepal.qr_code.step1.title"
                                }, {
                                    description: "wallet_connectors.safepal.qr_code.step2.description",
                                    step: "create",
                                    title: "wallet_connectors.safepal.qr_code.step2.title"
                                }, {
                                    description: "wallet_connectors.safepal.qr_code.step3.description",
                                    step: "scan",
                                    title: "wallet_connectors.safepal.qr_code.step3.title"
                                }]
                            }
                        }), {
                            connector: h,
                            mobile: {
                                getUri: c ? u : void 0
                            },
                            qrCode: r,
                            extension: {
                                instructions: {
                                    learnMoreUrl: "https://www.safepal.com/download?product=2",
                                    steps: [{
                                        description: "wallet_connectors.safepal.extension.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.safepal.extension.step1.title"
                                    }, {
                                        description: "wallet_connectors.safepal.extension.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.safepal.extension.step2.title"
                                    }, {
                                        description: "wallet_connectors.safepal.extension.step3.description",
                                        step: "refresh",
                                        title: "wallet_connectors.safepal.extension.step3.title"
                                    }]
                                }
                            }
                        }
                    }
                }
            }
        },
        41363: function(e, t, r) {
            "use strict";
            r.d(t, {
                P: function() {
                    return o
                }
            });
            var n = r(85317),
                i = r(42104);

            function s() {
                var e;
                let t = e => {
                        let t = !!e.isCoin98;
                        return t
                    },
                    r = "undefined" != typeof window && void 0 !== window.ethereum;
                return r ? window.coin98Wallet ? window.coin98Wallet : t(window.ethereum) ? window.ethereum : (null == (e = window.ethereum) ? void 0 : e.providers) ? window.ethereum.providers.find(t) : void 0 : void 0
            }
            var o = ({
                chains: e,
                projectId: t,
                walletConnectOptions: o,
                walletConnectVersion: a = "2",
                ...l
            }) => {
                let u = !!s(),
                    c = !u;
                return {
                    id: "coin98",
                    name: "Coin98 Wallet",
                    iconUrl: async () => (await r.e(6423).then(r.bind(r, 56423))).default,
                    installed: c ? void 0 : u,
                    iconAccent: "#CDA349",
                    iconBackground: "#fff",
                    downloadUrls: {
                        android: "https://play.google.com/store/apps/details?id=coin98.crypto.finance.media",
                        ios: "https://apps.apple.com/vn/app/coin98-super-app/id1561969966",
                        mobile: "https://coin98.com/wallet",
                        qrCode: "https://coin98.com/wallet",
                        chrome: "https://chrome.google.com/webstore/detail/coin98-wallet/aeachknmefphepccionboohckonoeemg",
                        browserExtension: "https://coin98.com/wallet"
                    },
                    createConnector: () => {
                        let r = c ? (0, n.d)({
                                projectId: t,
                                chains: e,
                                options: o,
                                version: a
                            }) : new i._({
                                chains: e,
                                options: {
                                    name: "Coin98 Wallet",
                                    getProvider: s,
                                    ...l
                                }
                            }),
                            u = async () => {
                                let e = await (0, n.J)(r, a);
                                return e
                            };
                        return {
                            connector: r,
                            mobile: {
                                getUri: c ? u : void 0
                            },
                            qrCode: c ? {
                                getUri: u,
                                instructions: {
                                    learnMoreUrl: "https://coin98.com/wallet",
                                    steps: [{
                                        description: "wallet_connectors.coin98.qr_code.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.coin98.qr_code.step1.title"
                                    }, {
                                        description: "wallet_connectors.coin98.qr_code.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.coin98.qr_code.step2.title"
                                    }, {
                                        description: "wallet_connectors.coin98.qr_code.step3.description",
                                        step: "scan",
                                        title: "wallet_connectors.coin98.qr_code.step3.title"
                                    }]
                                }
                            } : void 0,
                            extension: {
                                instructions: {
                                    learnMoreUrl: "https://coin98.com/wallet",
                                    steps: [{
                                        description: "wallet_connectors.coin98.extension.step1.description",
                                        step: "install",
                                        title: "wallet_connectors.coin98.extension.step1.title"
                                    }, {
                                        description: "wallet_connectors.coin98.extension.step2.description",
                                        step: "create",
                                        title: "wallet_connectors.coin98.extension.step2.title"
                                    }, {
                                        description: "wallet_connectors.coin98.extension.step3.description",
                                        step: "refresh",
                                        title: "wallet_connectors.coin98.extension.step3.title"
                                    }]
                                }
                            }
                        }
                    }
                }
            }
        },
        85317: function(e, t, r) {
            "use strict";
            r.d(t, {
                d: function() {
                    return b
                },
                J: function() {
                    return m
                }
            });
            var n, i, s, o = r(3354),
                a = r(83715),
                l = r(28832),
                u = r(45375),
                c = r(15988),
                d = r(96072),
                h = r(34966),
                f = r(6297),
                p = /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i,
                g = class extends l.wR {
                    constructor() {
                        super(...arguments), (0, l.Ko)(this, i), this.id = "walletConnectLegacy", this.name = "WalletConnectLegacy", this.ready = !0, (0, l.Ko)(this, n, void 0), this.onAccountsChanged = e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, u.K)(e[0])
                            })
                        }, this.onChainChanged = e => {
                            let t = (0, a.J)(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            this.emit("disconnect")
                        }
                    }
                    async connect({
                        chainId: e
                    } = {}) {
                        try {
                            let t = e;
                            if (!t) {
                                let e = this.storage ? .getItem("store"),
                                    r = e ? .state ? .data ? .chain ? .id;
                                r && !this.isChainUnsupported(r) && (t = r)
                            }
                            let r = await this.getProvider({
                                chainId: t,
                                create: !0
                            });
                            r.on("accountsChanged", this.onAccountsChanged), r.on("chainChanged", this.onChainChanged), r.on("disconnect", this.onDisconnect), setTimeout(() => this.emit("message", {
                                type: "connecting"
                            }), 0);
                            let n = await r.enable(),
                                o = (0, u.K)(n[0]),
                                a = await this.getChainId(),
                                c = this.isChainUnsupported(a),
                                d = r.connector ? .peerMeta ? .name ? ? "";
                            return p.test(d) && (this.switchChain = (0, l.U9)(this, i, s)), {
                                account: o,
                                chain: {
                                    id: a,
                                    unsupported: c
                                }
                            }
                        } catch (e) {
                            if (/user closed modal/i.test(e.message)) throw new c.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        await e.disconnect(), e.removeListener("accountsChanged", this.onAccountsChanged), e.removeListener("chainChanged", this.onChainChanged), e.removeListener("disconnect", this.onDisconnect), "undefined" != typeof localStorage && localStorage.removeItem("walletconnect")
                    }
                    async getAccount() {
                        let e = await this.getProvider();
                        return (0, u.K)(e.accounts[0])
                    }
                    async getChainId() {
                        let e = await this.getProvider(),
                            t = (0, a.J)(e.chainId);
                        return t
                    }
                    async getProvider({
                        chainId: e,
                        create: t
                    } = {}) {
                        if (!(0, l.ac)(this, n) || e || t) {
                            let t = this.options ? .infuraId ? {} : this.chains.reduce((e, t) => ({ ...e,
                                    [t.id]: t.rpcUrls.default.http[0]
                                }), {}),
                                i = (await Promise.all([r.e(5120), r.e(5583), r.e(521)]).then(r.bind(r, 521))).default;
                            (0, l.qx)(this, n, new i({ ...this.options,
                                chainId: e,
                                rpc: { ...t,
                                    ...this.options ? .rpc
                                }
                            })), (0, l.ac)(this, n).http = await (0, l.ac)(this, n).setHttpProvider(e)
                        }
                        return (0, l.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, d.K)({
                            account: r,
                            chain: n,
                            transport: (0, h.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let e = await this.getAccount();
                            return !!e
                        } catch {
                            return !1
                        }
                    }
                };
            async function m(e, t) {
                let r = await e.getProvider();
                return "2" === t ? new Promise(e => r.once("display_uri", e)) : r.connector.uri
            }
            n = new WeakMap, i = new WeakSet, s = async function(e) {
                let t = await this.getProvider(),
                    r = (0, f.eC)(e);
                try {
                    return await Promise.race([t.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: r
                        }]
                    }), new Promise(t => this.on("change", ({
                        chain: r
                    }) => {
                        r ? .id === e && t(e)
                    }))]), this.chains.find(t => t.id === e) ? ? {
                        id: e,
                        name: `Chain ${r}`,
                        network: `${r}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    }
                } catch (t) {
                    let e = "string" == typeof t ? t : t ? .message;
                    if (/user rejected request/i.test(e)) throw new c.ab(t);
                    throw new c.x3(t)
                }
            };
            var y = new Map;

            function b({
                chains: e,
                options: t = {},
                projectId: r,
                version: n = "2"
            }) {
                let i = "21fef48091f12692cad574a6f7753643";
                if ("2" === n) {
                    if (r && "" !== r)("YOUR_PROJECT_ID" === r || r === i) && console.warn("Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure");
                    else throw Error("No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure")
                }
                let s = {
                        chains: e,
                        options: "1" === n ? {
                            qrcode: !1,
                            ...t
                        } : {
                            projectId: "YOUR_PROJECT_ID" === r ? i : r,
                            showQrModal: !1,
                            ...t
                        }
                    },
                    a = JSON.stringify(s),
                    l = y.get(a);
                return null != l ? l : function(e, t) {
                    let r = "1" === e ? new g(t) : new o.z(t);
                    return y.set(JSON.stringify(t), r), r
                }(n, s)
            }
        },
        6191: function(e, t, r) {
            "use strict";
            r.d(t, {
                u: function() {
                    return a
                }
            });
            var n = r(42104);

            function i(e) {
                if ("undefined" == typeof window || void 0 === window.ethereum) return;
                let t = window.ethereum.providers;
                return t ? t.find(t => t[e]) : window.ethereum[e] ? window.ethereum : void 0
            }
            var s = r(11823),
                o = r(85317),
                a = ({
                    chains: e,
                    projectId: t,
                    walletConnectOptions: a,
                    walletConnectVersion: l = "2",
                    ...u
                }) => {
                    let c = !!i("isRainbow"),
                        d = !c;
                    return {
                        id: "rainbow",
                        name: "Rainbow",
                        iconUrl: async () => (await r.e(4863).then(r.bind(r, 4863))).default,
                        iconBackground: "#0c2f78",
                        installed: d ? void 0 : c,
                        downloadUrls: {
                            android: "https://play.google.com/store/apps/details?id=me.rainbow&referrer=utm_source%3Drainbowkit&utm_source=rainbowkit",
                            ios: "https://apps.apple.com/app/apple-store/id1457119021?pt=119997837&ct=rainbowkit&mt=8",
                            mobile: "https://rainbow.download?utm_source=rainbowkit",
                            qrCode: "https://rainbow.download?utm_source=rainbowkit&utm_medium=qrcode",
                            browserExtension: "https://rainbow.me/extension?utm_source=rainbowkit"
                        },
                        createConnector: () => {
                            let r = d ? (0, o.d)({
                                    projectId: t,
                                    chains: e,
                                    version: l,
                                    options: a
                                }) : function({
                                    chains: e,
                                    flag: t,
                                    options: r
                                }) {
                                    return new n._({
                                        chains: e,
                                        options: {
                                            getProvider: () => (function(e) {
                                                if ("undefined" == typeof window || void 0 === window.ethereum) return;
                                                let t = window.ethereum.providers,
                                                    r = i(e);
                                                return r || (void 0 !== t && t.length > 0 ? t[0] : window.ethereum)
                                            })(t),
                                            ...r
                                        }
                                    })
                                }({
                                    flag: "isRainbow",
                                    chains: e,
                                    options: u
                                }),
                                c = async () => {
                                    let e = await (0, o.J)(r, l);
                                    return (0, s.Dt)() ? e : (0, s.gn)() ? `rainbow://wc?uri=${encodeURIComponent(e)}&connector=rainbowkit` : `https://rnbwapp.com/wc?uri=${encodeURIComponent(e)}&connector=rainbowkit`
                                };
                            return {
                                connector: r,
                                mobile: {
                                    getUri: d ? c : void 0
                                },
                                qrCode: d ? {
                                    getUri: c,
                                    instructions: {
                                        learnMoreUrl: "https://learn.rainbow.me/connect-to-a-website-or-app?utm_source=rainbowkit&utm_medium=connector&utm_campaign=learnmore",
                                        steps: [{
                                            description: "wallet_connectors.rainbow.qr_code.step1.description",
                                            step: "install",
                                            title: "wallet_connectors.rainbow.qr_code.step1.title"
                                        }, {
                                            description: "wallet_connectors.rainbow.qr_code.step2.description",
                                            step: "create",
                                            title: "wallet_connectors.rainbow.qr_code.step2.title"
                                        }, {
                                            description: "wallet_connectors.rainbow.qr_code.step3.description",
                                            step: "scan",
                                            title: "wallet_connectors.rainbow.qr_code.step3.title"
                                        }]
                                    }
                                } : void 0
                            }
                        }
                    }
                }
        },
        11823: function(e, t, r) {
            "use strict";

            function n() {
                return "undefined" != typeof navigator && /android/i.test(navigator.userAgent)
            }

            function i() {
                return "undefined" != typeof navigator && /iPhone|iPod/.test(navigator.userAgent) || "undefined" != typeof navigator && (/iPad/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1)
            }
            r.d(t, {
                Dt: function() {
                    return n
                },
                gn: function() {
                    return i
                }
            })
        },
        3354: function(e, t, r) {
            "use strict";
            r.d(t, {
                z: function() {
                    return D
                }
            });
            var n, i, s, o, a, l, u, c, d, h, f, p, g, m, y, b, w, A, v, E, P = r(28832),
                S = r(85689),
                O = r(45375),
                k = r(15988),
                C = r(96072),
                x = r(34966),
                T = r(6297),
                N = "eip155",
                _ = "requestedChains",
                B = "wallet_addEthereumChain",
                D = class extends P.wR {
                    constructor(e) {
                        super({ ...e,
                            options: {
                                isNewChainsStale: !0,
                                ...e.options
                            }
                        }), (0, P.Ko)(this, s), (0, P.Ko)(this, a), (0, P.Ko)(this, u), (0, P.Ko)(this, d), (0, P.Ko)(this, f), (0, P.Ko)(this, g), (0, P.Ko)(this, y), (0, P.Ko)(this, w), (0, P.Ko)(this, v), this.id = "walletConnect", this.name = "WalletConnect", this.ready = !0, (0, P.Ko)(this, n, void 0), (0, P.Ko)(this, i, void 0), this.onAccountsChanged = e => {
                            0 === e.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, O.K)(e[0])
                            })
                        }, this.onChainChanged = e => {
                            let t = Number(e),
                                r = this.isChainUnsupported(t);
                            this.emit("change", {
                                chain: {
                                    id: t,
                                    unsupported: r
                                }
                            })
                        }, this.onDisconnect = () => {
                            (0, P.U9)(this, g, m).call(this, []), this.emit("disconnect")
                        }, this.onDisplayUri = e => {
                            this.emit("message", {
                                type: "display_uri",
                                data: e
                            })
                        }, this.onConnect = () => {
                            this.emit("connect", {})
                        }, (0, P.U9)(this, s, o).call(this)
                    }
                    async connect({
                        chainId: e,
                        pairingTopic: t
                    } = {}) {
                        try {
                            let r = e;
                            if (!r) {
                                let e = this.storage ? .getItem("store"),
                                    t = e ? .state ? .data ? .chain ? .id;
                                r = t && !this.isChainUnsupported(t) ? t : this.chains[0] ? .id
                            }
                            if (!r) throw Error("No chains found on connector.");
                            let n = await this.getProvider();
                            (0, P.U9)(this, d, h).call(this);
                            let i = (0, P.U9)(this, u, c).call(this);
                            if (n.session && i && await n.disconnect(), !n.session || i) {
                                let e = this.chains.filter(e => e.id !== r).map(e => e.id);
                                this.emit("message", {
                                    type: "connecting"
                                }), await n.connect({
                                    pairingTopic: t,
                                    chains: [r],
                                    optionalChains: e.length ? e : void 0
                                }), (0, P.U9)(this, g, m).call(this, this.chains.map(({
                                    id: e
                                }) => e))
                            }
                            let s = await n.enable(),
                                o = (0, O.K)(s[0]),
                                a = await this.getChainId(),
                                l = this.isChainUnsupported(a);
                            return {
                                account: o,
                                chain: {
                                    id: a,
                                    unsupported: l
                                }
                            }
                        } catch (e) {
                            if (/user rejected/i.test(e ? .message)) throw new k.ab(e);
                            throw e
                        }
                    }
                    async disconnect() {
                        let e = await this.getProvider();
                        try {
                            await e.disconnect()
                        } catch (e) {
                            if (!/No matching key/i.test(e.message)) throw e
                        } finally {
                            (0, P.U9)(this, f, p).call(this), (0, P.U9)(this, g, m).call(this, [])
                        }
                    }
                    async getAccount() {
                        let {
                            accounts: e
                        } = await this.getProvider();
                        return (0, O.K)(e[0])
                    }
                    async getChainId() {
                        let {
                            chainId: e
                        } = await this.getProvider();
                        return e
                    }
                    async getProvider({
                        chainId: e
                    } = {}) {
                        return (0, P.ac)(this, n) || await (0, P.U9)(this, s, o).call(this), e && await this.switchChain(e), (0, P.ac)(this, n)
                    }
                    async getWalletClient({
                        chainId: e
                    } = {}) {
                        let [t, r] = await Promise.all([this.getProvider({
                            chainId: e
                        }), this.getAccount()]), n = this.chains.find(t => t.id === e);
                        if (!t) throw Error("provider is required.");
                        return (0, C.K)({
                            account: r,
                            chain: n,
                            transport: (0, x.P)(t)
                        })
                    }
                    async isAuthorized() {
                        try {
                            let [e, t] = await Promise.all([this.getAccount(), this.getProvider()]), r = (0, P.U9)(this, u, c).call(this);
                            if (!e) return !1;
                            if (r && t.session) {
                                try {
                                    await t.disconnect()
                                } catch {}
                                return !1
                            }
                            return !0
                        } catch {
                            return !1
                        }
                    }
                    async switchChain(e) {
                        let t = this.chains.find(t => t.id === e);
                        if (!t) throw new k.x3(Error("chain not found on connector."));
                        try {
                            let r = await this.getProvider(),
                                n = (0, P.U9)(this, w, A).call(this),
                                i = (0, P.U9)(this, v, E).call(this),
                                s = n.includes(e);
                            if (!s && i.includes(B)) {
                                await r.request({
                                    method: B,
                                    params: [{
                                        chainId: (0, T.eC)(t.id),
                                        blockExplorerUrls: [t.blockExplorers ? .default ? .url],
                                        chainName: t.name,
                                        nativeCurrency: t.nativeCurrency,
                                        rpcUrls: [...t.rpcUrls.default.http]
                                    }]
                                });
                                let n = (0, P.U9)(this, y, b).call(this);
                                n.push(e), (0, P.U9)(this, g, m).call(this, n)
                            }
                            return await r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: (0, T.eC)(e)
                                }]
                            }), t
                        } catch (t) {
                            let e = "string" == typeof t ? t : t ? .message;
                            if (/user rejected request/i.test(e)) throw new k.ab(t);
                            throw new k.x3(t)
                        }
                    }
                };
            n = new WeakMap, i = new WeakMap, s = new WeakSet, o = async function() {
                return (0, P.ac)(this, i) || "undefined" == typeof window || (0, P.qx)(this, i, (0, P.U9)(this, a, l).call(this)), (0, P.ac)(this, i)
            }, a = new WeakSet, l = async function() {
                let {
                    EthereumProvider: e,
                    OPTIONAL_EVENTS: t,
                    OPTIONAL_METHODS: i
                } = await Promise.all([r.e(5583), r.e(9443)]).then(r.bind(r, 29443)), [s, ...o] = this.chains.map(({
                    id: e
                }) => e);
                if (s) {
                    let {
                        projectId: r,
                        showQrModal: a = !0,
                        qrModalOptions: l,
                        metadata: u,
                        relayUrl: c
                    } = this.options;
                    (0, P.qx)(this, n, await e.init({
                        showQrModal: a,
                        qrModalOptions: l,
                        projectId: r,
                        optionalMethods: i,
                        optionalEvents: t,
                        chains: [s],
                        optionalChains: o.length ? o : void 0,
                        rpcMap: Object.fromEntries(this.chains.map(e => [e.id, e.rpcUrls.default.http[0]])),
                        metadata: u,
                        relayUrl: c
                    }))
                }
            }, u = new WeakSet, c = function() {
                let e = (0, P.U9)(this, v, E).call(this);
                if (e.includes(B) || !this.options.isNewChainsStale) return !1;
                let t = (0, P.U9)(this, y, b).call(this),
                    r = this.chains.map(({
                        id: e
                    }) => e),
                    n = (0, P.U9)(this, w, A).call(this);
                return (!n.length || !!n.some(e => r.includes(e))) && !r.every(e => t.includes(e))
            }, d = new WeakSet, h = function() {
                (0, P.ac)(this, n) && ((0, P.U9)(this, f, p).call(this), (0, P.ac)(this, n).on("accountsChanged", this.onAccountsChanged), (0, P.ac)(this, n).on("chainChanged", this.onChainChanged), (0, P.ac)(this, n).on("disconnect", this.onDisconnect), (0, P.ac)(this, n).on("session_delete", this.onDisconnect), (0, P.ac)(this, n).on("display_uri", this.onDisplayUri), (0, P.ac)(this, n).on("connect", this.onConnect))
            }, f = new WeakSet, p = function() {
                (0, P.ac)(this, n) && ((0, P.ac)(this, n).removeListener("accountsChanged", this.onAccountsChanged), (0, P.ac)(this, n).removeListener("chainChanged", this.onChainChanged), (0, P.ac)(this, n).removeListener("disconnect", this.onDisconnect), (0, P.ac)(this, n).removeListener("session_delete", this.onDisconnect), (0, P.ac)(this, n).removeListener("display_uri", this.onDisplayUri), (0, P.ac)(this, n).removeListener("connect", this.onConnect))
            }, g = new WeakSet, m = function(e) {
                this.storage ? .setItem(_, e)
            }, y = new WeakSet, b = function() {
                return this.storage ? .getItem(_) ? ? []
            }, w = new WeakSet, A = function() {
                if (!(0, P.ac)(this, n)) return [];
                let e = P.ac(this, n).session ? .namespaces;
                if (!e) return [];
                let t = (0, S.fK)(e),
                    r = t[N] ? .chains ? .map(e => parseInt(e.split(":")[1] || ""));
                return r ? ? []
            }, v = new WeakSet, E = function() {
                if (!(0, P.ac)(this, n)) return [];
                let e = P.ac(this, n).session ? .namespaces;
                if (!e) return [];
                let t = (0, S.fK)(e),
                    r = t[N] ? .methods;
                return r ? ? []
            }
        },
        59343: function(e, t, r) {
            "use strict";

            function n() {
                return function(e) {
                    return e.rpcUrls.public.http[0] ? {
                        chain: e,
                        rpcUrls: e.rpcUrls.public
                    } : null
                }
            }
            r.d(t, {
                I: function() {
                    return n
                }
            })
        },
        76520: function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, {
                af: function() {
                    return l
                },
                ak: function() {
                    return u
                },
                am: function() {
                    return c
                },
                an: function() {
                    return d
                },
                ar: function() {
                    return h
                },
                ars: function() {
                    return f
                },
                as: function() {
                    return p
                },
                asa: function() {
                    return g
                },
                ast: function() {
                    return m
                },
                az: function() {
                    return y
                },
                bal: function() {
                    return b
                },
                be: function() {
                    return w
                },
                bem: function() {
                    return A
                },
                bez: function() {
                    return v
                },
                bg: function() {
                    return E
                },
                bho: function() {
                    return P
                },
                bm: function() {
                    return S
                },
                bn: function() {
                    return O
                },
                bo: function() {
                    return k
                },
                br: function() {
                    return C
                },
                brx: function() {
                    return x
                },
                bs: function() {
                    return T
                },
                ca: function() {
                    return N
                },
                ce: function() {
                    return _
                },
                ceb: function() {
                    return B
                },
                cgg: function() {
                    return D
                },
                chr: function() {
                    return I
                },
                ckb: function() {
                    return R
                },
                cs: function() {
                    return M
                },
                cy: function() {
                    return L
                },
                da: function() {
                    return U
                },
                de: function() {
                    return j
                },
                doi: function() {
                    return F
                },
                dsb: function() {
                    return H
                },
                dv: function() {
                    return $
                },
                dz: function() {
                    return K
                },
                ee: function() {
                    return z
                },
                el: function() {
                    return V
                },
                en: function() {
                    return G
                },
                eo: function() {
                    return W
                },
                es: function() {
                    return J
                },
                et: function() {
                    return q
                },
                eu: function() {
                    return Q
                },
                fa: function() {
                    return Y
                },
                ff: function() {
                    return Z
                },
                fi: function() {
                    return X
                },
                fil: function() {
                    return ee
                },
                fo: function() {
                    return et
                },
                fr: function() {
                    return er
                },
                fur: function() {
                    return en
                },
                fy: function() {
                    return ei
                },
                ga: function() {
                    return es
                },
                gd: function() {
                    return eo
                },
                gl: function() {
                    return ea
                },
                gsw: function() {
                    return el
                },
                gu: function() {
                    return eu
                },
                guw: function() {
                    return ec
                },
                gv: function() {
                    return ed
                },
                ha: function() {
                    return eh
                },
                haw: function() {
                    return ef
                },
                he: function() {
                    return ep
                },
                hi: function() {
                    return eg
                },
                hnj: function() {
                    return em
                },
                hr: function() {
                    return ey
                },
                hsb: function() {
                    return eb
                },
                hu: function() {
                    return ew
                },
                hy: function() {
                    return eA
                },
                ia: function() {
                    return ev
                },
                id: function() {
                    return eE
                },
                ig: function() {
                    return eP
                },
                ii: function() {
                    return eS
                },
                io: function() {
                    return eO
                },
                is: function() {
                    return ek
                },
                it: function() {
                    return eC
                },
                iu: function() {
                    return ex
                },
                ja: function() {
                    return eT
                },
                jbo: function() {
                    return eN
                },
                jgo: function() {
                    return e_
                },
                jmc: function() {
                    return eB
                },
                jv: function() {
                    return eD
                },
                jw: function() {
                    return eI
                },
                ka: function() {
                    return eR
                },
                kab: function() {
                    return eM
                },
                kaj: function() {
                    return eL
                },
                kcg: function() {
                    return eU
                },
                kde: function() {
                    return ej
                },
                kea: function() {
                    return eF
                },
                kk: function() {
                    return eH
                },
                kkj: function() {
                    return e$
                },
                kl: function() {
                    return eK
                },
                km: function() {
                    return ez
                },
                kn: function() {
                    return eV
                },
                ko: function() {
                    return eG
                },
                ks: function() {
                    return eW
                },
                ksb: function() {
                    return eJ
                },
                ksh: function() {
                    return eq
                },
                ku: function() {
                    return eQ
                },
                kw: function() {
                    return eY
                },
                ky: function() {
                    return eZ
                },
                lag: function() {
                    return eX
                },
                lb: function() {
                    return e0
                },
                lg: function() {
                    return e1
                },
                lij: function() {
                    return e2
                },
                lkt: function() {
                    return e3
                },
                ln: function() {
                    return e4
                },
                lo: function() {
                    return e5
                },
                lt: function() {
                    return e6
                },
                lv: function() {
                    return e8
                },
                mas: function() {
                    return e9
                },
                mg: function() {
                    return e7
                },
                mgo: function() {
                    return te
                },
                mk: function() {
                    return tt
                },
                ml: function() {
                    return tr
                },
                mn: function() {
                    return tn
                },
                mo: function() {
                    return ti
                },
                mr: function() {
                    return ts
                },
                ms: function() {
                    return to
                },
                mt: function() {
                    return ta
                },
                my: function() {
                    return tl
                },
                nah: function() {
                    return tu
                },
                naq: function() {
                    return tc
                },
                nb: function() {
                    return td
                },
                nd: function() {
                    return th
                },
                ne: function() {
                    return tf
                },
                nl: function() {
                    return tp
                },
                nn: function() {
                    return tg
                },
                nnh: function() {
                    return tm
                },
                no: function() {
                    return ty
                },
                nqo: function() {
                    return tb
                },
                nr: function() {
                    return tw
                },
                nso: function() {
                    return tA
                },
                ny: function() {
                    return tv
                },
                nyn: function() {
                    return tE
                },
                om: function() {
                    return tP
                },
                or: function() {
                    return tS
                },
                os: function() {
                    return tO
                },
                osa: function() {
                    return tk
                },
                pa: function() {
                    return tC
                },
                pap: function() {
                    return tx
                },
                pcm: function() {
                    return tT
                },
                pl: function() {
                    return tN
                },
                prg: function() {
                    return t_
                },
                ps: function() {
                    return tB
                },
                pt: function() {
                    return tD
                },
                pt_PT: function() {
                    return tI
                },
                rm: function() {
                    return tR
                },
                ro: function() {
                    return tM
                },
                rof: function() {
                    return tL
                },
                ru: function() {
                    return tU
                },
                rwk: function() {
                    return tj
                },
                sah: function() {
                    return tF
                },
                saq: function() {
                    return tH
                },
                sat: function() {
                    return t$
                },
                sc: function() {
                    return tK
                },
                scn: function() {
                    return tz
                },
                sd: function() {
                    return tV
                },
                sdh: function() {
                    return tG
                },
                se: function() {
                    return tW
                },
                seh: function() {
                    return tJ
                },
                ses: function() {
                    return tq
                },
                sg: function() {
                    return tQ
                },
                sh: function() {
                    return tY
                },
                shi: function() {
                    return tZ
                },
                si: function() {
                    return tX
                },
                sk: function() {
                    return t0
                },
                sl: function() {
                    return t1
                },
                sma: function() {
                    return t2
                },
                smi: function() {
                    return t3
                },
                smj: function() {
                    return t4
                },
                smn: function() {
                    return t5
                },
                sms: function() {
                    return t6
                },
                sn: function() {
                    return t8
                },
                so: function() {
                    return t9
                },
                sq: function() {
                    return t7
                },
                sr: function() {
                    return re
                },
                ss: function() {
                    return rt
                },
                ssy: function() {
                    return rr
                },
                st: function() {
                    return rn
                },
                su: function() {
                    return ri
                },
                sv: function() {
                    return rs
                },
                sw: function() {
                    return ro
                },
                syr: function() {
                    return ra
                },
                ta: function() {
                    return rl
                },
                te: function() {
                    return ru
                },
                teo: function() {
                    return rc
                },
                th: function() {
                    return rd
                },
                ti: function() {
                    return rh
                },
                tig: function() {
                    return rf
                },
                tk: function() {
                    return rp
                },
                tl: function() {
                    return rg
                },
                tn: function() {
                    return rm
                },
                to: function() {
                    return ry
                },
                tpi: function() {
                    return rb
                },
                tr: function() {
                    return rw
                },
                ts: function() {
                    return rA
                },
                tzm: function() {
                    return rv
                },
                ug: function() {
                    return rE
                },
                uk: function() {
                    return rP
                },
                und: function() {
                    return rS
                },
                ur: function() {
                    return rO
                },
                uz: function() {
                    return rk
                },
                ve: function() {
                    return rC
                },
                vec: function() {
                    return rx
                },
                vi: function() {
                    return rT
                },
                vo: function() {
                    return rN
                },
                vun: function() {
                    return r_
                },
                wa: function() {
                    return rB
                },
                wae: function() {
                    return rD
                },
                wo: function() {
                    return rI
                },
                xh: function() {
                    return rR
                },
                xog: function() {
                    return rM
                },
                yi: function() {
                    return rL
                },
                yo: function() {
                    return rU
                },
                yue: function() {
                    return rj
                },
                zh: function() {
                    return rF
                },
                zu: function() {
                    return rH
                }
            });
            let n = (e, t) => t ? "other" : 1 == e ? "one" : "other",
                i = (e, t) => t ? "other" : 0 == e || 1 == e ? "one" : "other",
                s = (e, t) => t ? "other" : e >= 0 && e <= 1 ? "one" : "other",
                o = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1];
                    return t ? "other" : 1 == e && n ? "one" : "other"
                },
                a = (e, t) => t ? "other" : 1 == e ? "one" : 2 == e ? "two" : "other",
                l = n,
                u = i,
                c = s,
                d = n,
                h = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-2);
                    return t ? "other" : 0 == e ? "zero" : 1 == e ? "one" : 2 == e ? "two" : i >= 3 && i <= 10 ? "few" : i >= 11 && i <= 99 ? "many" : "other"
                },
                f = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-2);
                    return t ? "other" : 0 == e ? "zero" : 1 == e ? "one" : 2 == e ? "two" : i >= 3 && i <= 10 ? "few" : i >= 11 && i <= 99 ? "many" : "other"
                },
                p = (e, t) => t ? 1 == e || 5 == e || 7 == e || 8 == e || 9 == e || 10 == e ? "one" : 2 == e || 3 == e ? "two" : 4 == e ? "few" : 6 == e ? "many" : "other" : e >= 0 && e <= 1 ? "one" : "other",
                g = n,
                m = o,
                y = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = n.slice(-1),
                        s = n.slice(-2),
                        o = n.slice(-3);
                    return t ? 1 == i || 2 == i || 5 == i || 7 == i || 8 == i || 20 == s || 50 == s || 70 == s || 80 == s ? "one" : 3 == i || 4 == i || 100 == o || 200 == o || 300 == o || 400 == o || 500 == o || 600 == o || 700 == o || 800 == o || 900 == o ? "few" : 0 == n || 6 == i || 40 == s || 60 == s || 90 == s ? "many" : "other" : 1 == e ? "one" : "other"
                },
                b = (e, t) => 1 == e ? "one" : "other",
                w = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-1),
                        s = n && r[0].slice(-2);
                    return t ? (2 == i || 3 == i) && 12 != s && 13 != s ? "few" : "other" : 1 == i && 11 != s ? "one" : i >= 2 && i <= 4 && (s < 12 || s > 14) ? "few" : n && 0 == i || i >= 5 && i <= 9 || s >= 11 && s <= 14 ? "many" : "other"
                },
                A = n,
                v = n,
                E = n,
                P = i,
                S = (e, t) => "other",
                O = (e, t) => t ? 1 == e || 5 == e || 7 == e || 8 == e || 9 == e || 10 == e ? "one" : 2 == e || 3 == e ? "two" : 4 == e ? "few" : 6 == e ? "many" : "other" : e >= 0 && e <= 1 ? "one" : "other",
                k = (e, t) => "other",
                C = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-1),
                        s = n && r[0].slice(-2),
                        o = n && r[0].slice(-6);
                    return t ? "other" : 1 == i && 11 != s && 71 != s && 91 != s ? "one" : 2 == i && 12 != s && 72 != s && 92 != s ? "two" : (3 == i || 4 == i || 9 == i) && (s < 10 || s > 19) && (s < 70 || s > 79) && (s < 90 || s > 99) ? "few" : 0 != e && n && 0 == o ? "many" : "other"
                },
                x = n,
                T = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = n.slice(-2),
                        l = i.slice(-1),
                        u = i.slice(-2);
                    return t ? "other" : s && 1 == o && 11 != a || 1 == l && 11 != u ? "one" : s && o >= 2 && o <= 4 && (a < 12 || a > 14) || l >= 2 && l <= 4 && (u < 12 || u > 14) ? "few" : "other"
                },
                N = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? 1 == e || 3 == e ? "one" : 2 == e ? "two" : 4 == e ? "few" : "other" : 1 == e && i ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                _ = n,
                B = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = i.slice(-1);
                    return t ? "other" : s && (1 == n || 2 == n || 3 == n) || s && 4 != o && 6 != o && 9 != o || !s && 4 != a && 6 != a && 9 != a ? "one" : "other"
                },
                D = n,
                I = n,
                R = n,
                M = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1];
                    return t ? "other" : 1 == e && i ? "one" : n >= 2 && n <= 4 && i ? "few" : i ? "other" : "many"
                },
                L = (e, t) => t ? 0 == e || 7 == e || 8 == e || 9 == e ? "zero" : 1 == e ? "one" : 2 == e ? "two" : 3 == e || 4 == e ? "few" : 5 == e || 6 == e ? "many" : "other" : 0 == e ? "zero" : 1 == e ? "one" : 2 == e ? "two" : 3 == e ? "few" : 6 == e ? "many" : "other",
                U = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = Number(r[0]) == e;
                    return t ? "other" : 1 != e && (i || 0 != n && 1 != n) ? "other" : "one"
                },
                j = o,
                F = s,
                H = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-2),
                        a = i.slice(-2);
                    return t ? "other" : s && 1 == o || 1 == a ? "one" : s && 2 == o || 2 == a ? "two" : s && (3 == o || 4 == o) || 3 == a || 4 == a ? "few" : "other"
                },
                $ = n,
                K = (e, t) => "other",
                z = n,
                V = n,
                G = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1],
                        i = Number(r[0]) == e,
                        s = i && r[0].slice(-1),
                        o = i && r[0].slice(-2);
                    return t ? 1 == s && 11 != o ? "one" : 2 == s && 12 != o ? "two" : 3 == s && 13 != o ? "few" : "other" : 1 == e && n ? "one" : "other"
                },
                W = n,
                J = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? "other" : 1 == e ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                q = o,
                Q = n,
                Y = s,
                Z = (e, t) => t ? "other" : e >= 0 && e < 2 ? "one" : "other",
                X = o,
                ee = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = i.slice(-1);
                    return t ? 1 == e ? "one" : "other" : s && (1 == n || 2 == n || 3 == n) || s && 4 != o && 6 != o && 9 != o || !s && 4 != a && 6 != a && 9 != a ? "one" : "other"
                },
                et = n,
                er = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? 1 == e ? "one" : "other" : e >= 0 && e < 2 ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                en = n,
                ei = o,
                es = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e;
                    return t ? 1 == e ? "one" : "other" : 1 == e ? "one" : 2 == e ? "two" : n && e >= 3 && e <= 6 ? "few" : n && e >= 7 && e <= 10 ? "many" : "other"
                },
                eo = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e;
                    return t ? 1 == e || 11 == e ? "one" : 2 == e || 12 == e ? "two" : 3 == e || 13 == e ? "few" : "other" : 1 == e || 11 == e ? "one" : 2 == e || 12 == e ? "two" : n && e >= 3 && e <= 10 || n && e >= 13 && e <= 19 ? "few" : "other"
                },
                ea = o,
                el = n,
                eu = (e, t) => t ? 1 == e ? "one" : 2 == e || 3 == e ? "two" : 4 == e ? "few" : 6 == e ? "many" : "other" : e >= 0 && e <= 1 ? "one" : "other",
                ec = i,
                ed = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-1),
                        o = n.slice(-2);
                    return t ? "other" : i && 1 == s ? "one" : i && 2 == s ? "two" : i && (0 == o || 20 == o || 40 == o || 60 == o || 80 == o) ? "few" : i ? "other" : "many"
                },
                eh = n,
                ef = n,
                ep = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1];
                    return t ? "other" : 1 == n && i || 0 == n && !i ? "one" : 2 == n && i ? "two" : "other"
                },
                eg = (e, t) => t ? 1 == e ? "one" : 2 == e || 3 == e ? "two" : 4 == e ? "few" : 6 == e ? "many" : "other" : e >= 0 && e <= 1 ? "one" : "other",
                em = (e, t) => "other",
                ey = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = n.slice(-2),
                        l = i.slice(-1),
                        u = i.slice(-2);
                    return t ? "other" : s && 1 == o && 11 != a || 1 == l && 11 != u ? "one" : s && o >= 2 && o <= 4 && (a < 12 || a > 14) || l >= 2 && l <= 4 && (u < 12 || u > 14) ? "few" : "other"
                },
                eb = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-2),
                        a = i.slice(-2);
                    return t ? "other" : s && 1 == o || 1 == a ? "one" : s && 2 == o || 2 == a ? "two" : s && (3 == o || 4 == o) || 3 == a || 4 == a ? "few" : "other"
                },
                ew = (e, t) => t ? 1 == e || 5 == e ? "one" : "other" : 1 == e ? "one" : "other",
                eA = (e, t) => t ? 1 == e ? "one" : "other" : e >= 0 && e < 2 ? "one" : "other",
                ev = o,
                eE = (e, t) => "other",
                eP = (e, t) => "other",
                eS = (e, t) => "other",
                eO = o,
                ek = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = (r[1] || "").replace(/0+$/, ""),
                        s = Number(r[0]) == e,
                        o = n.slice(-1),
                        a = n.slice(-2);
                    return t ? "other" : s && 1 == o && 11 != a || i % 10 == 1 && i % 100 != 11 ? "one" : "other"
                },
                eC = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? "many" : "other" : 1 == e && i ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                ex = a,
                eT = (e, t) => "other",
                eN = (e, t) => "other",
                e_ = n,
                eB = n,
                eD = (e, t) => "other",
                eI = (e, t) => "other",
                eR = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = n.slice(-2);
                    return t ? 1 == n ? "one" : 0 == n || i >= 2 && i <= 20 || 40 == i || 60 == i || 80 == i ? "many" : "other" : 1 == e ? "one" : "other"
                },
                eM = (e, t) => t ? "other" : e >= 0 && e < 2 ? "one" : "other",
                eL = n,
                eU = n,
                ej = (e, t) => "other",
                eF = (e, t) => "other",
                eH = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-1);
                    return t ? 6 == i || 9 == i || n && 0 == i && 0 != e ? "many" : "other" : 1 == e ? "one" : "other"
                },
                e$ = n,
                eK = n,
                ez = (e, t) => "other",
                eV = s,
                eG = (e, t) => "other",
                eW = n,
                eJ = n,
                eq = (e, t) => t ? "other" : 0 == e ? "zero" : 1 == e ? "one" : "other",
                eQ = n,
                eY = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-2),
                        s = n && r[0].slice(-3),
                        o = n && r[0].slice(-5),
                        a = n && r[0].slice(-6);
                    return t ? n && e >= 1 && e <= 4 || i >= 1 && i <= 4 || i >= 21 && i <= 24 || i >= 41 && i <= 44 || i >= 61 && i <= 64 || i >= 81 && i <= 84 ? "one" : 5 == e || 5 == i ? "many" : "other" : 0 == e ? "zero" : 1 == e ? "one" : 2 == i || 22 == i || 42 == i || 62 == i || 82 == i || n && 0 == s && (o >= 1e3 && o <= 2e4 || 4e4 == o || 6e4 == o || 8e4 == o) || 0 != e && 1e5 == a ? "two" : 3 == i || 23 == i || 43 == i || 63 == i || 83 == i ? "few" : 1 != e && (1 == i || 21 == i || 41 == i || 61 == i || 81 == i) ? "many" : "other"
                },
                eZ = n,
                eX = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0];
                    return t ? "other" : 0 == e ? "zero" : (0 == n || 1 == n) && 0 != e ? "one" : "other"
                },
                e0 = n,
                e1 = n,
                e2 = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1],
                        i = Number(r[0]) == e;
                    return t ? 11 == e || 8 == e || i && e >= 80 && e <= 89 || i && e >= 800 && e <= 899 ? "many" : "other" : 1 == e && n ? "one" : "other"
                },
                e3 = (e, t) => "other",
                e4 = i,
                e5 = (e, t) => t && 1 == e ? "one" : "other",
                e6 = (e, t) => {
                    let r = String(e).split("."),
                        n = r[1] || "",
                        i = Number(r[0]) == e,
                        s = i && r[0].slice(-1),
                        o = i && r[0].slice(-2);
                    return t ? "other" : 1 == s && (o < 11 || o > 19) ? "one" : s >= 2 && s <= 9 && (o < 11 || o > 19) ? "few" : 0 != n ? "many" : "other"
                },
                e8 = (e, t) => {
                    let r = String(e).split("."),
                        n = r[1] || "",
                        i = n.length,
                        s = Number(r[0]) == e,
                        o = s && r[0].slice(-1),
                        a = s && r[0].slice(-2),
                        l = n.slice(-2),
                        u = n.slice(-1);
                    return t ? "other" : s && 0 == o || a >= 11 && a <= 19 || 2 == i && l >= 11 && l <= 19 ? "zero" : 1 == o && 11 != a || 2 == i && 1 == u && 11 != l || 2 != i && 1 == u ? "one" : "other"
                },
                e9 = n,
                e7 = i,
                te = n,
                tt = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = n.slice(-2),
                        l = i.slice(-1),
                        u = i.slice(-2);
                    return t ? 1 == o && 11 != a ? "one" : 2 == o && 12 != a ? "two" : (7 == o || 8 == o) && 17 != a && 18 != a ? "many" : "other" : s && 1 == o && 11 != a || 1 == l && 11 != u ? "one" : "other"
                },
                tr = n,
                tn = n,
                ti = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1],
                        i = Number(r[0]) == e,
                        s = i && r[0].slice(-2);
                    return t ? 1 == e ? "one" : "other" : 1 == e && n ? "one" : !n || 0 == e || 1 != e && s >= 1 && s <= 19 ? "few" : "other"
                },
                ts = (e, t) => t ? 1 == e ? "one" : 2 == e || 3 == e ? "two" : 4 == e ? "few" : "other" : 1 == e ? "one" : "other",
                to = (e, t) => t && 1 == e ? "one" : "other",
                ta = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-2);
                    return t ? "other" : 1 == e ? "one" : 2 == e ? "two" : 0 == e || i >= 3 && i <= 10 ? "few" : i >= 11 && i <= 19 ? "many" : "other"
                },
                tl = (e, t) => "other",
                tu = n,
                tc = a,
                td = n,
                th = n,
                tf = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e;
                    return t ? n && e >= 1 && e <= 4 ? "one" : "other" : 1 == e ? "one" : "other"
                },
                tp = o,
                tg = n,
                tm = n,
                ty = n,
                tb = (e, t) => "other",
                tw = n,
                tA = i,
                tv = n,
                tE = n,
                tP = n,
                tS = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e;
                    return t ? 1 == e || 5 == e || n && e >= 7 && e <= 9 ? "one" : 2 == e || 3 == e ? "two" : 4 == e ? "few" : 6 == e ? "many" : "other" : 1 == e ? "one" : "other"
                },
                tO = n,
                tk = (e, t) => "other",
                tC = i,
                tx = n,
                tT = s,
                tN = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-1),
                        o = n.slice(-2);
                    return t ? "other" : 1 == e && i ? "one" : i && s >= 2 && s <= 4 && (o < 12 || o > 14) ? "few" : i && 1 != n && (0 == s || 1 == s) || i && s >= 5 && s <= 9 || i && o >= 12 && o <= 14 ? "many" : "other"
                },
                t_ = (e, t) => {
                    let r = String(e).split("."),
                        n = r[1] || "",
                        i = n.length,
                        s = Number(r[0]) == e,
                        o = s && r[0].slice(-1),
                        a = s && r[0].slice(-2),
                        l = n.slice(-2),
                        u = n.slice(-1);
                    return t ? "other" : s && 0 == o || a >= 11 && a <= 19 || 2 == i && l >= 11 && l <= 19 ? "zero" : 1 == o && 11 != a || 2 == i && 1 == u && 11 != l || 2 != i && 1 == u ? "one" : "other"
                },
                tB = n,
                tD = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? "other" : 0 == n || 1 == n ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                tI = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? "other" : 1 == e && i ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                tR = n,
                tM = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1],
                        i = Number(r[0]) == e,
                        s = i && r[0].slice(-2);
                    return t ? 1 == e ? "one" : "other" : 1 == e && n ? "one" : !n || 0 == e || 1 != e && s >= 1 && s <= 19 ? "few" : "other"
                },
                tL = n,
                tU = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-1),
                        o = n.slice(-2);
                    return t ? "other" : i && 1 == s && 11 != o ? "one" : i && s >= 2 && s <= 4 && (o < 12 || o > 14) ? "few" : i && 0 == s || i && s >= 5 && s <= 9 || i && o >= 11 && o <= 14 ? "many" : "other"
                },
                tj = n,
                tF = (e, t) => "other",
                tH = n,
                t$ = a,
                tK = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1];
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? "many" : "other" : 1 == e && n ? "one" : "other"
                },
                tz = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1];
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? "many" : "other" : 1 == e && n ? "one" : "other"
                },
                tV = n,
                tG = n,
                tW = a,
                tJ = n,
                tq = (e, t) => "other",
                tQ = (e, t) => "other",
                tY = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = n.slice(-2),
                        l = i.slice(-1),
                        u = i.slice(-2);
                    return t ? "other" : s && 1 == o && 11 != a || 1 == l && 11 != u ? "one" : s && o >= 2 && o <= 4 && (a < 12 || a > 14) || l >= 2 && l <= 4 && (u < 12 || u > 14) ? "few" : "other"
                },
                tZ = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e;
                    return t ? "other" : e >= 0 && e <= 1 ? "one" : n && e >= 2 && e <= 10 ? "few" : "other"
                },
                tX = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "";
                    return t ? "other" : 0 == e || 1 == e || 0 == n && 1 == i ? "one" : "other"
                },
                t0 = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1];
                    return t ? "other" : 1 == e && i ? "one" : n >= 2 && n <= 4 && i ? "few" : i ? "other" : "many"
                },
                t1 = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-2);
                    return t ? "other" : i && 1 == s ? "one" : i && 2 == s ? "two" : i && (3 == s || 4 == s) || !i ? "few" : "other"
                },
                t2 = a,
                t3 = a,
                t4 = a,
                t5 = a,
                t6 = a,
                t8 = n,
                t9 = n,
                t7 = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-1),
                        s = n && r[0].slice(-2);
                    return t ? 1 == e ? "one" : 4 == i && 14 != s ? "many" : "other" : 1 == e ? "one" : "other"
                },
                re = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = n.slice(-2),
                        l = i.slice(-1),
                        u = i.slice(-2);
                    return t ? "other" : s && 1 == o && 11 != a || 1 == l && 11 != u ? "one" : s && o >= 2 && o <= 4 && (a < 12 || a > 14) || l >= 2 && l <= 4 && (u < 12 || u > 14) ? "few" : "other"
                },
                rt = n,
                rr = n,
                rn = n,
                ri = (e, t) => "other",
                rs = (e, t) => {
                    let r = String(e).split("."),
                        n = !r[1],
                        i = Number(r[0]) == e,
                        s = i && r[0].slice(-1),
                        o = i && r[0].slice(-2);
                    return t ? (1 == s || 2 == s) && 11 != o && 12 != o ? "one" : "other" : 1 == e && n ? "one" : "other"
                },
                ro = o,
                ra = n,
                rl = n,
                ru = n,
                rc = n,
                rd = (e, t) => "other",
                rh = i,
                rf = n,
                rp = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e,
                        i = n && r[0].slice(-1);
                    return t ? 6 == i || 9 == i || 10 == e ? "few" : "other" : 1 == e ? "one" : "other"
                },
                rg = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = r[1] || "",
                        s = !r[1],
                        o = n.slice(-1),
                        a = i.slice(-1);
                    return t ? 1 == e ? "one" : "other" : s && (1 == n || 2 == n || 3 == n) || s && 4 != o && 6 != o && 9 != o || !s && 4 != a && 6 != a && 9 != a ? "one" : "other"
                },
                rm = n,
                ry = (e, t) => "other",
                rb = (e, t) => "other",
                rw = n,
                rA = n,
                rv = (e, t) => {
                    let r = String(e).split("."),
                        n = Number(r[0]) == e;
                    return t ? "other" : 0 == e || 1 == e || n && e >= 11 && e <= 99 ? "one" : "other"
                },
                rE = n,
                rP = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = Number(r[0]) == e,
                        o = s && r[0].slice(-1),
                        a = s && r[0].slice(-2),
                        l = n.slice(-1),
                        u = n.slice(-2);
                    return t ? 3 == o && 13 != a ? "few" : "other" : i && 1 == l && 11 != u ? "one" : i && l >= 2 && l <= 4 && (u < 12 || u > 14) ? "few" : i && 0 == l || i && l >= 5 && l <= 9 || i && u >= 11 && u <= 14 ? "many" : "other"
                },
                rS = (e, t) => "other",
                rO = o,
                rk = n,
                rC = n,
                rx = (e, t) => {
                    let r = String(e).split("."),
                        n = r[0],
                        i = !r[1],
                        s = n.slice(-6);
                    return t ? 11 == e || 8 == e || 80 == e || 800 == e ? "many" : "other" : 1 == e && i ? "one" : 0 != n && 0 == s && i ? "many" : "other"
                },
                rT = (e, t) => t && 1 == e ? "one" : "other",
                rN = n,
                r_ = n,
                rB = i,
                rD = n,
                rI = (e, t) => "other",
                rR = n,
                rM = n,
                rL = o,
                rU = (e, t) => "other",
                rj = (e, t) => "other",
                rF = (e, t) => "other",
                rH = s
        },
        45448: function(e, t, r) {
            "use strict";
            r.d(t, {
                E: function() {
                    return i
                }
            });
            var n = r(91786);

            function i(e = 0) {
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? (0, n.P)(globalThis.Buffer.allocUnsafe(e)) : new Uint8Array(e)
            }
        },
        75205: function(e, t, r) {
            "use strict";
            r.d(t, {
                z: function() {
                    return s
                }
            });
            var n = r(45448),
                i = r(91786);

            function s(e, t) {
                t || (t = e.reduce((e, t) => e + t.length, 0));
                let r = (0, n.E)(t),
                    s = 0;
                for (let t of e) r.set(t, s), s += t.length;
                return (0, i.P)(r)
            }
        },
        22600: function(e, t, r) {
            "use strict";
            r.d(t, {
                m: function() {
                    return s
                }
            });
            var n = r(73487),
                i = r(91786);

            function s(e, t = "utf8") {
                let r = n.Z[t];
                if (!r) throw Error(`Unsupported encoding "${t}"`);
                return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? (0, i.P)(globalThis.Buffer.from(e, "utf-8")) : r.decoder.decode(`${r.prefix}${e}`)
            }
        },
        82484: function(e, t, r) {
            "use strict";
            r.d(t, {
                BB: function() {
                    return s.B
                },
                mL: function() {
                    return i.m
                },
                zo: function() {
                    return n.z
                }
            });
            var n = r(75205),
                i = r(22600),
                s = r(52379)
        },
        52379: function(e, t, r) {
            "use strict";
            r.d(t, {
                B: function() {
                    return i
                }
            });
            var n = r(73487);

            function i(e, t = "utf8") {
                let r = n.Z[t];
                if (!r) throw Error(`Unsupported encoding "${t}"`);
                return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? globalThis.Buffer.from(e.buffer, e.byteOffset, e.byteLength).toString("utf8") : r.encoder.encode(e).substring(1)
            }
        },
        91786: function(e, t, r) {
            "use strict";

            function n(e) {
                return null != globalThis.Buffer ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : e
            }
            r.d(t, {
                P: function() {
                    return n
                }
            })
        },
        73487: function(e, t, r) {
            "use strict";
            r.d(t, {
                Z: function() {
                    return eq
                }
            });
            var n = {};
            r.r(n), r.d(n, {
                identity: function() {
                    return B
                }
            });
            var i = {};
            r.r(i), r.d(i, {
                base2: function() {
                    return D
                }
            });
            var s = {};
            r.r(s), r.d(s, {
                base8: function() {
                    return I
                }
            });
            var o = {};
            r.r(o), r.d(o, {
                base10: function() {
                    return R
                }
            });
            var a = {};
            r.r(a), r.d(a, {
                base16: function() {
                    return M
                },
                base16upper: function() {
                    return L
                }
            });
            var l = {};
            r.r(l), r.d(l, {
                base32: function() {
                    return U
                },
                base32hex: function() {
                    return $
                },
                base32hexpad: function() {
                    return z
                },
                base32hexpadupper: function() {
                    return V
                },
                base32hexupper: function() {
                    return K
                },
                base32pad: function() {
                    return F
                },
                base32padupper: function() {
                    return H
                },
                base32upper: function() {
                    return j
                },
                base32z: function() {
                    return G
                }
            });
            var u = {};
            r.r(u), r.d(u, {
                base36: function() {
                    return W
                },
                base36upper: function() {
                    return J
                }
            });
            var c = {};
            r.r(c), r.d(c, {
                base58btc: function() {
                    return q
                },
                base58flickr: function() {
                    return Q
                }
            });
            var d = {};
            r.r(d), r.d(d, {
                base64: function() {
                    return Y
                },
                base64pad: function() {
                    return Z
                },
                base64url: function() {
                    return X
                },
                base64urlpad: function() {
                    return ee
                }
            });
            var h = {};
            r.r(h), r.d(h, {
                base256emoji: function() {
                    return ei
                }
            });
            var f = {};
            r.r(f), r.d(f, {
                sha256: function() {
                    return eb
                },
                sha512: function() {
                    return ew
                }
            });
            var p = {};
            r.r(p), r.d(p, {
                identity: function() {
                    return eA
                }
            });
            var g = {};
            r.r(g), r.d(g, {
                code: function() {
                    return eE
                },
                decode: function() {
                    return eS
                },
                encode: function() {
                    return eP
                },
                name: function() {
                    return ev
                }
            });
            var m = {};
            r.r(m), r.d(m, {
                code: function() {
                    return ex
                },
                decode: function() {
                    return eN
                },
                encode: function() {
                    return eT
                },
                name: function() {
                    return eC
                }
            });
            var y = function(e, t) {
                if (e.length >= 255) throw TypeError("Alphabet too long");
                for (var r = new Uint8Array(256), n = 0; n < r.length; n++) r[n] = 255;
                for (var i = 0; i < e.length; i++) {
                    var s = e.charAt(i),
                        o = s.charCodeAt(0);
                    if (255 !== r[o]) throw TypeError(s + " is ambiguous");
                    r[o] = i
                }
                var a = e.length,
                    l = e.charAt(0),
                    u = Math.log(a) / Math.log(256),
                    c = Math.log(256) / Math.log(a);

                function d(e) {
                    if ("string" != typeof e) throw TypeError("Expected String");
                    if (0 === e.length) return new Uint8Array;
                    var t = 0;
                    if (" " !== e[0]) {
                        for (var n = 0, i = 0; e[t] === l;) n++, t++;
                        for (var s = (e.length - t) * u + 1 >>> 0, o = new Uint8Array(s); e[t];) {
                            var c = r[e.charCodeAt(t)];
                            if (255 === c) return;
                            for (var d = 0, h = s - 1;
                                (0 !== c || d < i) && -1 !== h; h--, d++) c += a * o[h] >>> 0, o[h] = c % 256 >>> 0, c = c / 256 >>> 0;
                            if (0 !== c) throw Error("Non-zero carry");
                            i = d, t++
                        }
                        if (" " !== e[t]) {
                            for (var f = s - i; f !== s && 0 === o[f];) f++;
                            for (var p = new Uint8Array(n + (s - f)), g = n; f !== s;) p[g++] = o[f++];
                            return p
                        }
                    }
                }
                return {
                    encode: function(t) {
                        if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw TypeError("Expected Uint8Array");
                        if (0 === t.length) return "";
                        for (var r = 0, n = 0, i = 0, s = t.length; i !== s && 0 === t[i];) i++, r++;
                        for (var o = (s - i) * c + 1 >>> 0, u = new Uint8Array(o); i !== s;) {
                            for (var d = t[i], h = 0, f = o - 1;
                                (0 !== d || h < n) && -1 !== f; f--, h++) d += 256 * u[f] >>> 0, u[f] = d % a >>> 0, d = d / a >>> 0;
                            if (0 !== d) throw Error("Non-zero carry");
                            n = h, i++
                        }
                        for (var p = o - n; p !== o && 0 === u[p];) p++;
                        for (var g = l.repeat(r); p < o; ++p) g += e.charAt(u[p]);
                        return g
                    },
                    decodeUnsafe: d,
                    decode: function(e) {
                        var r = d(e);
                        if (r) return r;
                        throw Error(`Non-${t} character`)
                    }
                }
            };
            new Uint8Array(0);
            let b = (e, t) => {
                    if (e === t) return !0;
                    if (e.byteLength !== t.byteLength) return !1;
                    for (let r = 0; r < e.byteLength; r++)
                        if (e[r] !== t[r]) return !1;
                    return !0
                },
                w = e => {
                    if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                    if (e instanceof ArrayBuffer) return new Uint8Array(e);
                    if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                    throw Error("Unknown type, must be binary type")
                },
                A = e => new TextEncoder().encode(e),
                v = e => new TextDecoder().decode(e);
            class E {
                constructor(e, t, r) {
                    this.name = e, this.prefix = t, this.baseEncode = r
                }
                encode(e) {
                    if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class P {
                constructor(e, t, r) {
                    if (this.name = e, this.prefix = t, void 0 === t.codePointAt(0)) throw Error("Invalid prefix character");
                    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r
                }
                decode(e) {
                    if ("string" == typeof e) {
                        if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(e.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(e) {
                    return O(this, e)
                }
            }
            class S {
                constructor(e) {
                    this.decoders = e
                }
                or(e) {
                    return O(this, e)
                }
                decode(e) {
                    let t = e[0],
                        r = this.decoders[t];
                    if (r) return r.decode(e);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            let O = (e, t) => new S({ ...e.decoders || {
                    [e.prefix]: e
                },
                ...t.decoders || {
                    [t.prefix]: t
                }
            });
            class k {
                constructor(e, t, r, n) {
                    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = n, this.encoder = new E(e, t, r), this.decoder = new P(e, t, n)
                }
                encode(e) {
                    return this.encoder.encode(e)
                }
                decode(e) {
                    return this.decoder.decode(e)
                }
            }
            let C = ({
                    name: e,
                    prefix: t,
                    encode: r,
                    decode: n
                }) => new k(e, t, r, n),
                x = ({
                    prefix: e,
                    name: t,
                    alphabet: r
                }) => {
                    let {
                        encode: n,
                        decode: i
                    } = y(r, t);
                    return C({
                        prefix: e,
                        name: t,
                        encode: n,
                        decode: e => w(i(e))
                    })
                },
                T = (e, t, r, n) => {
                    let i = {};
                    for (let e = 0; e < t.length; ++e) i[t[e]] = e;
                    let s = e.length;
                    for (;
                        "=" === e[s - 1];) --s;
                    let o = new Uint8Array(s * r / 8 | 0),
                        a = 0,
                        l = 0,
                        u = 0;
                    for (let t = 0; t < s; ++t) {
                        let s = i[e[t]];
                        if (void 0 === s) throw SyntaxError(`Non-${n} character`);
                        l = l << r | s, (a += r) >= 8 && (a -= 8, o[u++] = 255 & l >> a)
                    }
                    if (a >= r || 255 & l << 8 - a) throw SyntaxError("Unexpected end of data");
                    return o
                },
                N = (e, t, r) => {
                    let n = "=" === t[t.length - 1],
                        i = (1 << r) - 1,
                        s = "",
                        o = 0,
                        a = 0;
                    for (let n = 0; n < e.length; ++n)
                        for (a = a << 8 | e[n], o += 8; o > r;) o -= r, s += t[i & a >> o];
                    if (o && (s += t[i & a << r - o]), n)
                        for (; s.length * r & 7;) s += "=";
                    return s
                },
                _ = ({
                    name: e,
                    prefix: t,
                    bitsPerChar: r,
                    alphabet: n
                }) => C({
                    prefix: t,
                    name: e,
                    encode: e => N(e, n, r),
                    decode: t => T(t, n, r, e)
                }),
                B = C({
                    prefix: "\x00",
                    name: "identity",
                    encode: e => v(e),
                    decode: e => A(e)
                }),
                D = _({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                I = _({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                R = x({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                M = _({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                L = _({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                U = _({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                j = _({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                F = _({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                H = _({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                $ = _({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                K = _({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                z = _({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                V = _({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                G = _({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                W = x({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                J = x({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                q = x({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Q = x({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                Y = _({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                Z = _({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                X = _({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                ee = _({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                et = Array.from("\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"),
                er = et.reduce((e, t, r) => (e[r] = t, e), []),
                en = et.reduce((e, t, r) => (e[t.codePointAt(0)] = r, e), []),
                ei = C({
                    prefix: "\uD83D\uDE80",
                    name: "base256emoji",
                    encode: function(e) {
                        return e.reduce((e, t) => e += er[t], "")
                    },
                    decode: function(e) {
                        let t = [];
                        for (let r of e) {
                            let e = en[r.codePointAt(0)];
                            if (void 0 === e) throw Error(`Non-base256emoji character: ${r}`);
                            t.push(e)
                        }
                        return new Uint8Array(t)
                    }
                });

            function es(e, t, r) {
                t = t || [];
                for (var n = r = r || 0; e >= 2147483648;) t[r++] = 255 & e | 128, e /= 128;
                for (; - 128 & e;) t[r++] = 255 & e | 128, e >>>= 7;
                return t[r] = 0 | e, es.bytes = r - n + 1, t
            }

            function eo(e, t) {
                var r, n = 0,
                    t = t || 0,
                    i = 0,
                    s = t,
                    o = e.length;
                do {
                    if (s >= o) throw eo.bytes = 0, RangeError("Could not decode varint");
                    r = e[s++], n += i < 28 ? (127 & r) << i : (127 & r) * Math.pow(2, i), i += 7
                } while (r >= 128);
                return eo.bytes = s - t, n
            }
            var ea = {
                encode: es,
                decode: eo,
                encodingLength: function(e) {
                    return e < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : e < 34359738368 ? 5 : e < 4398046511104 ? 6 : e < 562949953421312 ? 7 : e < 72057594037927940 ? 8 : e < 0x7fffffffffffffff ? 9 : 10
                }
            };
            let el = (e, t = 0) => {
                    let r = ea.decode(e, t);
                    return [r, ea.decode.bytes]
                },
                eu = (e, t, r = 0) => (ea.encode(e, t, r), t),
                ec = e => ea.encodingLength(e),
                ed = (e, t) => {
                    let r = t.byteLength,
                        n = ec(e),
                        i = n + ec(r),
                        s = new Uint8Array(i + r);
                    return eu(e, s, 0), eu(r, s, n), s.set(t, i), new ep(e, r, t, s)
                },
                eh = e => {
                    let t = w(e),
                        [r, n] = el(t),
                        [i, s] = el(t.subarray(n)),
                        o = t.subarray(n + s);
                    if (o.byteLength !== i) throw Error("Incorrect length");
                    return new ep(r, i, o, t)
                },
                ef = (e, t) => e === t || e.code === t.code && e.size === t.size && b(e.bytes, t.bytes);
            class ep {
                constructor(e, t, r, n) {
                    this.code = e, this.size = t, this.digest = r, this.bytes = n
                }
            }
            let eg = ({
                name: e,
                code: t,
                encode: r
            }) => new em(e, t, r);
            class em {
                constructor(e, t, r) {
                    this.name = e, this.code = t, this.encode = r
                }
                digest(e) {
                    if (e instanceof Uint8Array) {
                        let t = this.encode(e);
                        return t instanceof Uint8Array ? ed(this.code, t) : t.then(e => ed(this.code, e))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            let ey = e => async t => new Uint8Array(await crypto.subtle.digest(e, t)),
                eb = eg({
                    name: "sha2-256",
                    code: 18,
                    encode: ey("SHA-256")
                }),
                ew = eg({
                    name: "sha2-512",
                    code: 19,
                    encode: ey("SHA-512")
                }),
                eA = {
                    code: 0,
                    name: "identity",
                    encode: w,
                    digest: e => ed(0, w(e))
                },
                ev = "raw",
                eE = 85,
                eP = e => w(e),
                eS = e => w(e),
                eO = new TextEncoder,
                ek = new TextDecoder,
                eC = "json",
                ex = 512,
                eT = e => eO.encode(JSON.stringify(e)),
                eN = e => JSON.parse(ek.decode(e));
            class e_ {
                constructor(e, t, r, n) {
                    this.code = t, this.version = e, this.multihash = r, this.bytes = n, this.byteOffset = n.byteOffset, this.byteLength = n.byteLength, this.asCID = this, this._baseCache = new Map, Object.defineProperties(this, {
                        byteOffset: eF,
                        byteLength: eF,
                        code: ej,
                        version: ej,
                        multihash: ej,
                        bytes: ej,
                        _baseCache: eF,
                        asCID: eF
                    })
                }
                toV0() {
                    if (0 === this.version) return this; {
                        let {
                            code: e,
                            multihash: t
                        } = this;
                        if (e !== eR) throw Error("Cannot convert a non dag-pb CID to CIDv0");
                        if (t.code !== eM) throw Error("Cannot convert non sha2-256 multihash CID to CIDv0");
                        return e_.createV0(t)
                    }
                }
                toV1() {
                    switch (this.version) {
                        case 0:
                            {
                                let {
                                    code: e,
                                    digest: t
                                } = this.multihash,
                                r = ed(e, t);
                                return e_.createV1(this.code, r)
                            }
                        case 1:
                            return this;
                        default:
                            throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)
                    }
                }
                equals(e) {
                    return e && this.code === e.code && this.version === e.version && ef(this.multihash, e.multihash)
                }
                toString(e) {
                    let {
                        bytes: t,
                        version: r,
                        _baseCache: n
                    } = this;
                    return 0 === r ? eD(t, n, e || q.encoder) : eI(t, n, e || U.encoder)
                }
                toJSON() {
                    return {
                        code: this.code,
                        version: this.version,
                        hash: this.multihash.bytes
                    }
                }
                get[Symbol.toStringTag]() {
                    return "CID"
                }[Symbol.for("nodejs.util.inspect.custom")]() {
                    return "CID(" + this.toString() + ")"
                }
                static isCID(e) {
                    return eH(/^0\.0/, e$), !!(e && (e[eU] || e.asCID === e))
                }
                get toBaseEncodedString() {
                    throw Error("Deprecated, use .toString()")
                }
                get codec() {
                    throw Error('"codec" property is deprecated, use integer "code" property instead')
                }
                get buffer() {
                    throw Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")
                }
                get multibaseName() {
                    throw Error('"multibaseName" property is deprecated')
                }
                get prefix() {
                    throw Error('"prefix" property is deprecated')
                }
                static asCID(e) {
                    if (e instanceof e_) return e;
                    if (null != e && e.asCID === e) {
                        let {
                            version: t,
                            code: r,
                            multihash: n,
                            bytes: i
                        } = e;
                        return new e_(t, r, n, i || eL(t, r, n.bytes))
                    }
                    if (null == e || !0 !== e[eU]) return null; {
                        let {
                            version: t,
                            multihash: r,
                            code: n
                        } = e, i = eh(r);
                        return e_.create(t, n, i)
                    }
                }
                static create(e, t, r) {
                    if ("number" != typeof t) throw Error("String codecs are no longer supported");
                    switch (e) {
                        case 0:
                            if (t === eR) return new e_(e, t, r, r.bytes);
                            throw Error(`Version 0 CID must use dag-pb (code: ${eR}) block encoding`);
                        case 1:
                            {
                                let n = eL(e, t, r.bytes);
                                return new e_(e, t, r, n)
                            }
                        default:
                            throw Error("Invalid version")
                    }
                }
                static createV0(e) {
                    return e_.create(0, eR, e)
                }
                static createV1(e, t) {
                    return e_.create(1, e, t)
                }
                static decode(e) {
                    let [t, r] = e_.decodeFirst(e);
                    if (r.length) throw Error("Incorrect length");
                    return t
                }
                static decodeFirst(e) {
                    let t = e_.inspectBytes(e),
                        r = t.size - t.multihashSize,
                        n = w(e.subarray(r, r + t.multihashSize));
                    if (n.byteLength !== t.multihashSize) throw Error("Incorrect length");
                    let i = n.subarray(t.multihashSize - t.digestSize),
                        s = new ep(t.multihashCode, t.digestSize, i, n),
                        o = 0 === t.version ? e_.createV0(s) : e_.createV1(t.codec, s);
                    return [o, e.subarray(t.size)]
                }
                static inspectBytes(e) {
                    let t = 0,
                        r = () => {
                            let [r, n] = el(e.subarray(t));
                            return t += n, r
                        },
                        n = r(),
                        i = eR;
                    if (18 === n ? (n = 0, t = 0) : 1 === n && (i = r()), 0 !== n && 1 !== n) throw RangeError(`Invalid CID version ${n}`);
                    let s = t,
                        o = r(),
                        a = r(),
                        l = t + a;
                    return {
                        version: n,
                        codec: i,
                        multihashCode: o,
                        digestSize: a,
                        multihashSize: l - s,
                        size: l
                    }
                }
                static parse(e, t) {
                    let [r, n] = eB(e, t), i = e_.decode(n);
                    return i._baseCache.set(r, e), i
                }
            }
            let eB = (e, t) => {
                    switch (e[0]) {
                        case "Q":
                            return [q.prefix, (t || q).decode(`${q.prefix}${e}`)];
                        case q.prefix:
                            return [q.prefix, (t || q).decode(e)];
                        case U.prefix:
                            return [U.prefix, (t || U).decode(e)];
                        default:
                            if (null == t) throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
                            return [e[0], t.decode(e)]
                    }
                },
                eD = (e, t, r) => {
                    let {
                        prefix: n
                    } = r;
                    if (n !== q.prefix) throw Error(`Cannot string encode V0 in ${r.name} encoding`);
                    let i = t.get(n);
                    if (null != i) return i; {
                        let i = r.encode(e).slice(1);
                        return t.set(n, i), i
                    }
                },
                eI = (e, t, r) => {
                    let {
                        prefix: n
                    } = r, i = t.get(n);
                    if (null != i) return i; {
                        let i = r.encode(e);
                        return t.set(n, i), i
                    }
                },
                eR = 112,
                eM = 18,
                eL = (e, t, r) => {
                    let n = ec(e),
                        i = n + ec(t),
                        s = new Uint8Array(i + r.byteLength);
                    return eu(e, s, 0), eu(t, s, n), s.set(r, i), s
                },
                eU = Symbol.for("@ipld/js-cid/CID"),
                ej = {
                    writable: !1,
                    configurable: !1,
                    enumerable: !0
                },
                eF = {
                    writable: !1,
                    enumerable: !1,
                    configurable: !1
                },
                eH = (e, t) => {
                    if (e.test("0.0.0-dev")) console.warn(t);
                    else throw Error(t)
                },
                e$ = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,
                eK = { ...n,
                    ...i,
                    ...s,
                    ...o,
                    ...a,
                    ...l,
                    ...u,
                    ...c,
                    ...d,
                    ...h
                };
            ({ ...f,
                ...p
            });
            var ez = r(45448);

            function eV(e, t, r, n) {
                return {
                    name: e,
                    prefix: t,
                    encoder: {
                        name: e,
                        prefix: t,
                        encode: r
                    },
                    decoder: {
                        decode: n
                    }
                }
            }
            let eG = eV("utf8", "u", e => {
                    let t = new TextDecoder("utf8");
                    return "u" + t.decode(e)
                }, e => {
                    let t = new TextEncoder;
                    return t.encode(e.substring(1))
                }),
                eW = eV("ascii", "a", e => {
                    let t = "a";
                    for (let r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
                    return t
                }, e => {
                    e = e.substring(1);
                    let t = (0, ez.E)(e.length);
                    for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
                    return t
                }),
                eJ = {
                    utf8: eG,
                    "utf-8": eG,
                    hex: eK.base16,
                    latin1: eW,
                    ascii: eW,
                    binary: eW,
                    ...eK
                };
            var eq = eJ
        },
        34933: function(e, t, r) {
            "use strict";
            r.d(t, {
                d: function() {
                    return i
                }
            });
            var n = r(73980);
            let i = (0, n.ax)({
                id: 1337,
                name: "Localhost",
                network: "localhost",
                nativeCurrency: {
                    decimals: 18,
                    name: "Ether",
                    symbol: "ETH"
                },
                rpcUrls: {
                    default: {
                        http: ["http://127.0.0.1:8545"]
                    },
                    public: {
                        http: ["http://127.0.0.1:8545"]
                    }
                }
            })
        },
        64030: function(e, t, r) {
            "use strict";
            r.d(t, {
                V: function() {
                    return i
                }
            });
            var n = r(73980);
            let i = (0, n.ax)({
                id: 204,
                name: "opBNB",
                network: "opBNB Mainnet",
                nativeCurrency: {
                    name: "BNB",
                    symbol: "BNB",
                    decimals: 18
                },
                rpcUrls: {
                    public: {
                        http: ["https://opbnb-mainnet-rpc.bnbchain.org"]
                    },
                    default: {
                        http: ["https://opbnb-mainnet-rpc.bnbchain.org"]
                    }
                },
                blockExplorers: {
                    default: {
                        name: "opbnbscan",
                        url: "https://mainnet.opbnbscan.com"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xcA11bde05977b3631167028862bE2a173976CA11",
                        blockCreated: 512881
                    }
                }
            })
        },
        57922: function(e, t, r) {
            "use strict";
            r.d(t, {
                a: function() {
                    return i
                }
            });
            var n = r(73980);
            let i = (0, n.ax)({
                id: 5611,
                name: "opBNB Testnet",
                network: "opBNB Testnet",
                nativeCurrency: {
                    decimals: 18,
                    name: "tBNB",
                    symbol: "tBNB"
                },
                rpcUrls: {
                    public: {
                        http: ["https://opbnb-testnet-rpc.bnbchain.org"]
                    },
                    default: {
                        http: ["https://opbnb-testnet-rpc.bnbchain.org"]
                    }
                },
                blockExplorers: {
                    default: {
                        name: "opbnbscan",
                        url: "https://opbnbscan.com"
                    }
                },
                contracts: {
                    multicall3: {
                        address: "0xcA11bde05977b3631167028862bE2a173976CA11",
                        blockCreated: 3705108
                    }
                },
                testnet: !0
            })
        }
    }
]);